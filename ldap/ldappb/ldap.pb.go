// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ldap/ldappb/ldap.proto

package ldappb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Connection struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Host                 string   `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	User                 string   `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	Password             string   `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	Port                 int32    `protobuf:"varint,5,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Connection) Reset()         { *m = Connection{} }
func (m *Connection) String() string { return proto.CompactTextString(m) }
func (*Connection) ProtoMessage()    {}
func (*Connection) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8ab8e4ba540045e, []int{0}
}

func (m *Connection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Connection.Unmarshal(m, b)
}
func (m *Connection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Connection.Marshal(b, m, deterministic)
}
func (m *Connection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Connection.Merge(m, src)
}
func (m *Connection) XXX_Size() int {
	return xxx_messageInfo_Connection.Size(m)
}
func (m *Connection) XXX_DiscardUnknown() {
	xxx_messageInfo_Connection.DiscardUnknown(m)
}

var xxx_messageInfo_Connection proto.InternalMessageInfo

func (m *Connection) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Connection) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *Connection) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *Connection) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *Connection) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

// Create connection
type CreateConnectionRqst struct {
	Connection           *Connection `protobuf:"bytes,1,opt,name=connection,proto3" json:"connection,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CreateConnectionRqst) Reset()         { *m = CreateConnectionRqst{} }
func (m *CreateConnectionRqst) String() string { return proto.CompactTextString(m) }
func (*CreateConnectionRqst) ProtoMessage()    {}
func (*CreateConnectionRqst) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8ab8e4ba540045e, []int{1}
}

func (m *CreateConnectionRqst) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateConnectionRqst.Unmarshal(m, b)
}
func (m *CreateConnectionRqst) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateConnectionRqst.Marshal(b, m, deterministic)
}
func (m *CreateConnectionRqst) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateConnectionRqst.Merge(m, src)
}
func (m *CreateConnectionRqst) XXX_Size() int {
	return xxx_messageInfo_CreateConnectionRqst.Size(m)
}
func (m *CreateConnectionRqst) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateConnectionRqst.DiscardUnknown(m)
}

var xxx_messageInfo_CreateConnectionRqst proto.InternalMessageInfo

func (m *CreateConnectionRqst) GetConnection() *Connection {
	if m != nil {
		return m.Connection
	}
	return nil
}

type CreateConnectionRsp struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateConnectionRsp) Reset()         { *m = CreateConnectionRsp{} }
func (m *CreateConnectionRsp) String() string { return proto.CompactTextString(m) }
func (*CreateConnectionRsp) ProtoMessage()    {}
func (*CreateConnectionRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8ab8e4ba540045e, []int{2}
}

func (m *CreateConnectionRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateConnectionRsp.Unmarshal(m, b)
}
func (m *CreateConnectionRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateConnectionRsp.Marshal(b, m, deterministic)
}
func (m *CreateConnectionRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateConnectionRsp.Merge(m, src)
}
func (m *CreateConnectionRsp) XXX_Size() int {
	return xxx_messageInfo_CreateConnectionRsp.Size(m)
}
func (m *CreateConnectionRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateConnectionRsp.DiscardUnknown(m)
}

var xxx_messageInfo_CreateConnectionRsp proto.InternalMessageInfo

func (m *CreateConnectionRsp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

// Delete connection
type DeleteConnectionRqst struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteConnectionRqst) Reset()         { *m = DeleteConnectionRqst{} }
func (m *DeleteConnectionRqst) String() string { return proto.CompactTextString(m) }
func (*DeleteConnectionRqst) ProtoMessage()    {}
func (*DeleteConnectionRqst) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8ab8e4ba540045e, []int{3}
}

func (m *DeleteConnectionRqst) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteConnectionRqst.Unmarshal(m, b)
}
func (m *DeleteConnectionRqst) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteConnectionRqst.Marshal(b, m, deterministic)
}
func (m *DeleteConnectionRqst) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteConnectionRqst.Merge(m, src)
}
func (m *DeleteConnectionRqst) XXX_Size() int {
	return xxx_messageInfo_DeleteConnectionRqst.Size(m)
}
func (m *DeleteConnectionRqst) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteConnectionRqst.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteConnectionRqst proto.InternalMessageInfo

func (m *DeleteConnectionRqst) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeleteConnectionRsp struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteConnectionRsp) Reset()         { *m = DeleteConnectionRsp{} }
func (m *DeleteConnectionRsp) String() string { return proto.CompactTextString(m) }
func (*DeleteConnectionRsp) ProtoMessage()    {}
func (*DeleteConnectionRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8ab8e4ba540045e, []int{4}
}

func (m *DeleteConnectionRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteConnectionRsp.Unmarshal(m, b)
}
func (m *DeleteConnectionRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteConnectionRsp.Marshal(b, m, deterministic)
}
func (m *DeleteConnectionRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteConnectionRsp.Merge(m, src)
}
func (m *DeleteConnectionRsp) XXX_Size() int {
	return xxx_messageInfo_DeleteConnectionRsp.Size(m)
}
func (m *DeleteConnectionRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteConnectionRsp.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteConnectionRsp proto.InternalMessageInfo

func (m *DeleteConnectionRsp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

// Close connection.
type CloseRqst struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloseRqst) Reset()         { *m = CloseRqst{} }
func (m *CloseRqst) String() string { return proto.CompactTextString(m) }
func (*CloseRqst) ProtoMessage()    {}
func (*CloseRqst) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8ab8e4ba540045e, []int{5}
}

func (m *CloseRqst) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseRqst.Unmarshal(m, b)
}
func (m *CloseRqst) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseRqst.Marshal(b, m, deterministic)
}
func (m *CloseRqst) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseRqst.Merge(m, src)
}
func (m *CloseRqst) XXX_Size() int {
	return xxx_messageInfo_CloseRqst.Size(m)
}
func (m *CloseRqst) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseRqst.DiscardUnknown(m)
}

var xxx_messageInfo_CloseRqst proto.InternalMessageInfo

func (m *CloseRqst) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type CloseRsp struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloseRsp) Reset()         { *m = CloseRsp{} }
func (m *CloseRsp) String() string { return proto.CompactTextString(m) }
func (*CloseRsp) ProtoMessage()    {}
func (*CloseRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8ab8e4ba540045e, []int{6}
}

func (m *CloseRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseRsp.Unmarshal(m, b)
}
func (m *CloseRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseRsp.Marshal(b, m, deterministic)
}
func (m *CloseRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseRsp.Merge(m, src)
}
func (m *CloseRsp) XXX_Size() int {
	return xxx_messageInfo_CloseRsp.Size(m)
}
func (m *CloseRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseRsp.DiscardUnknown(m)
}

var xxx_messageInfo_CloseRsp proto.InternalMessageInfo

func (m *CloseRsp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type Search struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	BaseDN               string   `protobuf:"bytes,2,opt,name=baseDN,proto3" json:"baseDN,omitempty"`
	Filter               string   `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	Attributes           []string `protobuf:"bytes,4,rep,name=attributes,proto3" json:"attributes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Search) Reset()         { *m = Search{} }
func (m *Search) String() string { return proto.CompactTextString(m) }
func (*Search) ProtoMessage()    {}
func (*Search) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8ab8e4ba540045e, []int{7}
}

func (m *Search) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Search.Unmarshal(m, b)
}
func (m *Search) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Search.Marshal(b, m, deterministic)
}
func (m *Search) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Search.Merge(m, src)
}
func (m *Search) XXX_Size() int {
	return xxx_messageInfo_Search.Size(m)
}
func (m *Search) XXX_DiscardUnknown() {
	xxx_messageInfo_Search.DiscardUnknown(m)
}

var xxx_messageInfo_Search proto.InternalMessageInfo

func (m *Search) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Search) GetBaseDN() string {
	if m != nil {
		return m.BaseDN
	}
	return ""
}

func (m *Search) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

func (m *Search) GetAttributes() []string {
	if m != nil {
		return m.Attributes
	}
	return nil
}

type SearchRqst struct {
	Search               *Search  `protobuf:"bytes,1,opt,name=search,proto3" json:"search,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchRqst) Reset()         { *m = SearchRqst{} }
func (m *SearchRqst) String() string { return proto.CompactTextString(m) }
func (*SearchRqst) ProtoMessage()    {}
func (*SearchRqst) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8ab8e4ba540045e, []int{8}
}

func (m *SearchRqst) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRqst.Unmarshal(m, b)
}
func (m *SearchRqst) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRqst.Marshal(b, m, deterministic)
}
func (m *SearchRqst) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRqst.Merge(m, src)
}
func (m *SearchRqst) XXX_Size() int {
	return xxx_messageInfo_SearchRqst.Size(m)
}
func (m *SearchRqst) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRqst.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRqst proto.InternalMessageInfo

func (m *SearchRqst) GetSearch() *Search {
	if m != nil {
		return m.Search
	}
	return nil
}

type SearchResp struct {
	Result               string   `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchResp) Reset()         { *m = SearchResp{} }
func (m *SearchResp) String() string { return proto.CompactTextString(m) }
func (*SearchResp) ProtoMessage()    {}
func (*SearchResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8ab8e4ba540045e, []int{9}
}

func (m *SearchResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchResp.Unmarshal(m, b)
}
func (m *SearchResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchResp.Marshal(b, m, deterministic)
}
func (m *SearchResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchResp.Merge(m, src)
}
func (m *SearchResp) XXX_Size() int {
	return xxx_messageInfo_SearchResp.Size(m)
}
func (m *SearchResp) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchResp.DiscardUnknown(m)
}

var xxx_messageInfo_SearchResp proto.InternalMessageInfo

func (m *SearchResp) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

// Authenticate request.
type AuthenticateRqst struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Login                string   `protobuf:"bytes,2,opt,name=login,proto3" json:"login,omitempty"`
	Pwd                  string   `protobuf:"bytes,3,opt,name=pwd,proto3" json:"pwd,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthenticateRqst) Reset()         { *m = AuthenticateRqst{} }
func (m *AuthenticateRqst) String() string { return proto.CompactTextString(m) }
func (*AuthenticateRqst) ProtoMessage()    {}
func (*AuthenticateRqst) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8ab8e4ba540045e, []int{10}
}

func (m *AuthenticateRqst) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthenticateRqst.Unmarshal(m, b)
}
func (m *AuthenticateRqst) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthenticateRqst.Marshal(b, m, deterministic)
}
func (m *AuthenticateRqst) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthenticateRqst.Merge(m, src)
}
func (m *AuthenticateRqst) XXX_Size() int {
	return xxx_messageInfo_AuthenticateRqst.Size(m)
}
func (m *AuthenticateRqst) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthenticateRqst.DiscardUnknown(m)
}

var xxx_messageInfo_AuthenticateRqst proto.InternalMessageInfo

func (m *AuthenticateRqst) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AuthenticateRqst) GetLogin() string {
	if m != nil {
		return m.Login
	}
	return ""
}

func (m *AuthenticateRqst) GetPwd() string {
	if m != nil {
		return m.Pwd
	}
	return ""
}

type AuthenticateRsp struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthenticateRsp) Reset()         { *m = AuthenticateRsp{} }
func (m *AuthenticateRsp) String() string { return proto.CompactTextString(m) }
func (*AuthenticateRsp) ProtoMessage()    {}
func (*AuthenticateRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8ab8e4ba540045e, []int{11}
}

func (m *AuthenticateRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthenticateRsp.Unmarshal(m, b)
}
func (m *AuthenticateRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthenticateRsp.Marshal(b, m, deterministic)
}
func (m *AuthenticateRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthenticateRsp.Merge(m, src)
}
func (m *AuthenticateRsp) XXX_Size() int {
	return xxx_messageInfo_AuthenticateRsp.Size(m)
}
func (m *AuthenticateRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthenticateRsp.DiscardUnknown(m)
}

var xxx_messageInfo_AuthenticateRsp proto.InternalMessageInfo

func (m *AuthenticateRsp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func init() {
	proto.RegisterType((*Connection)(nil), "ldap.Connection")
	proto.RegisterType((*CreateConnectionRqst)(nil), "ldap.CreateConnectionRqst")
	proto.RegisterType((*CreateConnectionRsp)(nil), "ldap.CreateConnectionRsp")
	proto.RegisterType((*DeleteConnectionRqst)(nil), "ldap.DeleteConnectionRqst")
	proto.RegisterType((*DeleteConnectionRsp)(nil), "ldap.DeleteConnectionRsp")
	proto.RegisterType((*CloseRqst)(nil), "ldap.CloseRqst")
	proto.RegisterType((*CloseRsp)(nil), "ldap.CloseRsp")
	proto.RegisterType((*Search)(nil), "ldap.Search")
	proto.RegisterType((*SearchRqst)(nil), "ldap.SearchRqst")
	proto.RegisterType((*SearchResp)(nil), "ldap.SearchResp")
	proto.RegisterType((*AuthenticateRqst)(nil), "ldap.AuthenticateRqst")
	proto.RegisterType((*AuthenticateRsp)(nil), "ldap.AuthenticateRsp")
}

func init() { proto.RegisterFile("ldap/ldappb/ldap.proto", fileDescriptor_e8ab8e4ba540045e) }

var fileDescriptor_e8ab8e4ba540045e = []byte{
	// 451 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x54, 0x4d, 0x8f, 0xd3, 0x30,
	0x10, 0xdd, 0x7e, 0x45, 0xed, 0xec, 0x6a, 0x37, 0x32, 0xa5, 0x0a, 0x41, 0x42, 0x95, 0xb5, 0x42,
	0x05, 0x89, 0x82, 0xca, 0x0f, 0x40, 0xd0, 0x3d, 0x20, 0x40, 0x1c, 0xb2, 0x37, 0x6e, 0x6e, 0x32,
	0x10, 0x4b, 0x51, 0x6c, 0x6c, 0x87, 0xfd, 0x83, 0xfc, 0x30, 0x64, 0xc7, 0x0d, 0x69, 0x92, 0xed,
	0xa5, 0x9d, 0x79, 0x7e, 0x79, 0xe3, 0x99, 0x79, 0x32, 0xac, 0x8a, 0x8c, 0xc9, 0xb7, 0xf6, 0x47,
	0x1e, 0xdc, 0xdf, 0x56, 0x2a, 0x61, 0x04, 0x99, 0xda, 0x98, 0x1a, 0x80, 0xbd, 0x28, 0x4b, 0x4c,
	0x0d, 0x17, 0x25, 0xb9, 0x86, 0x31, 0xcf, 0xa2, 0xd1, 0x7a, 0xb4, 0x59, 0x24, 0x63, 0x9e, 0x11,
	0x02, 0xd3, 0x5c, 0x68, 0x13, 0x8d, 0x1d, 0xe2, 0x62, 0x8b, 0x55, 0x1a, 0x55, 0x34, 0xa9, 0x31,
	0x1b, 0x93, 0x18, 0xe6, 0x92, 0x69, 0xfd, 0x20, 0x54, 0x16, 0x4d, 0x1d, 0xde, 0xe4, 0x96, 0x2f,
	0x85, 0x32, 0xd1, 0x6c, 0x3d, 0xda, 0xcc, 0x12, 0x17, 0xd3, 0xcf, 0xb0, 0xdc, 0x2b, 0x64, 0x06,
	0xff, 0xd7, 0x4e, 0x7e, 0x6b, 0x43, 0xde, 0x01, 0xa4, 0x0d, 0xe2, 0xee, 0x71, 0xb9, 0x0b, 0xb7,
	0xee, 0xd2, 0x2d, 0x66, 0x8b, 0x43, 0xdf, 0xc0, 0x93, 0x9e, 0x92, 0x96, 0x64, 0x05, 0x81, 0x42,
	0x5d, 0x15, 0xc6, 0x89, 0xcc, 0x13, 0x9f, 0xd1, 0x97, 0xb0, 0xbc, 0xc3, 0x02, 0x7b, 0x85, 0x3b,
	0x8d, 0x5b, 0xd9, 0x1e, 0xef, 0x8c, 0xec, 0x73, 0x58, 0xec, 0x0b, 0xa1, 0x71, 0x50, 0x8b, 0xc2,
	0xbc, 0x3e, 0x3c, 0x23, 0x90, 0x43, 0x70, 0x8f, 0x4c, 0xa5, 0x79, 0x6f, 0x05, 0x2b, 0x08, 0x0e,
	0x4c, 0xe3, 0xdd, 0x77, 0xbf, 0x04, 0x9f, 0x59, 0xfc, 0x27, 0x2f, 0x4c, 0xb3, 0x08, 0x9f, 0x91,
	0x17, 0x00, 0xcc, 0x18, 0xc5, 0x0f, 0x95, 0x41, 0x1d, 0x4d, 0xd7, 0x93, 0xcd, 0x22, 0x69, 0x21,
	0x74, 0x07, 0x50, 0x57, 0x72, 0x77, 0xbd, 0x85, 0x40, 0xbb, 0xcc, 0x0f, 0xfb, 0xaa, 0x1e, 0xb6,
	0x67, 0xf8, 0x33, 0x7a, 0xdb, 0x7c, 0x83, 0xbd, 0x1e, 0x16, 0x4d, 0x0f, 0x5f, 0x20, 0xfc, 0x58,
	0x99, 0x1c, 0x4b, 0xc3, 0x53, 0x66, 0x06, 0x67, 0x41, 0x96, 0x30, 0x2b, 0xc4, 0x2f, 0x5e, 0xfa,
	0x66, 0xea, 0x84, 0x84, 0x30, 0x91, 0x0f, 0x99, 0x6f, 0xc4, 0x86, 0xf4, 0x15, 0xdc, 0x9c, 0x68,
	0x3d, 0x3e, 0xba, 0xdd, 0xdf, 0x31, 0x5c, 0x7e, 0xcb, 0x98, 0xbc, 0x47, 0xf5, 0x87, 0xa7, 0x48,
	0xbe, 0x42, 0xd8, 0x75, 0x04, 0x89, 0xbd, 0x87, 0x06, 0x3c, 0x17, 0x3f, 0x7b, 0xe4, 0x4c, 0x4b,
	0x7a, 0x61, 0xc5, 0xba, 0x3e, 0x38, 0x8a, 0x0d, 0xf9, 0xe8, 0x28, 0x36, 0xe0, 0x1d, 0x7a, 0x41,
	0x5e, 0xc3, 0xcc, 0x19, 0x81, 0xdc, 0xf8, 0x92, 0x47, 0xcb, 0xc4, 0xd7, 0x6d, 0xc0, 0x71, 0xb7,
	0x8d, 0x21, 0xc2, 0x93, 0x95, 0x58, 0xf6, 0x29, 0x82, 0x8e, 0xff, 0x01, 0xae, 0xda, 0x03, 0x23,
	0xab, 0x9a, 0xd3, 0x5d, 0x48, 0xfc, 0x74, 0x00, 0xb7, 0x02, 0x9f, 0xe6, 0x3f, 0x82, 0xfa, 0x8d,
	0x38, 0x04, 0xee, 0x7d, 0x78, 0xff, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x37, 0xec, 0x1f, 0x30, 0x39,
	0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LdapServiceClient is the client API for LdapService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LdapServiceClient interface {
	// Create a connection.
	CreateConnection(ctx context.Context, in *CreateConnectionRqst, opts ...grpc.CallOption) (*CreateConnectionRsp, error)
	// Delete a connection.
	DeleteConnection(ctx context.Context, in *DeleteConnectionRqst, opts ...grpc.CallOption) (*DeleteConnectionRsp, error)
	// Close connection. * Open is create at search time. But close must
	// be explicitly call when the connection is no more use.
	Close(ctx context.Context, in *CloseRqst, opts ...grpc.CallOption) (*CloseRsp, error)
	// Search over LDAP server
	Search(ctx context.Context, in *SearchRqst, opts ...grpc.CallOption) (*SearchResp, error)
	// Authenticate a user to a given ldap server (connection id)
	Authenticate(ctx context.Context, in *AuthenticateRqst, opts ...grpc.CallOption) (*AuthenticateRsp, error)
}

type ldapServiceClient struct {
	cc *grpc.ClientConn
}

func NewLdapServiceClient(cc *grpc.ClientConn) LdapServiceClient {
	return &ldapServiceClient{cc}
}

func (c *ldapServiceClient) CreateConnection(ctx context.Context, in *CreateConnectionRqst, opts ...grpc.CallOption) (*CreateConnectionRsp, error) {
	out := new(CreateConnectionRsp)
	err := c.cc.Invoke(ctx, "/ldap.LdapService/CreateConnection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ldapServiceClient) DeleteConnection(ctx context.Context, in *DeleteConnectionRqst, opts ...grpc.CallOption) (*DeleteConnectionRsp, error) {
	out := new(DeleteConnectionRsp)
	err := c.cc.Invoke(ctx, "/ldap.LdapService/DeleteConnection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ldapServiceClient) Close(ctx context.Context, in *CloseRqst, opts ...grpc.CallOption) (*CloseRsp, error) {
	out := new(CloseRsp)
	err := c.cc.Invoke(ctx, "/ldap.LdapService/Close", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ldapServiceClient) Search(ctx context.Context, in *SearchRqst, opts ...grpc.CallOption) (*SearchResp, error) {
	out := new(SearchResp)
	err := c.cc.Invoke(ctx, "/ldap.LdapService/Search", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ldapServiceClient) Authenticate(ctx context.Context, in *AuthenticateRqst, opts ...grpc.CallOption) (*AuthenticateRsp, error) {
	out := new(AuthenticateRsp)
	err := c.cc.Invoke(ctx, "/ldap.LdapService/Authenticate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LdapServiceServer is the server API for LdapService service.
type LdapServiceServer interface {
	// Create a connection.
	CreateConnection(context.Context, *CreateConnectionRqst) (*CreateConnectionRsp, error)
	// Delete a connection.
	DeleteConnection(context.Context, *DeleteConnectionRqst) (*DeleteConnectionRsp, error)
	// Close connection. * Open is create at search time. But close must
	// be explicitly call when the connection is no more use.
	Close(context.Context, *CloseRqst) (*CloseRsp, error)
	// Search over LDAP server
	Search(context.Context, *SearchRqst) (*SearchResp, error)
	// Authenticate a user to a given ldap server (connection id)
	Authenticate(context.Context, *AuthenticateRqst) (*AuthenticateRsp, error)
}

// UnimplementedLdapServiceServer can be embedded to have forward compatible implementations.
type UnimplementedLdapServiceServer struct {
}

func (*UnimplementedLdapServiceServer) CreateConnection(ctx context.Context, req *CreateConnectionRqst) (*CreateConnectionRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateConnection not implemented")
}
func (*UnimplementedLdapServiceServer) DeleteConnection(ctx context.Context, req *DeleteConnectionRqst) (*DeleteConnectionRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteConnection not implemented")
}
func (*UnimplementedLdapServiceServer) Close(ctx context.Context, req *CloseRqst) (*CloseRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Close not implemented")
}
func (*UnimplementedLdapServiceServer) Search(ctx context.Context, req *SearchRqst) (*SearchResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Search not implemented")
}
func (*UnimplementedLdapServiceServer) Authenticate(ctx context.Context, req *AuthenticateRqst) (*AuthenticateRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Authenticate not implemented")
}

func RegisterLdapServiceServer(s *grpc.Server, srv LdapServiceServer) {
	s.RegisterService(&_LdapService_serviceDesc, srv)
}

func _LdapService_CreateConnection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateConnectionRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LdapServiceServer).CreateConnection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ldap.LdapService/CreateConnection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LdapServiceServer).CreateConnection(ctx, req.(*CreateConnectionRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _LdapService_DeleteConnection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteConnectionRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LdapServiceServer).DeleteConnection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ldap.LdapService/DeleteConnection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LdapServiceServer).DeleteConnection(ctx, req.(*DeleteConnectionRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _LdapService_Close_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloseRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LdapServiceServer).Close(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ldap.LdapService/Close",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LdapServiceServer).Close(ctx, req.(*CloseRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _LdapService_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LdapServiceServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ldap.LdapService/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LdapServiceServer).Search(ctx, req.(*SearchRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _LdapService_Authenticate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthenticateRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LdapServiceServer).Authenticate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ldap.LdapService/Authenticate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LdapServiceServer).Authenticate(ctx, req.(*AuthenticateRqst))
	}
	return interceptor(ctx, in, info, handler)
}

var _LdapService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ldap.LdapService",
	HandlerType: (*LdapServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateConnection",
			Handler:    _LdapService_CreateConnection_Handler,
		},
		{
			MethodName: "DeleteConnection",
			Handler:    _LdapService_DeleteConnection_Handler,
		},
		{
			MethodName: "Close",
			Handler:    _LdapService_Close_Handler,
		},
		{
			MethodName: "Search",
			Handler:    _LdapService_Search_Handler,
		},
		{
			MethodName: "Authenticate",
			Handler:    _LdapService_Authenticate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ldap/ldappb/ldap.proto",
}
