// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dns/dnspb/dns.proto

package dnspb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SetEntryRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Ipv4                 string   `protobuf:"bytes,2,opt,name=ipv4,proto3" json:"ipv4,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetEntryRequest) Reset()         { *m = SetEntryRequest{} }
func (m *SetEntryRequest) String() string { return proto.CompactTextString(m) }
func (*SetEntryRequest) ProtoMessage()    {}
func (*SetEntryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c0ef3a55f90e78d4, []int{0}
}

func (m *SetEntryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetEntryRequest.Unmarshal(m, b)
}
func (m *SetEntryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetEntryRequest.Marshal(b, m, deterministic)
}
func (m *SetEntryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetEntryRequest.Merge(m, src)
}
func (m *SetEntryRequest) XXX_Size() int {
	return xxx_messageInfo_SetEntryRequest.Size(m)
}
func (m *SetEntryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetEntryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetEntryRequest proto.InternalMessageInfo

func (m *SetEntryRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SetEntryRequest) GetIpv4() string {
	if m != nil {
		return m.Ipv4
	}
	return ""
}

type SetEntryResponse struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetEntryResponse) Reset()         { *m = SetEntryResponse{} }
func (m *SetEntryResponse) String() string { return proto.CompactTextString(m) }
func (*SetEntryResponse) ProtoMessage()    {}
func (*SetEntryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c0ef3a55f90e78d4, []int{1}
}

func (m *SetEntryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetEntryResponse.Unmarshal(m, b)
}
func (m *SetEntryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetEntryResponse.Marshal(b, m, deterministic)
}
func (m *SetEntryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetEntryResponse.Merge(m, src)
}
func (m *SetEntryResponse) XXX_Size() int {
	return xxx_messageInfo_SetEntryResponse.Size(m)
}
func (m *SetEntryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetEntryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetEntryResponse proto.InternalMessageInfo

func (m *SetEntryResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type RemoveEntryRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveEntryRequest) Reset()         { *m = RemoveEntryRequest{} }
func (m *RemoveEntryRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveEntryRequest) ProtoMessage()    {}
func (*RemoveEntryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c0ef3a55f90e78d4, []int{2}
}

func (m *RemoveEntryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveEntryRequest.Unmarshal(m, b)
}
func (m *RemoveEntryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveEntryRequest.Marshal(b, m, deterministic)
}
func (m *RemoveEntryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveEntryRequest.Merge(m, src)
}
func (m *RemoveEntryRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveEntryRequest.Size(m)
}
func (m *RemoveEntryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveEntryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveEntryRequest proto.InternalMessageInfo

func (m *RemoveEntryRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type RemoveEntryResponse struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveEntryResponse) Reset()         { *m = RemoveEntryResponse{} }
func (m *RemoveEntryResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveEntryResponse) ProtoMessage()    {}
func (*RemoveEntryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c0ef3a55f90e78d4, []int{3}
}

func (m *RemoveEntryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveEntryResponse.Unmarshal(m, b)
}
func (m *RemoveEntryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveEntryResponse.Marshal(b, m, deterministic)
}
func (m *RemoveEntryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveEntryResponse.Merge(m, src)
}
func (m *RemoveEntryResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveEntryResponse.Size(m)
}
func (m *RemoveEntryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveEntryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveEntryResponse proto.InternalMessageInfo

func (m *RemoveEntryResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type SetTextRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Values               []string `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetTextRequest) Reset()         { *m = SetTextRequest{} }
func (m *SetTextRequest) String() string { return proto.CompactTextString(m) }
func (*SetTextRequest) ProtoMessage()    {}
func (*SetTextRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c0ef3a55f90e78d4, []int{4}
}

func (m *SetTextRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetTextRequest.Unmarshal(m, b)
}
func (m *SetTextRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetTextRequest.Marshal(b, m, deterministic)
}
func (m *SetTextRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetTextRequest.Merge(m, src)
}
func (m *SetTextRequest) XXX_Size() int {
	return xxx_messageInfo_SetTextRequest.Size(m)
}
func (m *SetTextRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetTextRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetTextRequest proto.InternalMessageInfo

func (m *SetTextRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SetTextRequest) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

type SetTextResponse struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetTextResponse) Reset()         { *m = SetTextResponse{} }
func (m *SetTextResponse) String() string { return proto.CompactTextString(m) }
func (*SetTextResponse) ProtoMessage()    {}
func (*SetTextResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c0ef3a55f90e78d4, []int{5}
}

func (m *SetTextResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetTextResponse.Unmarshal(m, b)
}
func (m *SetTextResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetTextResponse.Marshal(b, m, deterministic)
}
func (m *SetTextResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetTextResponse.Merge(m, src)
}
func (m *SetTextResponse) XXX_Size() int {
	return xxx_messageInfo_SetTextResponse.Size(m)
}
func (m *SetTextResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetTextResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetTextResponse proto.InternalMessageInfo

func (m *SetTextResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type GetTextRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTextRequest) Reset()         { *m = GetTextRequest{} }
func (m *GetTextRequest) String() string { return proto.CompactTextString(m) }
func (*GetTextRequest) ProtoMessage()    {}
func (*GetTextRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c0ef3a55f90e78d4, []int{6}
}

func (m *GetTextRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTextRequest.Unmarshal(m, b)
}
func (m *GetTextRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTextRequest.Marshal(b, m, deterministic)
}
func (m *GetTextRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTextRequest.Merge(m, src)
}
func (m *GetTextRequest) XXX_Size() int {
	return xxx_messageInfo_GetTextRequest.Size(m)
}
func (m *GetTextRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTextRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTextRequest proto.InternalMessageInfo

func (m *GetTextRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetTextResponse struct {
	Values               []string `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTextResponse) Reset()         { *m = GetTextResponse{} }
func (m *GetTextResponse) String() string { return proto.CompactTextString(m) }
func (*GetTextResponse) ProtoMessage()    {}
func (*GetTextResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c0ef3a55f90e78d4, []int{7}
}

func (m *GetTextResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTextResponse.Unmarshal(m, b)
}
func (m *GetTextResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTextResponse.Marshal(b, m, deterministic)
}
func (m *GetTextResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTextResponse.Merge(m, src)
}
func (m *GetTextResponse) XXX_Size() int {
	return xxx_messageInfo_GetTextResponse.Size(m)
}
func (m *GetTextResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTextResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTextResponse proto.InternalMessageInfo

func (m *GetTextResponse) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

type RemoveTextRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveTextRequest) Reset()         { *m = RemoveTextRequest{} }
func (m *RemoveTextRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveTextRequest) ProtoMessage()    {}
func (*RemoveTextRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c0ef3a55f90e78d4, []int{8}
}

func (m *RemoveTextRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveTextRequest.Unmarshal(m, b)
}
func (m *RemoveTextRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveTextRequest.Marshal(b, m, deterministic)
}
func (m *RemoveTextRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveTextRequest.Merge(m, src)
}
func (m *RemoveTextRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveTextRequest.Size(m)
}
func (m *RemoveTextRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveTextRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveTextRequest proto.InternalMessageInfo

func (m *RemoveTextRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type RemoveTextResponse struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveTextResponse) Reset()         { *m = RemoveTextResponse{} }
func (m *RemoveTextResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveTextResponse) ProtoMessage()    {}
func (*RemoveTextResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c0ef3a55f90e78d4, []int{9}
}

func (m *RemoveTextResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveTextResponse.Unmarshal(m, b)
}
func (m *RemoveTextResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveTextResponse.Marshal(b, m, deterministic)
}
func (m *RemoveTextResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveTextResponse.Merge(m, src)
}
func (m *RemoveTextResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveTextResponse.Size(m)
}
func (m *RemoveTextResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveTextResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveTextResponse proto.InternalMessageInfo

func (m *RemoveTextResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type ResolveRequest struct {
	Domain               string   `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResolveRequest) Reset()         { *m = ResolveRequest{} }
func (m *ResolveRequest) String() string { return proto.CompactTextString(m) }
func (*ResolveRequest) ProtoMessage()    {}
func (*ResolveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c0ef3a55f90e78d4, []int{10}
}

func (m *ResolveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResolveRequest.Unmarshal(m, b)
}
func (m *ResolveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResolveRequest.Marshal(b, m, deterministic)
}
func (m *ResolveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResolveRequest.Merge(m, src)
}
func (m *ResolveRequest) XXX_Size() int {
	return xxx_messageInfo_ResolveRequest.Size(m)
}
func (m *ResolveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResolveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResolveRequest proto.InternalMessageInfo

func (m *ResolveRequest) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

type ResolveResponse struct {
	Ipv4                 string   `protobuf:"bytes,1,opt,name=ipv4,proto3" json:"ipv4,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResolveResponse) Reset()         { *m = ResolveResponse{} }
func (m *ResolveResponse) String() string { return proto.CompactTextString(m) }
func (*ResolveResponse) ProtoMessage()    {}
func (*ResolveResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c0ef3a55f90e78d4, []int{11}
}

func (m *ResolveResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResolveResponse.Unmarshal(m, b)
}
func (m *ResolveResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResolveResponse.Marshal(b, m, deterministic)
}
func (m *ResolveResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResolveResponse.Merge(m, src)
}
func (m *ResolveResponse) XXX_Size() int {
	return xxx_messageInfo_ResolveResponse.Size(m)
}
func (m *ResolveResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ResolveResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ResolveResponse proto.InternalMessageInfo

func (m *ResolveResponse) GetIpv4() string {
	if m != nil {
		return m.Ipv4
	}
	return ""
}

func init() {
	proto.RegisterType((*SetEntryRequest)(nil), "dns.SetEntryRequest")
	proto.RegisterType((*SetEntryResponse)(nil), "dns.SetEntryResponse")
	proto.RegisterType((*RemoveEntryRequest)(nil), "dns.RemoveEntryRequest")
	proto.RegisterType((*RemoveEntryResponse)(nil), "dns.RemoveEntryResponse")
	proto.RegisterType((*SetTextRequest)(nil), "dns.SetTextRequest")
	proto.RegisterType((*SetTextResponse)(nil), "dns.SetTextResponse")
	proto.RegisterType((*GetTextRequest)(nil), "dns.GetTextRequest")
	proto.RegisterType((*GetTextResponse)(nil), "dns.GetTextResponse")
	proto.RegisterType((*RemoveTextRequest)(nil), "dns.RemoveTextRequest")
	proto.RegisterType((*RemoveTextResponse)(nil), "dns.RemoveTextResponse")
	proto.RegisterType((*ResolveRequest)(nil), "dns.ResolveRequest")
	proto.RegisterType((*ResolveResponse)(nil), "dns.ResolveResponse")
}

func init() { proto.RegisterFile("dns/dnspb/dns.proto", fileDescriptor_c0ef3a55f90e78d4) }

var fileDescriptor_c0ef3a55f90e78d4 = []byte{
	// 376 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0x4f, 0x4b, 0xfb, 0x40,
	0x10, 0x25, 0xe9, 0xef, 0xd7, 0x3f, 0x23, 0xa4, 0xba, 0xad, 0x6d, 0xe8, 0xa9, 0x44, 0x84, 0x08,
	0xb5, 0x82, 0x16, 0xd4, 0x83, 0x20, 0xa2, 0xe4, 0x9e, 0x7a, 0xf2, 0x96, 0x9a, 0x41, 0x02, 0xcd,
	0x26, 0x66, 0xb7, 0x41, 0xbf, 0xb1, 0x1f, 0x43, 0x92, 0xce, 0x9a, 0x7f, 0xd2, 0x7a, 0x09, 0x3b,
	0x93, 0x79, 0xef, 0xed, 0xbe, 0xb7, 0x0b, 0x03, 0x9f, 0x8b, 0x0b, 0x9f, 0x8b, 0x78, 0x95, 0x7d,
	0xe7, 0x71, 0x12, 0xc9, 0x88, 0xb5, 0x7c, 0x2e, 0xac, 0x5b, 0xe8, 0x2f, 0x51, 0x3e, 0x71, 0x99,
	0x7c, 0xba, 0xf8, 0xbe, 0x41, 0x21, 0x19, 0x83, 0x7f, 0xdc, 0x0b, 0xd1, 0xd4, 0xa6, 0x9a, 0xdd,
	0x73, 0xf3, 0x75, 0xd6, 0x0b, 0xe2, 0x74, 0x61, 0xea, 0xdb, 0x5e, 0xb6, 0xb6, 0x66, 0x70, 0x58,
	0x40, 0x45, 0x1c, 0x71, 0x81, 0xcc, 0x84, 0x4e, 0x88, 0x42, 0x78, 0x6f, 0x0a, 0xae, 0x4a, 0xcb,
	0x06, 0xe6, 0x62, 0x18, 0xa5, 0xb8, 0x4f, 0xcb, 0x3a, 0x87, 0x41, 0x65, 0x92, 0xa8, 0x47, 0xd0,
	0x4e, 0x50, 0x6c, 0xd6, 0x32, 0x1f, 0xee, 0xba, 0x54, 0x59, 0x37, 0x60, 0x2c, 0x51, 0x3e, 0xe3,
	0x87, 0x54, 0xa4, 0x06, 0xe8, 0x81, 0x4f, 0x94, 0x7a, 0xe0, 0x67, 0xc8, 0xd4, 0x5b, 0x6f, 0x50,
	0x98, 0xfa, 0xb4, 0x65, 0xf7, 0x5c, 0xaa, 0xac, 0xb3, 0xfc, 0xec, 0x5b, 0xe4, 0x1e, 0x91, 0x29,
	0x18, 0xce, 0x4e, 0x91, 0x8c, 0xcc, 0x69, 0x92, 0x91, 0xae, 0x56, 0xd1, 0x3d, 0x81, 0xa3, 0xed,
	0x01, 0x77, 0xf1, 0xcd, 0x94, 0x5f, 0x7f, 0xda, 0x9f, 0x0d, 0x86, 0x8b, 0x22, 0x5a, 0xa7, 0xa8,
	0xf8, 0x46, 0xd0, 0xf6, 0xa3, 0xd0, 0x0b, 0x38, 0x71, 0x52, 0x65, 0x9d, 0x42, 0xff, 0x67, 0x92,
	0x48, 0x55, 0xb8, 0x5a, 0x11, 0xee, 0xe5, 0x97, 0x0e, 0xf0, 0xc8, 0xc5, 0x12, 0x93, 0x34, 0x78,
	0x45, 0x76, 0x0d, 0x5d, 0x95, 0x35, 0x1b, 0xce, 0xb3, 0x3b, 0x54, 0xbb, 0x35, 0x93, 0xe3, 0x5a,
	0x97, 0xb8, 0xef, 0xe1, 0xa0, 0x14, 0x26, 0x1b, 0xe7, 0x53, 0xcd, 0x8b, 0x30, 0x31, 0x9b, 0x3f,
	0x88, 0x61, 0x01, 0x1d, 0x4a, 0x89, 0x0d, 0x94, 0x46, 0xc9, 0xb8, 0xc9, 0xb0, 0xda, 0x2c, 0x50,
	0x4e, 0x05, 0xe5, 0xfc, 0x86, 0xaa, 0x27, 0x76, 0x07, 0x50, 0x98, 0xce, 0x46, 0xa5, 0x3d, 0x95,
	0xb1, 0xe3, 0x46, 0xbf, 0x10, 0x25, 0x6f, 0x49, 0xb4, 0x9a, 0x09, 0x89, 0xd6, 0xec, 0x7f, 0xe8,
	0xbc, 0xfc, 0xcf, 0x9f, 0xe6, 0xaa, 0x9d, 0xbf, 0xcb, 0xab, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x45, 0x95, 0x4a, 0x5c, 0xae, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DnsServiceClient is the client API for DnsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DnsServiceClient interface {
	// Set a dns entry.
	SetEntry(ctx context.Context, in *SetEntryRequest, opts ...grpc.CallOption) (*SetEntryResponse, error)
	// Remove a dns entry
	RemoveEntry(ctx context.Context, in *RemoveEntryRequest, opts ...grpc.CallOption) (*RemoveEntryResponse, error)
	// Set a text entry.
	SetText(ctx context.Context, in *SetTextRequest, opts ...grpc.CallOption) (*SetTextResponse, error)
	// Retreive a text value
	GetText(ctx context.Context, in *GetTextRequest, opts ...grpc.CallOption) (*GetTextResponse, error)
	// Remove a text entry
	RemoveText(ctx context.Context, in *RemoveTextRequest, opts ...grpc.CallOption) (*RemoveTextResponse, error)
	// Get the ipv4 address for a given name
	Resolve(ctx context.Context, in *ResolveRequest, opts ...grpc.CallOption) (*ResolveResponse, error)
}

type dnsServiceClient struct {
	cc *grpc.ClientConn
}

func NewDnsServiceClient(cc *grpc.ClientConn) DnsServiceClient {
	return &dnsServiceClient{cc}
}

func (c *dnsServiceClient) SetEntry(ctx context.Context, in *SetEntryRequest, opts ...grpc.CallOption) (*SetEntryResponse, error) {
	out := new(SetEntryResponse)
	err := c.cc.Invoke(ctx, "/dns.DnsService/SetEntry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dnsServiceClient) RemoveEntry(ctx context.Context, in *RemoveEntryRequest, opts ...grpc.CallOption) (*RemoveEntryResponse, error) {
	out := new(RemoveEntryResponse)
	err := c.cc.Invoke(ctx, "/dns.DnsService/RemoveEntry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dnsServiceClient) SetText(ctx context.Context, in *SetTextRequest, opts ...grpc.CallOption) (*SetTextResponse, error) {
	out := new(SetTextResponse)
	err := c.cc.Invoke(ctx, "/dns.DnsService/SetText", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dnsServiceClient) GetText(ctx context.Context, in *GetTextRequest, opts ...grpc.CallOption) (*GetTextResponse, error) {
	out := new(GetTextResponse)
	err := c.cc.Invoke(ctx, "/dns.DnsService/GetText", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dnsServiceClient) RemoveText(ctx context.Context, in *RemoveTextRequest, opts ...grpc.CallOption) (*RemoveTextResponse, error) {
	out := new(RemoveTextResponse)
	err := c.cc.Invoke(ctx, "/dns.DnsService/RemoveText", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dnsServiceClient) Resolve(ctx context.Context, in *ResolveRequest, opts ...grpc.CallOption) (*ResolveResponse, error) {
	out := new(ResolveResponse)
	err := c.cc.Invoke(ctx, "/dns.DnsService/Resolve", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DnsServiceServer is the server API for DnsService service.
type DnsServiceServer interface {
	// Set a dns entry.
	SetEntry(context.Context, *SetEntryRequest) (*SetEntryResponse, error)
	// Remove a dns entry
	RemoveEntry(context.Context, *RemoveEntryRequest) (*RemoveEntryResponse, error)
	// Set a text entry.
	SetText(context.Context, *SetTextRequest) (*SetTextResponse, error)
	// Retreive a text value
	GetText(context.Context, *GetTextRequest) (*GetTextResponse, error)
	// Remove a text entry
	RemoveText(context.Context, *RemoveTextRequest) (*RemoveTextResponse, error)
	// Get the ipv4 address for a given name
	Resolve(context.Context, *ResolveRequest) (*ResolveResponse, error)
}

// UnimplementedDnsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDnsServiceServer struct {
}

func (*UnimplementedDnsServiceServer) SetEntry(ctx context.Context, req *SetEntryRequest) (*SetEntryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetEntry not implemented")
}
func (*UnimplementedDnsServiceServer) RemoveEntry(ctx context.Context, req *RemoveEntryRequest) (*RemoveEntryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveEntry not implemented")
}
func (*UnimplementedDnsServiceServer) SetText(ctx context.Context, req *SetTextRequest) (*SetTextResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetText not implemented")
}
func (*UnimplementedDnsServiceServer) GetText(ctx context.Context, req *GetTextRequest) (*GetTextResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetText not implemented")
}
func (*UnimplementedDnsServiceServer) RemoveText(ctx context.Context, req *RemoveTextRequest) (*RemoveTextResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveText not implemented")
}
func (*UnimplementedDnsServiceServer) Resolve(ctx context.Context, req *ResolveRequest) (*ResolveResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Resolve not implemented")
}

func RegisterDnsServiceServer(s *grpc.Server, srv DnsServiceServer) {
	s.RegisterService(&_DnsService_serviceDesc, srv)
}

func _DnsService_SetEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DnsServiceServer).SetEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dns.DnsService/SetEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DnsServiceServer).SetEntry(ctx, req.(*SetEntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DnsService_RemoveEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DnsServiceServer).RemoveEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dns.DnsService/RemoveEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DnsServiceServer).RemoveEntry(ctx, req.(*RemoveEntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DnsService_SetText_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetTextRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DnsServiceServer).SetText(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dns.DnsService/SetText",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DnsServiceServer).SetText(ctx, req.(*SetTextRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DnsService_GetText_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTextRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DnsServiceServer).GetText(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dns.DnsService/GetText",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DnsServiceServer).GetText(ctx, req.(*GetTextRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DnsService_RemoveText_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveTextRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DnsServiceServer).RemoveText(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dns.DnsService/RemoveText",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DnsServiceServer).RemoveText(ctx, req.(*RemoveTextRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DnsService_Resolve_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResolveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DnsServiceServer).Resolve(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dns.DnsService/Resolve",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DnsServiceServer).Resolve(ctx, req.(*ResolveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DnsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dns.DnsService",
	HandlerType: (*DnsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetEntry",
			Handler:    _DnsService_SetEntry_Handler,
		},
		{
			MethodName: "RemoveEntry",
			Handler:    _DnsService_RemoveEntry_Handler,
		},
		{
			MethodName: "SetText",
			Handler:    _DnsService_SetText_Handler,
		},
		{
			MethodName: "GetText",
			Handler:    _DnsService_GetText_Handler,
		},
		{
			MethodName: "RemoveText",
			Handler:    _DnsService_RemoveText_Handler,
		},
		{
			MethodName: "Resolve",
			Handler:    _DnsService_Resolve_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dns/dnspb/dns.proto",
}
