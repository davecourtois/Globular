// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: persistence/persistencepb/persistence.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Persistence {

  /// <summary>Holder for reflection information generated from persistence/persistencepb/persistence.proto</summary>
  public static partial class PersistenceReflection {

    #region Descriptor
    /// <summary>File descriptor for persistence/persistencepb/persistence.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PersistenceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CitwZXJzaXN0ZW5jZS9wZXJzaXN0ZW5jZXBiL3BlcnNpc3RlbmNlLnByb3Rv",
            "EgtwZXJzaXN0ZW5jZSKrAQoKQ29ubmVjdGlvbhIKCgJpZBgBIAEoCRIMCgRu",
            "YW1lGAIgASgJEgwKBGhvc3QYAyABKAkSJQoFc3RvcmUYBSABKA4yFi5wZXJz",
            "aXN0ZW5jZS5TdG9yZVR5cGUSDAoEdXNlchgGIAEoCRIQCghwYXNzd29yZBgH",
            "IAEoCRIMCgRwb3J0GAggASgFEg8KB3RpbWVvdXQYCSABKAUSDwoHb3B0aW9u",
            "cxgKIAEoCSJRChRDcmVhdGVDb25uZWN0aW9uUnFzdBIrCgpjb25uZWN0aW9u",
            "GAEgASgLMhcucGVyc2lzdGVuY2UuQ29ubmVjdGlvbhIMCgRzYXZlGAIgASgI",
            "IiUKE0NyZWF0ZUNvbm5lY3Rpb25Sc3ASDgoGcmVzdWx0GAEgASgIIiIKFERl",
            "bGV0ZUNvbm5lY3Rpb25ScXN0EgoKAmlkGAEgASgJIiUKE0RlbGV0ZUNvbm5l",
            "Y3Rpb25Sc3ASDgoGcmVzdWx0GAEgASgIIiAKElBpbmdDb25uZWN0aW9uUnFz",
            "dBIKCgJpZBgBIAEoCSIjChFQaW5nQ29ubmVjdGlvblJzcBIOCgZyZXN1bHQY",
            "ASABKAkiZAoOSW5zZXJ0TWFueVJxc3QSCgoCaWQYASABKAkSEAoIZGF0YWJh",
            "c2UYAiABKAkSEgoKY29sbGVjdGlvbhgDIAEoCRIPCgdqc29uU3RyGAQgASgJ",
            "Eg8KB29wdGlvbnMYBSABKAkiHAoNSW5zZXJ0TWFueVJzcBILCgNpZHMYASAB",
            "KAkiYwoNSW5zZXJ0T25lUnFzdBIKCgJpZBgBIAEoCRIQCghkYXRhYmFzZRgC",
            "IAEoCRISCgpjb2xsZWN0aW9uGAMgASgJEg8KB2pzb25TdHIYBCABKAkSDwoH",
            "b3B0aW9ucxgFIAEoCSIaCgxJbnNlcnRPbmVSc3ASCgoCaWQYASABKAkiXAoI",
            "RmluZFJxc3QSCgoCaWQYASABKAkSEAoIZGF0YWJhc2UYAiABKAkSEgoKY29s",
            "bGVjdGlvbhgDIAEoCRINCgVxdWVyeRgEIAEoCRIPCgdvcHRpb25zGAYgASgJ",
            "IhsKCEZpbmRSZXNwEg8KB2pzb25TdHIYASABKAkiXwoLRmluZE9uZVJxc3QS",
            "CgoCaWQYASABKAkSEAoIZGF0YWJhc2UYAiABKAkSEgoKY29sbGVjdGlvbhgD",
            "IAEoCRINCgVxdWVyeRgEIAEoCRIPCgdvcHRpb25zGAYgASgJIh4KC0ZpbmRP",
            "bmVSZXNwEg8KB2pzb25TdHIYASABKAkiZAoNQWdncmVnYXRlUnFzdBIKCgJp",
            "ZBgBIAEoCRIQCghkYXRhYmFzZRgCIAEoCRISCgpjb2xsZWN0aW9uGAMgASgJ",
            "EhAKCHBpcGVsaW5lGAQgASgJEg8KB29wdGlvbnMYBiABKAkiIAoNQWdncmVn",
            "YXRlUmVzcBIPCgdqc29uU3RyGAEgASgJIm0KClVwZGF0ZVJxc3QSCgoCaWQY",
            "ASABKAkSEAoIZGF0YWJhc2UYAiABKAkSEgoKY29sbGVjdGlvbhgDIAEoCRIN",
            "CgVxdWVyeRgEIAEoCRINCgV2YWx1ZRgFIAEoCRIPCgdvcHRpb25zGAYgASgJ",
            "IhsKCVVwZGF0ZVJzcBIOCgZyZXN1bHQYASABKAgicAoNVXBkYXRlT25lUnFz",
            "dBIKCgJpZBgBIAEoCRIQCghkYXRhYmFzZRgCIAEoCRISCgpjb2xsZWN0aW9u",
            "GAMgASgJEg0KBXF1ZXJ5GAQgASgJEg0KBXZhbHVlGAUgASgJEg8KB29wdGlv",
            "bnMYBiABKAkiHgoMVXBkYXRlT25lUnNwEg4KBnJlc3VsdBgBIAEoCCJxCg5S",
            "ZXBsYWNlT25lUnFzdBIKCgJpZBgBIAEoCRIQCghkYXRhYmFzZRgCIAEoCRIS",
            "Cgpjb2xsZWN0aW9uGAMgASgJEg0KBXF1ZXJ5GAQgASgJEg0KBXZhbHVlGAUg",
            "ASgJEg8KB29wdGlvbnMYBiABKAkiHwoNUmVwbGFjZU9uZVJzcBIOCgZyZXN1",
            "bHQYASABKAgiXgoKRGVsZXRlUnFzdBIKCgJpZBgBIAEoCRIQCghkYXRhYmFz",
            "ZRgCIAEoCRISCgpjb2xsZWN0aW9uGAMgASgJEg0KBXF1ZXJ5GAQgASgJEg8K",
            "B29wdGlvbnMYBSABKAkiGwoJRGVsZXRlUnNwEg4KBnJlc3VsdBgBIAEoCCJh",
            "Cg1EZWxldGVPbmVScXN0EgoKAmlkGAEgASgJEhAKCGRhdGFiYXNlGAIgASgJ",
            "EhIKCmNvbGxlY3Rpb24YAyABKAkSDQoFcXVlcnkYBCABKAkSDwoHb3B0aW9u",
            "cxgFIAEoCSIeCgxEZWxldGVPbmVSc3ASDgoGcmVzdWx0GAEgASgIIjIKEkNy",
            "ZWF0ZURhdGFiYXNlUnFzdBIKCgJpZBgBIAEoCRIQCghkYXRhYmFzZRgCIAEo",
            "CSIjChFDcmVhdGVEYXRhYmFzZVJzcBIOCgZyZXN1bHQYASABKAgiMgoSRGVs",
            "ZXRlRGF0YWJhc2VScXN0EgoKAmlkGAEgASgJEhAKCGRhdGFiYXNlGAIgASgJ",
            "IiMKEURlbGV0ZURhdGFiYXNlUnNwEg4KBnJlc3VsdBgBIAEoCCJcChRDcmVh",
            "dGVDb2xsZWN0aW9uUnFzdBIKCgJpZBgBIAEoCRIQCghkYXRhYmFzZRgCIAEo",
            "CRISCgpjb2xsZWN0aW9uGAMgASgJEhIKCm9wdGlvbnNTdHIYBCABKAkiJQoT",
            "Q3JlYXRlQ29sbGVjdGlvblJzcBIOCgZyZXN1bHQYASABKAgiSAoURGVsZXRl",
            "Q29sbGVjdGlvblJxc3QSCgoCaWQYASABKAkSEAoIZGF0YWJhc2UYAiABKAkS",
            "EgoKY29sbGVjdGlvbhgDIAEoCSIlChNEZWxldGVDb2xsZWN0aW9uUnNwEg4K",
            "BnJlc3VsdBgBIAEoCCJdCglDb3VudFJxc3QSCgoCaWQYASABKAkSEAoIZGF0",
            "YWJhc2UYAiABKAkSEgoKY29sbGVjdGlvbhgDIAEoCRINCgVxdWVyeRgEIAEo",
            "CRIPCgdvcHRpb25zGAUgASgJIhoKCENvdW50UnNwEg4KBnJlc3VsdBgBIAEo",
            "AyJXCg9SdW5BZG1pbkNtZFJxc3QSFAoMY29ubmVjdGlvbklkGAEgASgJEgwK",
            "BHVzZXIYAiABKAkSEAoIcGFzc3dvcmQYAyABKAkSDgoGc2NyaXB0GAQgASgJ",
            "IiAKDlJ1bkFkbWluQ21kUnNwEg4KBnJlc3VsdBgBIAEoCSI1CgtDb25uZWN0",
            "UnFzdBIUCgxjb25uZWN0aW9uSWQYASABKAkSEAoIcGFzc3dvcmQYAyABKAki",
            "HAoKQ29ubmVjdFJzcBIOCgZyZXN1bHQYASABKAgiJgoORGlzY29ubmVjdFJx",
            "c3QSFAoMY29ubmVjdGlvbklkGAEgASgJIh8KDURpc2Nvbm5lY3RSc3ASDgoG",
            "cmVzdWx0GAEgASgIKhYKCVN0b3JlVHlwZRIJCgVNT05HTxAAMqQMChJQZXJz",
            "aXN0ZW5jZVNlcnZpY2USUwoOQ3JlYXRlRGF0YWJhc2USHy5wZXJzaXN0ZW5j",
            "ZS5DcmVhdGVEYXRhYmFzZVJxc3QaHi5wZXJzaXN0ZW5jZS5DcmVhdGVEYXRh",
            "YmFzZVJzcCIAEjwKB0Nvbm5lY3QSGC5wZXJzaXN0ZW5jZS5Db25uZWN0UnFz",
            "dBoXLnBlcnNpc3RlbmNlLkNvbm5lY3RSc3ASRQoKRGlzY29ubmVjdBIbLnBl",
            "cnNpc3RlbmNlLkRpc2Nvbm5lY3RScXN0GhoucGVyc2lzdGVuY2UuRGlzY29u",
            "bmVjdFJzcBJTCg5EZWxldGVEYXRhYmFzZRIfLnBlcnNpc3RlbmNlLkRlbGV0",
            "ZURhdGFiYXNlUnFzdBoeLnBlcnNpc3RlbmNlLkRlbGV0ZURhdGFiYXNlUnNw",
            "IgASWQoQQ3JlYXRlQ29sbGVjdGlvbhIhLnBlcnNpc3RlbmNlLkNyZWF0ZUNv",
            "bGxlY3Rpb25ScXN0GiAucGVyc2lzdGVuY2UuQ3JlYXRlQ29sbGVjdGlvblJz",
            "cCIAElkKEERlbGV0ZUNvbGxlY3Rpb24SIS5wZXJzaXN0ZW5jZS5EZWxldGVD",
            "b2xsZWN0aW9uUnFzdBogLnBlcnNpc3RlbmNlLkRlbGV0ZUNvbGxlY3Rpb25S",
            "c3AiABJZChBDcmVhdGVDb25uZWN0aW9uEiEucGVyc2lzdGVuY2UuQ3JlYXRl",
            "Q29ubmVjdGlvblJxc3QaIC5wZXJzaXN0ZW5jZS5DcmVhdGVDb25uZWN0aW9u",
            "UnNwIgASWQoQRGVsZXRlQ29ubmVjdGlvbhIhLnBlcnNpc3RlbmNlLkRlbGV0",
            "ZUNvbm5lY3Rpb25ScXN0GiAucGVyc2lzdGVuY2UuRGVsZXRlQ29ubmVjdGlv",
            "blJzcCIAEkkKBFBpbmcSHy5wZXJzaXN0ZW5jZS5QaW5nQ29ubmVjdGlvblJx",
            "c3QaHi5wZXJzaXN0ZW5jZS5QaW5nQ29ubmVjdGlvblJzcCIAEjgKBUNvdW50",
            "EhYucGVyc2lzdGVuY2UuQ291bnRScXN0GhUucGVyc2lzdGVuY2UuQ291bnRS",
            "c3AiABJECglJbnNlcnRPbmUSGi5wZXJzaXN0ZW5jZS5JbnNlcnRPbmVScXN0",
            "GhkucGVyc2lzdGVuY2UuSW5zZXJ0T25lUnNwIgASSQoKSW5zZXJ0TWFueRIb",
            "LnBlcnNpc3RlbmNlLkluc2VydE1hbnlScXN0GhoucGVyc2lzdGVuY2UuSW5z",
            "ZXJ0TWFueVJzcCIAKAESOAoERmluZBIVLnBlcnNpc3RlbmNlLkZpbmRScXN0",
            "GhUucGVyc2lzdGVuY2UuRmluZFJlc3AiADABEj8KB0ZpbmRPbmUSGC5wZXJz",
            "aXN0ZW5jZS5GaW5kT25lUnFzdBoYLnBlcnNpc3RlbmNlLkZpbmRPbmVSZXNw",
            "IgASRwoJQWdncmVnYXRlEhoucGVyc2lzdGVuY2UuQWdncmVnYXRlUnFzdBoa",
            "LnBlcnNpc3RlbmNlLkFnZ3JlZ2F0ZVJlc3AiADABEjsKBlVwZGF0ZRIXLnBl",
            "cnNpc3RlbmNlLlVwZGF0ZVJxc3QaFi5wZXJzaXN0ZW5jZS5VcGRhdGVSc3Ai",
            "ABJECglVcGRhdGVPbmUSGi5wZXJzaXN0ZW5jZS5VcGRhdGVPbmVScXN0Ghku",
            "cGVyc2lzdGVuY2UuVXBkYXRlT25lUnNwIgASRwoKUmVwbGFjZU9uZRIbLnBl",
            "cnNpc3RlbmNlLlJlcGxhY2VPbmVScXN0GhoucGVyc2lzdGVuY2UuUmVwbGFj",
            "ZU9uZVJzcCIAEjsKBkRlbGV0ZRIXLnBlcnNpc3RlbmNlLkRlbGV0ZVJxc3Qa",
            "Fi5wZXJzaXN0ZW5jZS5EZWxldGVSc3AiABJECglEZWxldGVPbmUSGi5wZXJz",
            "aXN0ZW5jZS5EZWxldGVPbmVScXN0GhkucGVyc2lzdGVuY2UuRGVsZXRlT25l",
            "UnNwIgASSgoLUnVuQWRtaW5DbWQSHC5wZXJzaXN0ZW5jZS5SdW5BZG1pbkNt",
            "ZFJxc3QaGy5wZXJzaXN0ZW5jZS5SdW5BZG1pbkNtZFJzcCIAQg9aDXBlcnNp",
            "c3RlbmNlcGJiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Persistence.StoreType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Persistence.Connection), global::Persistence.Connection.Parser, new[]{ "Id", "Name", "Host", "Store", "User", "Password", "Port", "Timeout", "Options" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Persistence.CreateConnectionRqst), global::Persistence.CreateConnectionRqst.Parser, new[]{ "Connection", "Save" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Persistence.CreateConnectionRsp), global::Persistence.CreateConnectionRsp.Parser, new[]{ "Result" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Persistence.DeleteConnectionRqst), global::Persistence.DeleteConnectionRqst.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Persistence.DeleteConnectionRsp), global::Persistence.DeleteConnectionRsp.Parser, new[]{ "Result" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Persistence.PingConnectionRqst), global::Persistence.PingConnectionRqst.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Persistence.PingConnectionRsp), global::Persistence.PingConnectionRsp.Parser, new[]{ "Result" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Persistence.InsertManyRqst), global::Persistence.InsertManyRqst.Parser, new[]{ "Id", "Database", "Collection", "JsonStr", "Options" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Persistence.InsertManyRsp), global::Persistence.InsertManyRsp.Parser, new[]{ "Ids" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Persistence.InsertOneRqst), global::Persistence.InsertOneRqst.Parser, new[]{ "Id", "Database", "Collection", "JsonStr", "Options" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Persistence.InsertOneRsp), global::Persistence.InsertOneRsp.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Persistence.FindRqst), global::Persistence.FindRqst.Parser, new[]{ "Id", "Database", "Collection", "Query", "Options" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Persistence.FindResp), global::Persistence.FindResp.Parser, new[]{ "JsonStr" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Persistence.FindOneRqst), global::Persistence.FindOneRqst.Parser, new[]{ "Id", "Database", "Collection", "Query", "Options" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Persistence.FindOneResp), global::Persistence.FindOneResp.Parser, new[]{ "JsonStr" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Persistence.AggregateRqst), global::Persistence.AggregateRqst.Parser, new[]{ "Id", "Database", "Collection", "Pipeline", "Options" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Persistence.AggregateResp), global::Persistence.AggregateResp.Parser, new[]{ "JsonStr" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Persistence.UpdateRqst), global::Persistence.UpdateRqst.Parser, new[]{ "Id", "Database", "Collection", "Query", "Value", "Options" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Persistence.UpdateRsp), global::Persistence.UpdateRsp.Parser, new[]{ "Result" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Persistence.UpdateOneRqst), global::Persistence.UpdateOneRqst.Parser, new[]{ "Id", "Database", "Collection", "Query", "Value", "Options" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Persistence.UpdateOneRsp), global::Persistence.UpdateOneRsp.Parser, new[]{ "Result" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Persistence.ReplaceOneRqst), global::Persistence.ReplaceOneRqst.Parser, new[]{ "Id", "Database", "Collection", "Query", "Value", "Options" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Persistence.ReplaceOneRsp), global::Persistence.ReplaceOneRsp.Parser, new[]{ "Result" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Persistence.DeleteRqst), global::Persistence.DeleteRqst.Parser, new[]{ "Id", "Database", "Collection", "Query", "Options" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Persistence.DeleteRsp), global::Persistence.DeleteRsp.Parser, new[]{ "Result" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Persistence.DeleteOneRqst), global::Persistence.DeleteOneRqst.Parser, new[]{ "Id", "Database", "Collection", "Query", "Options" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Persistence.DeleteOneRsp), global::Persistence.DeleteOneRsp.Parser, new[]{ "Result" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Persistence.CreateDatabaseRqst), global::Persistence.CreateDatabaseRqst.Parser, new[]{ "Id", "Database" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Persistence.CreateDatabaseRsp), global::Persistence.CreateDatabaseRsp.Parser, new[]{ "Result" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Persistence.DeleteDatabaseRqst), global::Persistence.DeleteDatabaseRqst.Parser, new[]{ "Id", "Database" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Persistence.DeleteDatabaseRsp), global::Persistence.DeleteDatabaseRsp.Parser, new[]{ "Result" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Persistence.CreateCollectionRqst), global::Persistence.CreateCollectionRqst.Parser, new[]{ "Id", "Database", "Collection", "OptionsStr" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Persistence.CreateCollectionRsp), global::Persistence.CreateCollectionRsp.Parser, new[]{ "Result" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Persistence.DeleteCollectionRqst), global::Persistence.DeleteCollectionRqst.Parser, new[]{ "Id", "Database", "Collection" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Persistence.DeleteCollectionRsp), global::Persistence.DeleteCollectionRsp.Parser, new[]{ "Result" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Persistence.CountRqst), global::Persistence.CountRqst.Parser, new[]{ "Id", "Database", "Collection", "Query", "Options" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Persistence.CountRsp), global::Persistence.CountRsp.Parser, new[]{ "Result" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Persistence.RunAdminCmdRqst), global::Persistence.RunAdminCmdRqst.Parser, new[]{ "ConnectionId", "User", "Password", "Script" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Persistence.RunAdminCmdRsp), global::Persistence.RunAdminCmdRsp.Parser, new[]{ "Result" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Persistence.ConnectRqst), global::Persistence.ConnectRqst.Parser, new[]{ "ConnectionId", "Password" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Persistence.ConnectRsp), global::Persistence.ConnectRsp.Parser, new[]{ "Result" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Persistence.DisconnectRqst), global::Persistence.DisconnectRqst.Parser, new[]{ "ConnectionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Persistence.DisconnectRsp), global::Persistence.DisconnectRsp.Parser, new[]{ "Result" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum StoreType {
    [pbr::OriginalName("MONGO")] Mongo = 0,
  }

  #endregion

  #region Messages
  public sealed partial class Connection : pb::IMessage<Connection> {
    private static readonly pb::MessageParser<Connection> _parser = new pb::MessageParser<Connection>(() => new Connection());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Connection> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Persistence.PersistenceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Connection() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Connection(Connection other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      host_ = other.host_;
      store_ = other.store_;
      user_ = other.user_;
      password_ = other.password_;
      port_ = other.port_;
      timeout_ = other.timeout_;
      options_ = other.options_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Connection Clone() {
      return new Connection(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "host" field.</summary>
    public const int HostFieldNumber = 3;
    private string host_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Host {
      get { return host_; }
      set {
        host_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "store" field.</summary>
    public const int StoreFieldNumber = 5;
    private global::Persistence.StoreType store_ = global::Persistence.StoreType.Mongo;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Persistence.StoreType Store {
      get { return store_; }
      set {
        store_ = value;
      }
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 6;
    private string user_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string User {
      get { return user_; }
      set {
        user_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 7;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 8;
    private int port_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    /// <summary>Field number for the "timeout" field.</summary>
    public const int TimeoutFieldNumber = 9;
    private int timeout_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Timeout {
      get { return timeout_; }
      set {
        timeout_ = value;
      }
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 10;
    private string options_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Options {
      get { return options_; }
      set {
        options_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Connection);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Connection other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Host != other.Host) return false;
      if (Store != other.Store) return false;
      if (User != other.User) return false;
      if (Password != other.Password) return false;
      if (Port != other.Port) return false;
      if (Timeout != other.Timeout) return false;
      if (Options != other.Options) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Host.Length != 0) hash ^= Host.GetHashCode();
      if (Store != global::Persistence.StoreType.Mongo) hash ^= Store.GetHashCode();
      if (User.Length != 0) hash ^= User.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (Timeout != 0) hash ^= Timeout.GetHashCode();
      if (Options.Length != 0) hash ^= Options.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Host.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Host);
      }
      if (Store != global::Persistence.StoreType.Mongo) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Store);
      }
      if (User.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(User);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Password);
      }
      if (Port != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Port);
      }
      if (Timeout != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Timeout);
      }
      if (Options.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Host.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Host);
      }
      if (Store != global::Persistence.StoreType.Mongo) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Store);
      }
      if (User.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(User);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      if (Timeout != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Timeout);
      }
      if (Options.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Options);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Connection other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Host.Length != 0) {
        Host = other.Host;
      }
      if (other.Store != global::Persistence.StoreType.Mongo) {
        Store = other.Store;
      }
      if (other.User.Length != 0) {
        User = other.User;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      if (other.Timeout != 0) {
        Timeout = other.Timeout;
      }
      if (other.Options.Length != 0) {
        Options = other.Options;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Host = input.ReadString();
            break;
          }
          case 40: {
            Store = (global::Persistence.StoreType) input.ReadEnum();
            break;
          }
          case 50: {
            User = input.ReadString();
            break;
          }
          case 58: {
            Password = input.ReadString();
            break;
          }
          case 64: {
            Port = input.ReadInt32();
            break;
          }
          case 72: {
            Timeout = input.ReadInt32();
            break;
          }
          case 82: {
            Options = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Create connection
  /// </summary>
  public sealed partial class CreateConnectionRqst : pb::IMessage<CreateConnectionRqst> {
    private static readonly pb::MessageParser<CreateConnectionRqst> _parser = new pb::MessageParser<CreateConnectionRqst>(() => new CreateConnectionRqst());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateConnectionRqst> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Persistence.PersistenceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateConnectionRqst() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateConnectionRqst(CreateConnectionRqst other) : this() {
      connection_ = other.connection_ != null ? other.connection_.Clone() : null;
      save_ = other.save_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateConnectionRqst Clone() {
      return new CreateConnectionRqst(this);
    }

    /// <summary>Field number for the "connection" field.</summary>
    public const int ConnectionFieldNumber = 1;
    private global::Persistence.Connection connection_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Persistence.Connection Connection {
      get { return connection_; }
      set {
        connection_ = value;
      }
    }

    /// <summary>Field number for the "save" field.</summary>
    public const int SaveFieldNumber = 2;
    private bool save_;
    /// <summary>
    /// if true it will save in the config file.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Save {
      get { return save_; }
      set {
        save_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateConnectionRqst);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateConnectionRqst other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Connection, other.Connection)) return false;
      if (Save != other.Save) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (connection_ != null) hash ^= Connection.GetHashCode();
      if (Save != false) hash ^= Save.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (connection_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Connection);
      }
      if (Save != false) {
        output.WriteRawTag(16);
        output.WriteBool(Save);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (connection_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Connection);
      }
      if (Save != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateConnectionRqst other) {
      if (other == null) {
        return;
      }
      if (other.connection_ != null) {
        if (connection_ == null) {
          Connection = new global::Persistence.Connection();
        }
        Connection.MergeFrom(other.Connection);
      }
      if (other.Save != false) {
        Save = other.Save;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (connection_ == null) {
              Connection = new global::Persistence.Connection();
            }
            input.ReadMessage(Connection);
            break;
          }
          case 16: {
            Save = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateConnectionRsp : pb::IMessage<CreateConnectionRsp> {
    private static readonly pb::MessageParser<CreateConnectionRsp> _parser = new pb::MessageParser<CreateConnectionRsp>(() => new CreateConnectionRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateConnectionRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Persistence.PersistenceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateConnectionRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateConnectionRsp(CreateConnectionRsp other) : this() {
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateConnectionRsp Clone() {
      return new CreateConnectionRsp(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private bool result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateConnectionRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateConnectionRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != false) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != false) {
        output.WriteRawTag(8);
        output.WriteBool(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateConnectionRsp other) {
      if (other == null) {
        return;
      }
      if (other.Result != false) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Delete connection
  /// </summary>
  public sealed partial class DeleteConnectionRqst : pb::IMessage<DeleteConnectionRqst> {
    private static readonly pb::MessageParser<DeleteConnectionRqst> _parser = new pb::MessageParser<DeleteConnectionRqst>(() => new DeleteConnectionRqst());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteConnectionRqst> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Persistence.PersistenceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteConnectionRqst() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteConnectionRqst(DeleteConnectionRqst other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteConnectionRqst Clone() {
      return new DeleteConnectionRqst(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteConnectionRqst);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteConnectionRqst other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteConnectionRqst other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteConnectionRsp : pb::IMessage<DeleteConnectionRsp> {
    private static readonly pb::MessageParser<DeleteConnectionRsp> _parser = new pb::MessageParser<DeleteConnectionRsp>(() => new DeleteConnectionRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteConnectionRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Persistence.PersistenceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteConnectionRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteConnectionRsp(DeleteConnectionRsp other) : this() {
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteConnectionRsp Clone() {
      return new DeleteConnectionRsp(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private bool result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteConnectionRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteConnectionRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != false) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != false) {
        output.WriteRawTag(8);
        output.WriteBool(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteConnectionRsp other) {
      if (other == null) {
        return;
      }
      if (other.Result != false) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Ping Connection
  /// </summary>
  public sealed partial class PingConnectionRqst : pb::IMessage<PingConnectionRqst> {
    private static readonly pb::MessageParser<PingConnectionRqst> _parser = new pb::MessageParser<PingConnectionRqst>(() => new PingConnectionRqst());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PingConnectionRqst> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Persistence.PersistenceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PingConnectionRqst() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PingConnectionRqst(PingConnectionRqst other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PingConnectionRqst Clone() {
      return new PingConnectionRqst(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PingConnectionRqst);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PingConnectionRqst other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PingConnectionRqst other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PingConnectionRsp : pb::IMessage<PingConnectionRsp> {
    private static readonly pb::MessageParser<PingConnectionRsp> _parser = new pb::MessageParser<PingConnectionRsp>(() => new PingConnectionRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PingConnectionRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Persistence.PersistenceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PingConnectionRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PingConnectionRsp(PingConnectionRsp other) : this() {
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PingConnectionRsp Clone() {
      return new PingConnectionRsp(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private string result_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Result {
      get { return result_; }
      set {
        result_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PingConnectionRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PingConnectionRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result.Length != 0) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PingConnectionRsp other) {
      if (other == null) {
        return;
      }
      if (other.Result.Length != 0) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Result = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InsertManyRqst : pb::IMessage<InsertManyRqst> {
    private static readonly pb::MessageParser<InsertManyRqst> _parser = new pb::MessageParser<InsertManyRqst>(() => new InsertManyRqst());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InsertManyRqst> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Persistence.PersistenceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertManyRqst() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertManyRqst(InsertManyRqst other) : this() {
      id_ = other.id_;
      database_ = other.database_;
      collection_ = other.collection_;
      jsonStr_ = other.jsonStr_;
      options_ = other.options_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertManyRqst Clone() {
      return new InsertManyRqst(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "database" field.</summary>
    public const int DatabaseFieldNumber = 2;
    private string database_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Database {
      get { return database_; }
      set {
        database_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "collection" field.</summary>
    public const int CollectionFieldNumber = 3;
    private string collection_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Collection {
      get { return collection_; }
      set {
        collection_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "jsonStr" field.</summary>
    public const int JsonStrFieldNumber = 4;
    private string jsonStr_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JsonStr {
      get { return jsonStr_; }
      set {
        jsonStr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 5;
    private string options_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Options {
      get { return options_; }
      set {
        options_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InsertManyRqst);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InsertManyRqst other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Database != other.Database) return false;
      if (Collection != other.Collection) return false;
      if (JsonStr != other.JsonStr) return false;
      if (Options != other.Options) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Database.Length != 0) hash ^= Database.GetHashCode();
      if (Collection.Length != 0) hash ^= Collection.GetHashCode();
      if (JsonStr.Length != 0) hash ^= JsonStr.GetHashCode();
      if (Options.Length != 0) hash ^= Options.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Database.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Database);
      }
      if (Collection.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Collection);
      }
      if (JsonStr.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(JsonStr);
      }
      if (Options.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Database.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Database);
      }
      if (Collection.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Collection);
      }
      if (JsonStr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JsonStr);
      }
      if (Options.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Options);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InsertManyRqst other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Database.Length != 0) {
        Database = other.Database;
      }
      if (other.Collection.Length != 0) {
        Collection = other.Collection;
      }
      if (other.JsonStr.Length != 0) {
        JsonStr = other.JsonStr;
      }
      if (other.Options.Length != 0) {
        Options = other.Options;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Database = input.ReadString();
            break;
          }
          case 26: {
            Collection = input.ReadString();
            break;
          }
          case 34: {
            JsonStr = input.ReadString();
            break;
          }
          case 42: {
            Options = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InsertManyRsp : pb::IMessage<InsertManyRsp> {
    private static readonly pb::MessageParser<InsertManyRsp> _parser = new pb::MessageParser<InsertManyRsp>(() => new InsertManyRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InsertManyRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Persistence.PersistenceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertManyRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertManyRsp(InsertManyRsp other) : this() {
      ids_ = other.ids_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertManyRsp Clone() {
      return new InsertManyRsp(this);
    }

    /// <summary>Field number for the "ids" field.</summary>
    public const int IdsFieldNumber = 1;
    private string ids_ = "";
    /// <summary>
    /// Json string with ids
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ids {
      get { return ids_; }
      set {
        ids_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InsertManyRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InsertManyRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ids != other.Ids) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ids.Length != 0) hash ^= Ids.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ids.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Ids);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ids.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ids);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InsertManyRsp other) {
      if (other == null) {
        return;
      }
      if (other.Ids.Length != 0) {
        Ids = other.Ids;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Ids = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InsertOneRqst : pb::IMessage<InsertOneRqst> {
    private static readonly pb::MessageParser<InsertOneRqst> _parser = new pb::MessageParser<InsertOneRqst>(() => new InsertOneRqst());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InsertOneRqst> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Persistence.PersistenceReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertOneRqst() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertOneRqst(InsertOneRqst other) : this() {
      id_ = other.id_;
      database_ = other.database_;
      collection_ = other.collection_;
      jsonStr_ = other.jsonStr_;
      options_ = other.options_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertOneRqst Clone() {
      return new InsertOneRqst(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// The connection id.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "database" field.</summary>
    public const int DatabaseFieldNumber = 2;
    private string database_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Database {
      get { return database_; }
      set {
        database_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "collection" field.</summary>
    public const int CollectionFieldNumber = 3;
    private string collection_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Collection {
      get { return collection_; }
      set {
        collection_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "jsonStr" field.</summary>
    public const int JsonStrFieldNumber = 4;
    private string jsonStr_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JsonStr {
      get { return jsonStr_; }
      set {
        jsonStr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 5;
    private string options_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Options {
      get { return options_; }
      set {
        options_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InsertOneRqst);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InsertOneRqst other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Database != other.Database) return false;
      if (Collection != other.Collection) return false;
      if (JsonStr != other.JsonStr) return false;
      if (Options != other.Options) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Database.Length != 0) hash ^= Database.GetHashCode();
      if (Collection.Length != 0) hash ^= Collection.GetHashCode();
      if (JsonStr.Length != 0) hash ^= JsonStr.GetHashCode();
      if (Options.Length != 0) hash ^= Options.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Database.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Database);
      }
      if (Collection.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Collection);
      }
      if (JsonStr.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(JsonStr);
      }
      if (Options.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Database.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Database);
      }
      if (Collection.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Collection);
      }
      if (JsonStr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JsonStr);
      }
      if (Options.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Options);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InsertOneRqst other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Database.Length != 0) {
        Database = other.Database;
      }
      if (other.Collection.Length != 0) {
        Collection = other.Collection;
      }
      if (other.JsonStr.Length != 0) {
        JsonStr = other.JsonStr;
      }
      if (other.Options.Length != 0) {
        Options = other.Options;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Database = input.ReadString();
            break;
          }
          case 26: {
            Collection = input.ReadString();
            break;
          }
          case 34: {
            JsonStr = input.ReadString();
            break;
          }
          case 42: {
            Options = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InsertOneRsp : pb::IMessage<InsertOneRsp> {
    private static readonly pb::MessageParser<InsertOneRsp> _parser = new pb::MessageParser<InsertOneRsp>(() => new InsertOneRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InsertOneRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Persistence.PersistenceReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertOneRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertOneRsp(InsertOneRsp other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertOneRsp Clone() {
      return new InsertOneRsp(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// Json string with id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InsertOneRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InsertOneRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InsertOneRsp other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FindRqst : pb::IMessage<FindRqst> {
    private static readonly pb::MessageParser<FindRqst> _parser = new pb::MessageParser<FindRqst>(() => new FindRqst());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FindRqst> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Persistence.PersistenceReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FindRqst() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FindRqst(FindRqst other) : this() {
      id_ = other.id_;
      database_ = other.database_;
      collection_ = other.collection_;
      query_ = other.query_;
      options_ = other.options_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FindRqst Clone() {
      return new FindRqst(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "database" field.</summary>
    public const int DatabaseFieldNumber = 2;
    private string database_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Database {
      get { return database_; }
      set {
        database_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "collection" field.</summary>
    public const int CollectionFieldNumber = 3;
    private string collection_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Collection {
      get { return collection_; }
      set {
        collection_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "query" field.</summary>
    public const int QueryFieldNumber = 4;
    private string query_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Query {
      get { return query_; }
      set {
        query_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 6;
    private string options_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Options {
      get { return options_; }
      set {
        options_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FindRqst);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FindRqst other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Database != other.Database) return false;
      if (Collection != other.Collection) return false;
      if (Query != other.Query) return false;
      if (Options != other.Options) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Database.Length != 0) hash ^= Database.GetHashCode();
      if (Collection.Length != 0) hash ^= Collection.GetHashCode();
      if (Query.Length != 0) hash ^= Query.GetHashCode();
      if (Options.Length != 0) hash ^= Options.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Database.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Database);
      }
      if (Collection.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Collection);
      }
      if (Query.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Query);
      }
      if (Options.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Database.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Database);
      }
      if (Collection.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Collection);
      }
      if (Query.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Query);
      }
      if (Options.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Options);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FindRqst other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Database.Length != 0) {
        Database = other.Database;
      }
      if (other.Collection.Length != 0) {
        Collection = other.Collection;
      }
      if (other.Query.Length != 0) {
        Query = other.Query;
      }
      if (other.Options.Length != 0) {
        Options = other.Options;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Database = input.ReadString();
            break;
          }
          case 26: {
            Collection = input.ReadString();
            break;
          }
          case 34: {
            Query = input.ReadString();
            break;
          }
          case 50: {
            Options = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FindResp : pb::IMessage<FindResp> {
    private static readonly pb::MessageParser<FindResp> _parser = new pb::MessageParser<FindResp>(() => new FindResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FindResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Persistence.PersistenceReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FindResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FindResp(FindResp other) : this() {
      jsonStr_ = other.jsonStr_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FindResp Clone() {
      return new FindResp(this);
    }

    /// <summary>Field number for the "jsonStr" field.</summary>
    public const int JsonStrFieldNumber = 1;
    private string jsonStr_ = "";
    /// <summary>
    /// Json string
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JsonStr {
      get { return jsonStr_; }
      set {
        jsonStr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FindResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FindResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (JsonStr != other.JsonStr) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (JsonStr.Length != 0) hash ^= JsonStr.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (JsonStr.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(JsonStr);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (JsonStr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JsonStr);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FindResp other) {
      if (other == null) {
        return;
      }
      if (other.JsonStr.Length != 0) {
        JsonStr = other.JsonStr;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            JsonStr = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FindOneRqst : pb::IMessage<FindOneRqst> {
    private static readonly pb::MessageParser<FindOneRqst> _parser = new pb::MessageParser<FindOneRqst>(() => new FindOneRqst());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FindOneRqst> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Persistence.PersistenceReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FindOneRqst() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FindOneRqst(FindOneRqst other) : this() {
      id_ = other.id_;
      database_ = other.database_;
      collection_ = other.collection_;
      query_ = other.query_;
      options_ = other.options_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FindOneRqst Clone() {
      return new FindOneRqst(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "database" field.</summary>
    public const int DatabaseFieldNumber = 2;
    private string database_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Database {
      get { return database_; }
      set {
        database_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "collection" field.</summary>
    public const int CollectionFieldNumber = 3;
    private string collection_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Collection {
      get { return collection_; }
      set {
        collection_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "query" field.</summary>
    public const int QueryFieldNumber = 4;
    private string query_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Query {
      get { return query_; }
      set {
        query_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 6;
    private string options_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Options {
      get { return options_; }
      set {
        options_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FindOneRqst);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FindOneRqst other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Database != other.Database) return false;
      if (Collection != other.Collection) return false;
      if (Query != other.Query) return false;
      if (Options != other.Options) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Database.Length != 0) hash ^= Database.GetHashCode();
      if (Collection.Length != 0) hash ^= Collection.GetHashCode();
      if (Query.Length != 0) hash ^= Query.GetHashCode();
      if (Options.Length != 0) hash ^= Options.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Database.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Database);
      }
      if (Collection.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Collection);
      }
      if (Query.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Query);
      }
      if (Options.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Database.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Database);
      }
      if (Collection.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Collection);
      }
      if (Query.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Query);
      }
      if (Options.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Options);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FindOneRqst other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Database.Length != 0) {
        Database = other.Database;
      }
      if (other.Collection.Length != 0) {
        Collection = other.Collection;
      }
      if (other.Query.Length != 0) {
        Query = other.Query;
      }
      if (other.Options.Length != 0) {
        Options = other.Options;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Database = input.ReadString();
            break;
          }
          case 26: {
            Collection = input.ReadString();
            break;
          }
          case 34: {
            Query = input.ReadString();
            break;
          }
          case 50: {
            Options = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FindOneResp : pb::IMessage<FindOneResp> {
    private static readonly pb::MessageParser<FindOneResp> _parser = new pb::MessageParser<FindOneResp>(() => new FindOneResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FindOneResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Persistence.PersistenceReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FindOneResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FindOneResp(FindOneResp other) : this() {
      jsonStr_ = other.jsonStr_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FindOneResp Clone() {
      return new FindOneResp(this);
    }

    /// <summary>Field number for the "jsonStr" field.</summary>
    public const int JsonStrFieldNumber = 1;
    private string jsonStr_ = "";
    /// <summary>
    /// Json string
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JsonStr {
      get { return jsonStr_; }
      set {
        jsonStr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FindOneResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FindOneResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (JsonStr != other.JsonStr) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (JsonStr.Length != 0) hash ^= JsonStr.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (JsonStr.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(JsonStr);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (JsonStr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JsonStr);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FindOneResp other) {
      if (other == null) {
        return;
      }
      if (other.JsonStr.Length != 0) {
        JsonStr = other.JsonStr;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            JsonStr = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AggregateRqst : pb::IMessage<AggregateRqst> {
    private static readonly pb::MessageParser<AggregateRqst> _parser = new pb::MessageParser<AggregateRqst>(() => new AggregateRqst());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AggregateRqst> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Persistence.PersistenceReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AggregateRqst() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AggregateRqst(AggregateRqst other) : this() {
      id_ = other.id_;
      database_ = other.database_;
      collection_ = other.collection_;
      pipeline_ = other.pipeline_;
      options_ = other.options_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AggregateRqst Clone() {
      return new AggregateRqst(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "database" field.</summary>
    public const int DatabaseFieldNumber = 2;
    private string database_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Database {
      get { return database_; }
      set {
        database_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "collection" field.</summary>
    public const int CollectionFieldNumber = 3;
    private string collection_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Collection {
      get { return collection_; }
      set {
        collection_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pipeline" field.</summary>
    public const int PipelineFieldNumber = 4;
    private string pipeline_ = "";
    /// <summary>
    /// Array of transformations.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pipeline {
      get { return pipeline_; }
      set {
        pipeline_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 6;
    private string options_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Options {
      get { return options_; }
      set {
        options_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AggregateRqst);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AggregateRqst other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Database != other.Database) return false;
      if (Collection != other.Collection) return false;
      if (Pipeline != other.Pipeline) return false;
      if (Options != other.Options) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Database.Length != 0) hash ^= Database.GetHashCode();
      if (Collection.Length != 0) hash ^= Collection.GetHashCode();
      if (Pipeline.Length != 0) hash ^= Pipeline.GetHashCode();
      if (Options.Length != 0) hash ^= Options.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Database.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Database);
      }
      if (Collection.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Collection);
      }
      if (Pipeline.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Pipeline);
      }
      if (Options.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Database.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Database);
      }
      if (Collection.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Collection);
      }
      if (Pipeline.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pipeline);
      }
      if (Options.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Options);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AggregateRqst other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Database.Length != 0) {
        Database = other.Database;
      }
      if (other.Collection.Length != 0) {
        Collection = other.Collection;
      }
      if (other.Pipeline.Length != 0) {
        Pipeline = other.Pipeline;
      }
      if (other.Options.Length != 0) {
        Options = other.Options;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Database = input.ReadString();
            break;
          }
          case 26: {
            Collection = input.ReadString();
            break;
          }
          case 34: {
            Pipeline = input.ReadString();
            break;
          }
          case 50: {
            Options = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AggregateResp : pb::IMessage<AggregateResp> {
    private static readonly pb::MessageParser<AggregateResp> _parser = new pb::MessageParser<AggregateResp>(() => new AggregateResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AggregateResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Persistence.PersistenceReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AggregateResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AggregateResp(AggregateResp other) : this() {
      jsonStr_ = other.jsonStr_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AggregateResp Clone() {
      return new AggregateResp(this);
    }

    /// <summary>Field number for the "jsonStr" field.</summary>
    public const int JsonStrFieldNumber = 1;
    private string jsonStr_ = "";
    /// <summary>
    /// Json string
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JsonStr {
      get { return jsonStr_; }
      set {
        jsonStr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AggregateResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AggregateResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (JsonStr != other.JsonStr) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (JsonStr.Length != 0) hash ^= JsonStr.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (JsonStr.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(JsonStr);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (JsonStr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JsonStr);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AggregateResp other) {
      if (other == null) {
        return;
      }
      if (other.JsonStr.Length != 0) {
        JsonStr = other.JsonStr;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            JsonStr = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateRqst : pb::IMessage<UpdateRqst> {
    private static readonly pb::MessageParser<UpdateRqst> _parser = new pb::MessageParser<UpdateRqst>(() => new UpdateRqst());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateRqst> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Persistence.PersistenceReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRqst() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRqst(UpdateRqst other) : this() {
      id_ = other.id_;
      database_ = other.database_;
      collection_ = other.collection_;
      query_ = other.query_;
      value_ = other.value_;
      options_ = other.options_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRqst Clone() {
      return new UpdateRqst(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "database" field.</summary>
    public const int DatabaseFieldNumber = 2;
    private string database_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Database {
      get { return database_; }
      set {
        database_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "collection" field.</summary>
    public const int CollectionFieldNumber = 3;
    private string collection_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Collection {
      get { return collection_; }
      set {
        collection_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "query" field.</summary>
    public const int QueryFieldNumber = 4;
    private string query_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Query {
      get { return query_; }
      set {
        query_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 5;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 6;
    private string options_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Options {
      get { return options_; }
      set {
        options_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateRqst);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateRqst other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Database != other.Database) return false;
      if (Collection != other.Collection) return false;
      if (Query != other.Query) return false;
      if (Value != other.Value) return false;
      if (Options != other.Options) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Database.Length != 0) hash ^= Database.GetHashCode();
      if (Collection.Length != 0) hash ^= Collection.GetHashCode();
      if (Query.Length != 0) hash ^= Query.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (Options.Length != 0) hash ^= Options.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Database.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Database);
      }
      if (Collection.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Collection);
      }
      if (Query.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Query);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Value);
      }
      if (Options.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Database.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Database);
      }
      if (Collection.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Collection);
      }
      if (Query.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Query);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (Options.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Options);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateRqst other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Database.Length != 0) {
        Database = other.Database;
      }
      if (other.Collection.Length != 0) {
        Collection = other.Collection;
      }
      if (other.Query.Length != 0) {
        Query = other.Query;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      if (other.Options.Length != 0) {
        Options = other.Options;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Database = input.ReadString();
            break;
          }
          case 26: {
            Collection = input.ReadString();
            break;
          }
          case 34: {
            Query = input.ReadString();
            break;
          }
          case 42: {
            Value = input.ReadString();
            break;
          }
          case 50: {
            Options = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateRsp : pb::IMessage<UpdateRsp> {
    private static readonly pb::MessageParser<UpdateRsp> _parser = new pb::MessageParser<UpdateRsp>(() => new UpdateRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Persistence.PersistenceReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRsp(UpdateRsp other) : this() {
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRsp Clone() {
      return new UpdateRsp(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private bool result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != false) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != false) {
        output.WriteRawTag(8);
        output.WriteBool(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateRsp other) {
      if (other == null) {
        return;
      }
      if (other.Result != false) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateOneRqst : pb::IMessage<UpdateOneRqst> {
    private static readonly pb::MessageParser<UpdateOneRqst> _parser = new pb::MessageParser<UpdateOneRqst>(() => new UpdateOneRqst());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateOneRqst> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Persistence.PersistenceReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateOneRqst() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateOneRqst(UpdateOneRqst other) : this() {
      id_ = other.id_;
      database_ = other.database_;
      collection_ = other.collection_;
      query_ = other.query_;
      value_ = other.value_;
      options_ = other.options_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateOneRqst Clone() {
      return new UpdateOneRqst(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "database" field.</summary>
    public const int DatabaseFieldNumber = 2;
    private string database_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Database {
      get { return database_; }
      set {
        database_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "collection" field.</summary>
    public const int CollectionFieldNumber = 3;
    private string collection_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Collection {
      get { return collection_; }
      set {
        collection_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "query" field.</summary>
    public const int QueryFieldNumber = 4;
    private string query_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Query {
      get { return query_; }
      set {
        query_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 5;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 6;
    private string options_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Options {
      get { return options_; }
      set {
        options_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateOneRqst);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateOneRqst other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Database != other.Database) return false;
      if (Collection != other.Collection) return false;
      if (Query != other.Query) return false;
      if (Value != other.Value) return false;
      if (Options != other.Options) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Database.Length != 0) hash ^= Database.GetHashCode();
      if (Collection.Length != 0) hash ^= Collection.GetHashCode();
      if (Query.Length != 0) hash ^= Query.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (Options.Length != 0) hash ^= Options.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Database.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Database);
      }
      if (Collection.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Collection);
      }
      if (Query.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Query);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Value);
      }
      if (Options.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Database.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Database);
      }
      if (Collection.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Collection);
      }
      if (Query.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Query);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (Options.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Options);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateOneRqst other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Database.Length != 0) {
        Database = other.Database;
      }
      if (other.Collection.Length != 0) {
        Collection = other.Collection;
      }
      if (other.Query.Length != 0) {
        Query = other.Query;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      if (other.Options.Length != 0) {
        Options = other.Options;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Database = input.ReadString();
            break;
          }
          case 26: {
            Collection = input.ReadString();
            break;
          }
          case 34: {
            Query = input.ReadString();
            break;
          }
          case 42: {
            Value = input.ReadString();
            break;
          }
          case 50: {
            Options = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateOneRsp : pb::IMessage<UpdateOneRsp> {
    private static readonly pb::MessageParser<UpdateOneRsp> _parser = new pb::MessageParser<UpdateOneRsp>(() => new UpdateOneRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateOneRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Persistence.PersistenceReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateOneRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateOneRsp(UpdateOneRsp other) : this() {
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateOneRsp Clone() {
      return new UpdateOneRsp(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private bool result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateOneRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateOneRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != false) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != false) {
        output.WriteRawTag(8);
        output.WriteBool(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateOneRsp other) {
      if (other == null) {
        return;
      }
      if (other.Result != false) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReplaceOneRqst : pb::IMessage<ReplaceOneRqst> {
    private static readonly pb::MessageParser<ReplaceOneRqst> _parser = new pb::MessageParser<ReplaceOneRqst>(() => new ReplaceOneRqst());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReplaceOneRqst> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Persistence.PersistenceReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReplaceOneRqst() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReplaceOneRqst(ReplaceOneRqst other) : this() {
      id_ = other.id_;
      database_ = other.database_;
      collection_ = other.collection_;
      query_ = other.query_;
      value_ = other.value_;
      options_ = other.options_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReplaceOneRqst Clone() {
      return new ReplaceOneRqst(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "database" field.</summary>
    public const int DatabaseFieldNumber = 2;
    private string database_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Database {
      get { return database_; }
      set {
        database_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "collection" field.</summary>
    public const int CollectionFieldNumber = 3;
    private string collection_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Collection {
      get { return collection_; }
      set {
        collection_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "query" field.</summary>
    public const int QueryFieldNumber = 4;
    private string query_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Query {
      get { return query_; }
      set {
        query_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 5;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 6;
    private string options_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Options {
      get { return options_; }
      set {
        options_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReplaceOneRqst);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReplaceOneRqst other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Database != other.Database) return false;
      if (Collection != other.Collection) return false;
      if (Query != other.Query) return false;
      if (Value != other.Value) return false;
      if (Options != other.Options) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Database.Length != 0) hash ^= Database.GetHashCode();
      if (Collection.Length != 0) hash ^= Collection.GetHashCode();
      if (Query.Length != 0) hash ^= Query.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (Options.Length != 0) hash ^= Options.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Database.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Database);
      }
      if (Collection.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Collection);
      }
      if (Query.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Query);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Value);
      }
      if (Options.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Database.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Database);
      }
      if (Collection.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Collection);
      }
      if (Query.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Query);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (Options.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Options);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReplaceOneRqst other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Database.Length != 0) {
        Database = other.Database;
      }
      if (other.Collection.Length != 0) {
        Collection = other.Collection;
      }
      if (other.Query.Length != 0) {
        Query = other.Query;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      if (other.Options.Length != 0) {
        Options = other.Options;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Database = input.ReadString();
            break;
          }
          case 26: {
            Collection = input.ReadString();
            break;
          }
          case 34: {
            Query = input.ReadString();
            break;
          }
          case 42: {
            Value = input.ReadString();
            break;
          }
          case 50: {
            Options = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReplaceOneRsp : pb::IMessage<ReplaceOneRsp> {
    private static readonly pb::MessageParser<ReplaceOneRsp> _parser = new pb::MessageParser<ReplaceOneRsp>(() => new ReplaceOneRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReplaceOneRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Persistence.PersistenceReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReplaceOneRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReplaceOneRsp(ReplaceOneRsp other) : this() {
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReplaceOneRsp Clone() {
      return new ReplaceOneRsp(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private bool result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReplaceOneRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReplaceOneRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != false) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != false) {
        output.WriteRawTag(8);
        output.WriteBool(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReplaceOneRsp other) {
      if (other == null) {
        return;
      }
      if (other.Result != false) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteRqst : pb::IMessage<DeleteRqst> {
    private static readonly pb::MessageParser<DeleteRqst> _parser = new pb::MessageParser<DeleteRqst>(() => new DeleteRqst());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteRqst> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Persistence.PersistenceReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRqst() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRqst(DeleteRqst other) : this() {
      id_ = other.id_;
      database_ = other.database_;
      collection_ = other.collection_;
      query_ = other.query_;
      options_ = other.options_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRqst Clone() {
      return new DeleteRqst(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "database" field.</summary>
    public const int DatabaseFieldNumber = 2;
    private string database_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Database {
      get { return database_; }
      set {
        database_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "collection" field.</summary>
    public const int CollectionFieldNumber = 3;
    private string collection_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Collection {
      get { return collection_; }
      set {
        collection_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "query" field.</summary>
    public const int QueryFieldNumber = 4;
    private string query_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Query {
      get { return query_; }
      set {
        query_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 5;
    private string options_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Options {
      get { return options_; }
      set {
        options_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteRqst);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteRqst other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Database != other.Database) return false;
      if (Collection != other.Collection) return false;
      if (Query != other.Query) return false;
      if (Options != other.Options) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Database.Length != 0) hash ^= Database.GetHashCode();
      if (Collection.Length != 0) hash ^= Collection.GetHashCode();
      if (Query.Length != 0) hash ^= Query.GetHashCode();
      if (Options.Length != 0) hash ^= Options.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Database.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Database);
      }
      if (Collection.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Collection);
      }
      if (Query.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Query);
      }
      if (Options.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Database.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Database);
      }
      if (Collection.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Collection);
      }
      if (Query.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Query);
      }
      if (Options.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Options);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteRqst other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Database.Length != 0) {
        Database = other.Database;
      }
      if (other.Collection.Length != 0) {
        Collection = other.Collection;
      }
      if (other.Query.Length != 0) {
        Query = other.Query;
      }
      if (other.Options.Length != 0) {
        Options = other.Options;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Database = input.ReadString();
            break;
          }
          case 26: {
            Collection = input.ReadString();
            break;
          }
          case 34: {
            Query = input.ReadString();
            break;
          }
          case 42: {
            Options = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteRsp : pb::IMessage<DeleteRsp> {
    private static readonly pb::MessageParser<DeleteRsp> _parser = new pb::MessageParser<DeleteRsp>(() => new DeleteRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Persistence.PersistenceReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRsp(DeleteRsp other) : this() {
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRsp Clone() {
      return new DeleteRsp(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private bool result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != false) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != false) {
        output.WriteRawTag(8);
        output.WriteBool(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteRsp other) {
      if (other == null) {
        return;
      }
      if (other.Result != false) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteOneRqst : pb::IMessage<DeleteOneRqst> {
    private static readonly pb::MessageParser<DeleteOneRqst> _parser = new pb::MessageParser<DeleteOneRqst>(() => new DeleteOneRqst());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteOneRqst> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Persistence.PersistenceReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteOneRqst() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteOneRqst(DeleteOneRqst other) : this() {
      id_ = other.id_;
      database_ = other.database_;
      collection_ = other.collection_;
      query_ = other.query_;
      options_ = other.options_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteOneRqst Clone() {
      return new DeleteOneRqst(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "database" field.</summary>
    public const int DatabaseFieldNumber = 2;
    private string database_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Database {
      get { return database_; }
      set {
        database_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "collection" field.</summary>
    public const int CollectionFieldNumber = 3;
    private string collection_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Collection {
      get { return collection_; }
      set {
        collection_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "query" field.</summary>
    public const int QueryFieldNumber = 4;
    private string query_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Query {
      get { return query_; }
      set {
        query_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 5;
    private string options_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Options {
      get { return options_; }
      set {
        options_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteOneRqst);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteOneRqst other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Database != other.Database) return false;
      if (Collection != other.Collection) return false;
      if (Query != other.Query) return false;
      if (Options != other.Options) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Database.Length != 0) hash ^= Database.GetHashCode();
      if (Collection.Length != 0) hash ^= Collection.GetHashCode();
      if (Query.Length != 0) hash ^= Query.GetHashCode();
      if (Options.Length != 0) hash ^= Options.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Database.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Database);
      }
      if (Collection.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Collection);
      }
      if (Query.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Query);
      }
      if (Options.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Database.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Database);
      }
      if (Collection.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Collection);
      }
      if (Query.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Query);
      }
      if (Options.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Options);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteOneRqst other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Database.Length != 0) {
        Database = other.Database;
      }
      if (other.Collection.Length != 0) {
        Collection = other.Collection;
      }
      if (other.Query.Length != 0) {
        Query = other.Query;
      }
      if (other.Options.Length != 0) {
        Options = other.Options;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Database = input.ReadString();
            break;
          }
          case 26: {
            Collection = input.ReadString();
            break;
          }
          case 34: {
            Query = input.ReadString();
            break;
          }
          case 42: {
            Options = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteOneRsp : pb::IMessage<DeleteOneRsp> {
    private static readonly pb::MessageParser<DeleteOneRsp> _parser = new pb::MessageParser<DeleteOneRsp>(() => new DeleteOneRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteOneRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Persistence.PersistenceReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteOneRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteOneRsp(DeleteOneRsp other) : this() {
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteOneRsp Clone() {
      return new DeleteOneRsp(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private bool result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteOneRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteOneRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != false) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != false) {
        output.WriteRawTag(8);
        output.WriteBool(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteOneRsp other) {
      if (other == null) {
        return;
      }
      if (other.Result != false) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateDatabaseRqst : pb::IMessage<CreateDatabaseRqst> {
    private static readonly pb::MessageParser<CreateDatabaseRqst> _parser = new pb::MessageParser<CreateDatabaseRqst>(() => new CreateDatabaseRqst());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateDatabaseRqst> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Persistence.PersistenceReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateDatabaseRqst() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateDatabaseRqst(CreateDatabaseRqst other) : this() {
      id_ = other.id_;
      database_ = other.database_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateDatabaseRqst Clone() {
      return new CreateDatabaseRqst(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "database" field.</summary>
    public const int DatabaseFieldNumber = 2;
    private string database_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Database {
      get { return database_; }
      set {
        database_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateDatabaseRqst);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateDatabaseRqst other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Database != other.Database) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Database.Length != 0) hash ^= Database.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Database.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Database);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Database.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Database);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateDatabaseRqst other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Database.Length != 0) {
        Database = other.Database;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Database = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateDatabaseRsp : pb::IMessage<CreateDatabaseRsp> {
    private static readonly pb::MessageParser<CreateDatabaseRsp> _parser = new pb::MessageParser<CreateDatabaseRsp>(() => new CreateDatabaseRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateDatabaseRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Persistence.PersistenceReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateDatabaseRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateDatabaseRsp(CreateDatabaseRsp other) : this() {
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateDatabaseRsp Clone() {
      return new CreateDatabaseRsp(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private bool result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateDatabaseRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateDatabaseRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != false) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != false) {
        output.WriteRawTag(8);
        output.WriteBool(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateDatabaseRsp other) {
      if (other == null) {
        return;
      }
      if (other.Result != false) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteDatabaseRqst : pb::IMessage<DeleteDatabaseRqst> {
    private static readonly pb::MessageParser<DeleteDatabaseRqst> _parser = new pb::MessageParser<DeleteDatabaseRqst>(() => new DeleteDatabaseRqst());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteDatabaseRqst> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Persistence.PersistenceReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteDatabaseRqst() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteDatabaseRqst(DeleteDatabaseRqst other) : this() {
      id_ = other.id_;
      database_ = other.database_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteDatabaseRqst Clone() {
      return new DeleteDatabaseRqst(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "database" field.</summary>
    public const int DatabaseFieldNumber = 2;
    private string database_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Database {
      get { return database_; }
      set {
        database_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteDatabaseRqst);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteDatabaseRqst other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Database != other.Database) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Database.Length != 0) hash ^= Database.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Database.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Database);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Database.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Database);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteDatabaseRqst other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Database.Length != 0) {
        Database = other.Database;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Database = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteDatabaseRsp : pb::IMessage<DeleteDatabaseRsp> {
    private static readonly pb::MessageParser<DeleteDatabaseRsp> _parser = new pb::MessageParser<DeleteDatabaseRsp>(() => new DeleteDatabaseRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteDatabaseRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Persistence.PersistenceReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteDatabaseRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteDatabaseRsp(DeleteDatabaseRsp other) : this() {
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteDatabaseRsp Clone() {
      return new DeleteDatabaseRsp(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private bool result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteDatabaseRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteDatabaseRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != false) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != false) {
        output.WriteRawTag(8);
        output.WriteBool(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteDatabaseRsp other) {
      if (other == null) {
        return;
      }
      if (other.Result != false) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateCollectionRqst : pb::IMessage<CreateCollectionRqst> {
    private static readonly pb::MessageParser<CreateCollectionRqst> _parser = new pb::MessageParser<CreateCollectionRqst>(() => new CreateCollectionRqst());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateCollectionRqst> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Persistence.PersistenceReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateCollectionRqst() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateCollectionRqst(CreateCollectionRqst other) : this() {
      id_ = other.id_;
      database_ = other.database_;
      collection_ = other.collection_;
      optionsStr_ = other.optionsStr_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateCollectionRqst Clone() {
      return new CreateCollectionRqst(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "database" field.</summary>
    public const int DatabaseFieldNumber = 2;
    private string database_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Database {
      get { return database_; }
      set {
        database_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "collection" field.</summary>
    public const int CollectionFieldNumber = 3;
    private string collection_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Collection {
      get { return collection_; }
      set {
        collection_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "optionsStr" field.</summary>
    public const int OptionsStrFieldNumber = 4;
    private string optionsStr_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OptionsStr {
      get { return optionsStr_; }
      set {
        optionsStr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateCollectionRqst);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateCollectionRqst other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Database != other.Database) return false;
      if (Collection != other.Collection) return false;
      if (OptionsStr != other.OptionsStr) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Database.Length != 0) hash ^= Database.GetHashCode();
      if (Collection.Length != 0) hash ^= Collection.GetHashCode();
      if (OptionsStr.Length != 0) hash ^= OptionsStr.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Database.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Database);
      }
      if (Collection.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Collection);
      }
      if (OptionsStr.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(OptionsStr);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Database.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Database);
      }
      if (Collection.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Collection);
      }
      if (OptionsStr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OptionsStr);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateCollectionRqst other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Database.Length != 0) {
        Database = other.Database;
      }
      if (other.Collection.Length != 0) {
        Collection = other.Collection;
      }
      if (other.OptionsStr.Length != 0) {
        OptionsStr = other.OptionsStr;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Database = input.ReadString();
            break;
          }
          case 26: {
            Collection = input.ReadString();
            break;
          }
          case 34: {
            OptionsStr = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateCollectionRsp : pb::IMessage<CreateCollectionRsp> {
    private static readonly pb::MessageParser<CreateCollectionRsp> _parser = new pb::MessageParser<CreateCollectionRsp>(() => new CreateCollectionRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateCollectionRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Persistence.PersistenceReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateCollectionRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateCollectionRsp(CreateCollectionRsp other) : this() {
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateCollectionRsp Clone() {
      return new CreateCollectionRsp(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private bool result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateCollectionRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateCollectionRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != false) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != false) {
        output.WriteRawTag(8);
        output.WriteBool(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateCollectionRsp other) {
      if (other == null) {
        return;
      }
      if (other.Result != false) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteCollectionRqst : pb::IMessage<DeleteCollectionRqst> {
    private static readonly pb::MessageParser<DeleteCollectionRqst> _parser = new pb::MessageParser<DeleteCollectionRqst>(() => new DeleteCollectionRqst());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteCollectionRqst> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Persistence.PersistenceReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteCollectionRqst() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteCollectionRqst(DeleteCollectionRqst other) : this() {
      id_ = other.id_;
      database_ = other.database_;
      collection_ = other.collection_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteCollectionRqst Clone() {
      return new DeleteCollectionRqst(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "database" field.</summary>
    public const int DatabaseFieldNumber = 2;
    private string database_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Database {
      get { return database_; }
      set {
        database_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "collection" field.</summary>
    public const int CollectionFieldNumber = 3;
    private string collection_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Collection {
      get { return collection_; }
      set {
        collection_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteCollectionRqst);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteCollectionRqst other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Database != other.Database) return false;
      if (Collection != other.Collection) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Database.Length != 0) hash ^= Database.GetHashCode();
      if (Collection.Length != 0) hash ^= Collection.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Database.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Database);
      }
      if (Collection.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Collection);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Database.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Database);
      }
      if (Collection.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Collection);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteCollectionRqst other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Database.Length != 0) {
        Database = other.Database;
      }
      if (other.Collection.Length != 0) {
        Collection = other.Collection;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Database = input.ReadString();
            break;
          }
          case 26: {
            Collection = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteCollectionRsp : pb::IMessage<DeleteCollectionRsp> {
    private static readonly pb::MessageParser<DeleteCollectionRsp> _parser = new pb::MessageParser<DeleteCollectionRsp>(() => new DeleteCollectionRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteCollectionRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Persistence.PersistenceReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteCollectionRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteCollectionRsp(DeleteCollectionRsp other) : this() {
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteCollectionRsp Clone() {
      return new DeleteCollectionRsp(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private bool result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteCollectionRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteCollectionRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != false) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != false) {
        output.WriteRawTag(8);
        output.WriteBool(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteCollectionRsp other) {
      if (other == null) {
        return;
      }
      if (other.Result != false) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CountRqst : pb::IMessage<CountRqst> {
    private static readonly pb::MessageParser<CountRqst> _parser = new pb::MessageParser<CountRqst>(() => new CountRqst());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CountRqst> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Persistence.PersistenceReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CountRqst() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CountRqst(CountRqst other) : this() {
      id_ = other.id_;
      database_ = other.database_;
      collection_ = other.collection_;
      query_ = other.query_;
      options_ = other.options_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CountRqst Clone() {
      return new CountRqst(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "database" field.</summary>
    public const int DatabaseFieldNumber = 2;
    private string database_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Database {
      get { return database_; }
      set {
        database_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "collection" field.</summary>
    public const int CollectionFieldNumber = 3;
    private string collection_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Collection {
      get { return collection_; }
      set {
        collection_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "query" field.</summary>
    public const int QueryFieldNumber = 4;
    private string query_ = "";
    /// <summary>
    /// filter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Query {
      get { return query_; }
      set {
        query_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 5;
    private string options_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Options {
      get { return options_; }
      set {
        options_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CountRqst);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CountRqst other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Database != other.Database) return false;
      if (Collection != other.Collection) return false;
      if (Query != other.Query) return false;
      if (Options != other.Options) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Database.Length != 0) hash ^= Database.GetHashCode();
      if (Collection.Length != 0) hash ^= Collection.GetHashCode();
      if (Query.Length != 0) hash ^= Query.GetHashCode();
      if (Options.Length != 0) hash ^= Options.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Database.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Database);
      }
      if (Collection.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Collection);
      }
      if (Query.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Query);
      }
      if (Options.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Database.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Database);
      }
      if (Collection.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Collection);
      }
      if (Query.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Query);
      }
      if (Options.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Options);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CountRqst other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Database.Length != 0) {
        Database = other.Database;
      }
      if (other.Collection.Length != 0) {
        Collection = other.Collection;
      }
      if (other.Query.Length != 0) {
        Query = other.Query;
      }
      if (other.Options.Length != 0) {
        Options = other.Options;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Database = input.ReadString();
            break;
          }
          case 26: {
            Collection = input.ReadString();
            break;
          }
          case 34: {
            Query = input.ReadString();
            break;
          }
          case 42: {
            Options = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CountRsp : pb::IMessage<CountRsp> {
    private static readonly pb::MessageParser<CountRsp> _parser = new pb::MessageParser<CountRsp>(() => new CountRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CountRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Persistence.PersistenceReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CountRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CountRsp(CountRsp other) : this() {
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CountRsp Clone() {
      return new CountRsp(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private long result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CountRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CountRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0L) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CountRsp other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0L) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RunAdminCmdRqst : pb::IMessage<RunAdminCmdRqst> {
    private static readonly pb::MessageParser<RunAdminCmdRqst> _parser = new pb::MessageParser<RunAdminCmdRqst>(() => new RunAdminCmdRqst());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RunAdminCmdRqst> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Persistence.PersistenceReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RunAdminCmdRqst() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RunAdminCmdRqst(RunAdminCmdRqst other) : this() {
      connectionId_ = other.connectionId_;
      user_ = other.user_;
      password_ = other.password_;
      script_ = other.script_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RunAdminCmdRqst Clone() {
      return new RunAdminCmdRqst(this);
    }

    /// <summary>Field number for the "connectionId" field.</summary>
    public const int ConnectionIdFieldNumber = 1;
    private string connectionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConnectionId {
      get { return connectionId_; }
      set {
        connectionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 2;
    private string user_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string User {
      get { return user_; }
      set {
        user_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 3;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "script" field.</summary>
    public const int ScriptFieldNumber = 4;
    private string script_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Script {
      get { return script_; }
      set {
        script_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RunAdminCmdRqst);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RunAdminCmdRqst other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConnectionId != other.ConnectionId) return false;
      if (User != other.User) return false;
      if (Password != other.Password) return false;
      if (Script != other.Script) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ConnectionId.Length != 0) hash ^= ConnectionId.GetHashCode();
      if (User.Length != 0) hash ^= User.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (Script.Length != 0) hash ^= Script.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ConnectionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ConnectionId);
      }
      if (User.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(User);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Password);
      }
      if (Script.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Script);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ConnectionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectionId);
      }
      if (User.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(User);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (Script.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Script);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RunAdminCmdRqst other) {
      if (other == null) {
        return;
      }
      if (other.ConnectionId.Length != 0) {
        ConnectionId = other.ConnectionId;
      }
      if (other.User.Length != 0) {
        User = other.User;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      if (other.Script.Length != 0) {
        Script = other.Script;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ConnectionId = input.ReadString();
            break;
          }
          case 18: {
            User = input.ReadString();
            break;
          }
          case 26: {
            Password = input.ReadString();
            break;
          }
          case 34: {
            Script = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RunAdminCmdRsp : pb::IMessage<RunAdminCmdRsp> {
    private static readonly pb::MessageParser<RunAdminCmdRsp> _parser = new pb::MessageParser<RunAdminCmdRsp>(() => new RunAdminCmdRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RunAdminCmdRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Persistence.PersistenceReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RunAdminCmdRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RunAdminCmdRsp(RunAdminCmdRsp other) : this() {
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RunAdminCmdRsp Clone() {
      return new RunAdminCmdRsp(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private string result_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Result {
      get { return result_; }
      set {
        result_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RunAdminCmdRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RunAdminCmdRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result.Length != 0) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RunAdminCmdRsp other) {
      if (other == null) {
        return;
      }
      if (other.Result.Length != 0) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Result = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Open a db connection.
  /// </summary>
  public sealed partial class ConnectRqst : pb::IMessage<ConnectRqst> {
    private static readonly pb::MessageParser<ConnectRqst> _parser = new pb::MessageParser<ConnectRqst>(() => new ConnectRqst());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConnectRqst> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Persistence.PersistenceReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectRqst() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectRqst(ConnectRqst other) : this() {
      connectionId_ = other.connectionId_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectRqst Clone() {
      return new ConnectRqst(this);
    }

    /// <summary>Field number for the "connectionId" field.</summary>
    public const int ConnectionIdFieldNumber = 1;
    private string connectionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConnectionId {
      get { return connectionId_; }
      set {
        connectionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 3;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConnectRqst);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConnectRqst other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConnectionId != other.ConnectionId) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ConnectionId.Length != 0) hash ^= ConnectionId.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ConnectionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ConnectionId);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ConnectionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectionId);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConnectRqst other) {
      if (other == null) {
        return;
      }
      if (other.ConnectionId.Length != 0) {
        ConnectionId = other.ConnectionId;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ConnectionId = input.ReadString();
            break;
          }
          case 26: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ConnectRsp : pb::IMessage<ConnectRsp> {
    private static readonly pb::MessageParser<ConnectRsp> _parser = new pb::MessageParser<ConnectRsp>(() => new ConnectRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConnectRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Persistence.PersistenceReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectRsp(ConnectRsp other) : this() {
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectRsp Clone() {
      return new ConnectRsp(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private bool result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConnectRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConnectRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != false) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != false) {
        output.WriteRawTag(8);
        output.WriteBool(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConnectRsp other) {
      if (other == null) {
        return;
      }
      if (other.Result != false) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Close a db connection
  /// </summary>
  public sealed partial class DisconnectRqst : pb::IMessage<DisconnectRqst> {
    private static readonly pb::MessageParser<DisconnectRqst> _parser = new pb::MessageParser<DisconnectRqst>(() => new DisconnectRqst());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DisconnectRqst> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Persistence.PersistenceReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DisconnectRqst() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DisconnectRqst(DisconnectRqst other) : this() {
      connectionId_ = other.connectionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DisconnectRqst Clone() {
      return new DisconnectRqst(this);
    }

    /// <summary>Field number for the "connectionId" field.</summary>
    public const int ConnectionIdFieldNumber = 1;
    private string connectionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConnectionId {
      get { return connectionId_; }
      set {
        connectionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DisconnectRqst);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DisconnectRqst other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConnectionId != other.ConnectionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ConnectionId.Length != 0) hash ^= ConnectionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ConnectionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ConnectionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ConnectionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DisconnectRqst other) {
      if (other == null) {
        return;
      }
      if (other.ConnectionId.Length != 0) {
        ConnectionId = other.ConnectionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ConnectionId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DisconnectRsp : pb::IMessage<DisconnectRsp> {
    private static readonly pb::MessageParser<DisconnectRsp> _parser = new pb::MessageParser<DisconnectRsp>(() => new DisconnectRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DisconnectRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Persistence.PersistenceReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DisconnectRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DisconnectRsp(DisconnectRsp other) : this() {
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DisconnectRsp Clone() {
      return new DisconnectRsp(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private bool result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DisconnectRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DisconnectRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != false) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != false) {
        output.WriteRawTag(8);
        output.WriteBool(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DisconnectRsp other) {
      if (other == null) {
        return;
      }
      if (other.Result != false) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
