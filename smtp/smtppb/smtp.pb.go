// Code generated by protoc-gen-go. DO NOT EDIT.
// source: smtp/smtppb/smtp.proto

package smtppb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BodyType int32

const (
	BodyType_TEXT BodyType = 0
	BodyType_HTML BodyType = 1
)

var BodyType_name = map[int32]string{
	0: "TEXT",
	1: "HTML",
}

var BodyType_value = map[string]int32{
	"TEXT": 0,
	"HTML": 1,
}

func (x BodyType) String() string {
	return proto.EnumName(BodyType_name, int32(x))
}

func (BodyType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f982d151f71c5db7, []int{0}
}

type Connection struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Host                 string   `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
	User                 string   `protobuf:"bytes,6,opt,name=user,proto3" json:"user,omitempty"`
	Password             string   `protobuf:"bytes,7,opt,name=password,proto3" json:"password,omitempty"`
	Port                 int32    `protobuf:"varint,8,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Connection) Reset()         { *m = Connection{} }
func (m *Connection) String() string { return proto.CompactTextString(m) }
func (*Connection) ProtoMessage()    {}
func (*Connection) Descriptor() ([]byte, []int) {
	return fileDescriptor_f982d151f71c5db7, []int{0}
}

func (m *Connection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Connection.Unmarshal(m, b)
}
func (m *Connection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Connection.Marshal(b, m, deterministic)
}
func (m *Connection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Connection.Merge(m, src)
}
func (m *Connection) XXX_Size() int {
	return xxx_messageInfo_Connection.Size(m)
}
func (m *Connection) XXX_DiscardUnknown() {
	xxx_messageInfo_Connection.DiscardUnknown(m)
}

var xxx_messageInfo_Connection proto.InternalMessageInfo

func (m *Connection) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Connection) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *Connection) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *Connection) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *Connection) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

// Create connection
type CreateConnectionRqst struct {
	Connection           *Connection `protobuf:"bytes,1,opt,name=connection,proto3" json:"connection,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CreateConnectionRqst) Reset()         { *m = CreateConnectionRqst{} }
func (m *CreateConnectionRqst) String() string { return proto.CompactTextString(m) }
func (*CreateConnectionRqst) ProtoMessage()    {}
func (*CreateConnectionRqst) Descriptor() ([]byte, []int) {
	return fileDescriptor_f982d151f71c5db7, []int{1}
}

func (m *CreateConnectionRqst) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateConnectionRqst.Unmarshal(m, b)
}
func (m *CreateConnectionRqst) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateConnectionRqst.Marshal(b, m, deterministic)
}
func (m *CreateConnectionRqst) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateConnectionRqst.Merge(m, src)
}
func (m *CreateConnectionRqst) XXX_Size() int {
	return xxx_messageInfo_CreateConnectionRqst.Size(m)
}
func (m *CreateConnectionRqst) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateConnectionRqst.DiscardUnknown(m)
}

var xxx_messageInfo_CreateConnectionRqst proto.InternalMessageInfo

func (m *CreateConnectionRqst) GetConnection() *Connection {
	if m != nil {
		return m.Connection
	}
	return nil
}

type CreateConnectionRsp struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateConnectionRsp) Reset()         { *m = CreateConnectionRsp{} }
func (m *CreateConnectionRsp) String() string { return proto.CompactTextString(m) }
func (*CreateConnectionRsp) ProtoMessage()    {}
func (*CreateConnectionRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_f982d151f71c5db7, []int{2}
}

func (m *CreateConnectionRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateConnectionRsp.Unmarshal(m, b)
}
func (m *CreateConnectionRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateConnectionRsp.Marshal(b, m, deterministic)
}
func (m *CreateConnectionRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateConnectionRsp.Merge(m, src)
}
func (m *CreateConnectionRsp) XXX_Size() int {
	return xxx_messageInfo_CreateConnectionRsp.Size(m)
}
func (m *CreateConnectionRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateConnectionRsp.DiscardUnknown(m)
}

var xxx_messageInfo_CreateConnectionRsp proto.InternalMessageInfo

func (m *CreateConnectionRsp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

// Delete connection
type DeleteConnectionRqst struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteConnectionRqst) Reset()         { *m = DeleteConnectionRqst{} }
func (m *DeleteConnectionRqst) String() string { return proto.CompactTextString(m) }
func (*DeleteConnectionRqst) ProtoMessage()    {}
func (*DeleteConnectionRqst) Descriptor() ([]byte, []int) {
	return fileDescriptor_f982d151f71c5db7, []int{3}
}

func (m *DeleteConnectionRqst) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteConnectionRqst.Unmarshal(m, b)
}
func (m *DeleteConnectionRqst) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteConnectionRqst.Marshal(b, m, deterministic)
}
func (m *DeleteConnectionRqst) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteConnectionRqst.Merge(m, src)
}
func (m *DeleteConnectionRqst) XXX_Size() int {
	return xxx_messageInfo_DeleteConnectionRqst.Size(m)
}
func (m *DeleteConnectionRqst) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteConnectionRqst.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteConnectionRqst proto.InternalMessageInfo

func (m *DeleteConnectionRqst) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeleteConnectionRsp struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteConnectionRsp) Reset()         { *m = DeleteConnectionRsp{} }
func (m *DeleteConnectionRsp) String() string { return proto.CompactTextString(m) }
func (*DeleteConnectionRsp) ProtoMessage()    {}
func (*DeleteConnectionRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_f982d151f71c5db7, []int{4}
}

func (m *DeleteConnectionRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteConnectionRsp.Unmarshal(m, b)
}
func (m *DeleteConnectionRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteConnectionRsp.Marshal(b, m, deterministic)
}
func (m *DeleteConnectionRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteConnectionRsp.Merge(m, src)
}
func (m *DeleteConnectionRsp) XXX_Size() int {
	return xxx_messageInfo_DeleteConnectionRsp.Size(m)
}
func (m *DeleteConnectionRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteConnectionRsp.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteConnectionRsp proto.InternalMessageInfo

func (m *DeleteConnectionRsp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type CarbonCopy struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CarbonCopy) Reset()         { *m = CarbonCopy{} }
func (m *CarbonCopy) String() string { return proto.CompactTextString(m) }
func (*CarbonCopy) ProtoMessage()    {}
func (*CarbonCopy) Descriptor() ([]byte, []int) {
	return fileDescriptor_f982d151f71c5db7, []int{5}
}

func (m *CarbonCopy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CarbonCopy.Unmarshal(m, b)
}
func (m *CarbonCopy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CarbonCopy.Marshal(b, m, deterministic)
}
func (m *CarbonCopy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CarbonCopy.Merge(m, src)
}
func (m *CarbonCopy) XXX_Size() int {
	return xxx_messageInfo_CarbonCopy.Size(m)
}
func (m *CarbonCopy) XXX_DiscardUnknown() {
	xxx_messageInfo_CarbonCopy.DiscardUnknown(m)
}

var xxx_messageInfo_CarbonCopy proto.InternalMessageInfo

func (m *CarbonCopy) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *CarbonCopy) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Attachement struct {
	FileName             string   `protobuf:"bytes,1,opt,name=fileName,proto3" json:"fileName,omitempty"`
	FileData             []byte   `protobuf:"bytes,2,opt,name=fileData,proto3" json:"fileData,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Attachement) Reset()         { *m = Attachement{} }
func (m *Attachement) String() string { return proto.CompactTextString(m) }
func (*Attachement) ProtoMessage()    {}
func (*Attachement) Descriptor() ([]byte, []int) {
	return fileDescriptor_f982d151f71c5db7, []int{6}
}

func (m *Attachement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Attachement.Unmarshal(m, b)
}
func (m *Attachement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Attachement.Marshal(b, m, deterministic)
}
func (m *Attachement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Attachement.Merge(m, src)
}
func (m *Attachement) XXX_Size() int {
	return xxx_messageInfo_Attachement.Size(m)
}
func (m *Attachement) XXX_DiscardUnknown() {
	xxx_messageInfo_Attachement.DiscardUnknown(m)
}

var xxx_messageInfo_Attachement proto.InternalMessageInfo

func (m *Attachement) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *Attachement) GetFileData() []byte {
	if m != nil {
		return m.FileData
	}
	return nil
}

type Email struct {
	From                 string        `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To                   []string      `protobuf:"bytes,3,rep,name=to,proto3" json:"to,omitempty"`
	Cc                   []*CarbonCopy `protobuf:"bytes,4,rep,name=cc,proto3" json:"cc,omitempty"`
	Subject              string        `protobuf:"bytes,5,opt,name=subject,proto3" json:"subject,omitempty"`
	Body                 string        `protobuf:"bytes,6,opt,name=body,proto3" json:"body,omitempty"`
	BodyType             BodyType      `protobuf:"varint,7,opt,name=bodyType,proto3,enum=smtp.BodyType" json:"bodyType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Email) Reset()         { *m = Email{} }
func (m *Email) String() string { return proto.CompactTextString(m) }
func (*Email) ProtoMessage()    {}
func (*Email) Descriptor() ([]byte, []int) {
	return fileDescriptor_f982d151f71c5db7, []int{7}
}

func (m *Email) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Email.Unmarshal(m, b)
}
func (m *Email) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Email.Marshal(b, m, deterministic)
}
func (m *Email) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Email.Merge(m, src)
}
func (m *Email) XXX_Size() int {
	return xxx_messageInfo_Email.Size(m)
}
func (m *Email) XXX_DiscardUnknown() {
	xxx_messageInfo_Email.DiscardUnknown(m)
}

var xxx_messageInfo_Email proto.InternalMessageInfo

func (m *Email) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *Email) GetTo() []string {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *Email) GetCc() []*CarbonCopy {
	if m != nil {
		return m.Cc
	}
	return nil
}

func (m *Email) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *Email) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *Email) GetBodyType() BodyType {
	if m != nil {
		return m.BodyType
	}
	return BodyType_TEXT
}

type SendEmailRqst struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Email                *Email   `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendEmailRqst) Reset()         { *m = SendEmailRqst{} }
func (m *SendEmailRqst) String() string { return proto.CompactTextString(m) }
func (*SendEmailRqst) ProtoMessage()    {}
func (*SendEmailRqst) Descriptor() ([]byte, []int) {
	return fileDescriptor_f982d151f71c5db7, []int{8}
}

func (m *SendEmailRqst) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendEmailRqst.Unmarshal(m, b)
}
func (m *SendEmailRqst) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendEmailRqst.Marshal(b, m, deterministic)
}
func (m *SendEmailRqst) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendEmailRqst.Merge(m, src)
}
func (m *SendEmailRqst) XXX_Size() int {
	return xxx_messageInfo_SendEmailRqst.Size(m)
}
func (m *SendEmailRqst) XXX_DiscardUnknown() {
	xxx_messageInfo_SendEmailRqst.DiscardUnknown(m)
}

var xxx_messageInfo_SendEmailRqst proto.InternalMessageInfo

func (m *SendEmailRqst) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SendEmailRqst) GetEmail() *Email {
	if m != nil {
		return m.Email
	}
	return nil
}

type SendEmailRsp struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendEmailRsp) Reset()         { *m = SendEmailRsp{} }
func (m *SendEmailRsp) String() string { return proto.CompactTextString(m) }
func (*SendEmailRsp) ProtoMessage()    {}
func (*SendEmailRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_f982d151f71c5db7, []int{9}
}

func (m *SendEmailRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendEmailRsp.Unmarshal(m, b)
}
func (m *SendEmailRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendEmailRsp.Marshal(b, m, deterministic)
}
func (m *SendEmailRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendEmailRsp.Merge(m, src)
}
func (m *SendEmailRsp) XXX_Size() int {
	return xxx_messageInfo_SendEmailRsp.Size(m)
}
func (m *SendEmailRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_SendEmailRsp.DiscardUnknown(m)
}

var xxx_messageInfo_SendEmailRsp proto.InternalMessageInfo

func (m *SendEmailRsp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type SendEmailWithAttachementsRqst struct {
	Id                   string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Email                *Email       `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Attachements         *Attachement `protobuf:"bytes,3,opt,name=attachements,proto3" json:"attachements,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SendEmailWithAttachementsRqst) Reset()         { *m = SendEmailWithAttachementsRqst{} }
func (m *SendEmailWithAttachementsRqst) String() string { return proto.CompactTextString(m) }
func (*SendEmailWithAttachementsRqst) ProtoMessage()    {}
func (*SendEmailWithAttachementsRqst) Descriptor() ([]byte, []int) {
	return fileDescriptor_f982d151f71c5db7, []int{10}
}

func (m *SendEmailWithAttachementsRqst) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendEmailWithAttachementsRqst.Unmarshal(m, b)
}
func (m *SendEmailWithAttachementsRqst) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendEmailWithAttachementsRqst.Marshal(b, m, deterministic)
}
func (m *SendEmailWithAttachementsRqst) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendEmailWithAttachementsRqst.Merge(m, src)
}
func (m *SendEmailWithAttachementsRqst) XXX_Size() int {
	return xxx_messageInfo_SendEmailWithAttachementsRqst.Size(m)
}
func (m *SendEmailWithAttachementsRqst) XXX_DiscardUnknown() {
	xxx_messageInfo_SendEmailWithAttachementsRqst.DiscardUnknown(m)
}

var xxx_messageInfo_SendEmailWithAttachementsRqst proto.InternalMessageInfo

func (m *SendEmailWithAttachementsRqst) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SendEmailWithAttachementsRqst) GetEmail() *Email {
	if m != nil {
		return m.Email
	}
	return nil
}

func (m *SendEmailWithAttachementsRqst) GetAttachements() *Attachement {
	if m != nil {
		return m.Attachements
	}
	return nil
}

type SendEmailWithAttachementsRsp struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendEmailWithAttachementsRsp) Reset()         { *m = SendEmailWithAttachementsRsp{} }
func (m *SendEmailWithAttachementsRsp) String() string { return proto.CompactTextString(m) }
func (*SendEmailWithAttachementsRsp) ProtoMessage()    {}
func (*SendEmailWithAttachementsRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_f982d151f71c5db7, []int{11}
}

func (m *SendEmailWithAttachementsRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendEmailWithAttachementsRsp.Unmarshal(m, b)
}
func (m *SendEmailWithAttachementsRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendEmailWithAttachementsRsp.Marshal(b, m, deterministic)
}
func (m *SendEmailWithAttachementsRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendEmailWithAttachementsRsp.Merge(m, src)
}
func (m *SendEmailWithAttachementsRsp) XXX_Size() int {
	return xxx_messageInfo_SendEmailWithAttachementsRsp.Size(m)
}
func (m *SendEmailWithAttachementsRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_SendEmailWithAttachementsRsp.DiscardUnknown(m)
}

var xxx_messageInfo_SendEmailWithAttachementsRsp proto.InternalMessageInfo

func (m *SendEmailWithAttachementsRsp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func init() {
	proto.RegisterEnum("smtp.BodyType", BodyType_name, BodyType_value)
	proto.RegisterType((*Connection)(nil), "smtp.Connection")
	proto.RegisterType((*CreateConnectionRqst)(nil), "smtp.CreateConnectionRqst")
	proto.RegisterType((*CreateConnectionRsp)(nil), "smtp.CreateConnectionRsp")
	proto.RegisterType((*DeleteConnectionRqst)(nil), "smtp.DeleteConnectionRqst")
	proto.RegisterType((*DeleteConnectionRsp)(nil), "smtp.DeleteConnectionRsp")
	proto.RegisterType((*CarbonCopy)(nil), "smtp.CarbonCopy")
	proto.RegisterType((*Attachement)(nil), "smtp.Attachement")
	proto.RegisterType((*Email)(nil), "smtp.Email")
	proto.RegisterType((*SendEmailRqst)(nil), "smtp.SendEmailRqst")
	proto.RegisterType((*SendEmailRsp)(nil), "smtp.SendEmailRsp")
	proto.RegisterType((*SendEmailWithAttachementsRqst)(nil), "smtp.SendEmailWithAttachementsRqst")
	proto.RegisterType((*SendEmailWithAttachementsRsp)(nil), "smtp.SendEmailWithAttachementsRsp")
}

func init() { proto.RegisterFile("smtp/smtppb/smtp.proto", fileDescriptor_f982d151f71c5db7) }

var fileDescriptor_f982d151f71c5db7 = []byte{
	// 562 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0xdd, 0x6e, 0xd3, 0x30,
	0x14, 0x6e, 0xd2, 0x9f, 0x65, 0x27, 0xa5, 0x2a, 0xde, 0x34, 0x65, 0x15, 0xa0, 0x62, 0xa4, 0xa9,
	0x9a, 0xc4, 0x40, 0x45, 0xec, 0x82, 0x3b, 0xda, 0x55, 0x9a, 0xc4, 0xcf, 0x45, 0x5a, 0x09, 0xc4,
	0x5d, 0x9a, 0x78, 0x6a, 0x50, 0x13, 0x07, 0xdb, 0x05, 0xf5, 0x11, 0x78, 0x12, 0x9e, 0x85, 0xb7,
	0x42, 0xc7, 0x6e, 0xb2, 0xac, 0x4d, 0x87, 0xb4, 0x9b, 0xe4, 0xfc, 0x7c, 0xfe, 0x8e, 0xcf, 0x67,
	0x1f, 0xc3, 0x89, 0x4c, 0x54, 0xf6, 0x0a, 0x3f, 0xd9, 0x5c, 0xff, 0x2e, 0x32, 0xc1, 0x15, 0x27,
	0x0d, 0xb4, 0xa9, 0x02, 0x18, 0xf3, 0x34, 0x65, 0xa1, 0x8a, 0x79, 0x4a, 0x3a, 0x60, 0xc7, 0x91,
	0x67, 0xf5, 0xad, 0xc1, 0xa1, 0x6f, 0xc7, 0x11, 0x21, 0xd0, 0x58, 0x70, 0xa9, 0xbc, 0xba, 0x8e,
	0x68, 0x1b, 0x63, 0x2b, 0xc9, 0x84, 0xd7, 0x32, 0x31, 0xb4, 0x49, 0x0f, 0x9c, 0x2c, 0x90, 0xf2,
	0x17, 0x17, 0x91, 0x77, 0xa0, 0xe3, 0x85, 0x8f, 0xf8, 0x8c, 0x0b, 0xe5, 0x39, 0x7d, 0x6b, 0xd0,
	0xf4, 0xb5, 0x4d, 0xaf, 0xe1, 0x78, 0x2c, 0x58, 0xa0, 0xd8, 0x6d, 0x6d, 0xff, 0x87, 0x54, 0xe4,
	0x35, 0x40, 0x58, 0x44, 0xf4, 0x3e, 0xdc, 0x61, 0xf7, 0x42, 0x6f, 0xba, 0x84, 0x2c, 0x61, 0xe8,
	0x4b, 0x38, 0xda, 0x61, 0x92, 0x19, 0x39, 0x81, 0x96, 0x60, 0x72, 0xb5, 0x54, 0x9a, 0xc4, 0xf1,
	0x37, 0x1e, 0x3d, 0x83, 0xe3, 0x2b, 0xb6, 0x64, 0x3b, 0x85, 0xb7, 0x1a, 0x47, 0xda, 0x1d, 0xdc,
	0x3d, 0xb4, 0xef, 0x00, 0xc6, 0x81, 0x98, 0xf3, 0x74, 0xcc, 0xb3, 0x35, 0xf1, 0xe0, 0x20, 0x88,
	0x22, 0xc1, 0xa4, 0xdc, 0x30, 0xe6, 0x2e, 0x6a, 0x91, 0x06, 0x09, 0xf3, 0x6c, 0xa3, 0x1d, 0xda,
	0x74, 0x02, 0xee, 0x7b, 0xa5, 0x82, 0x70, 0xc1, 0x12, 0x96, 0x2a, 0x94, 0xf2, 0x26, 0x5e, 0xb2,
	0xcf, 0x08, 0x33, 0xab, 0x0b, 0x3f, 0xcf, 0x5d, 0x05, 0x2a, 0xd0, 0x14, 0x6d, 0xbf, 0xf0, 0xe9,
	0x1f, 0x0b, 0x9a, 0x93, 0x24, 0x88, 0x97, 0x58, 0xe4, 0x46, 0xf0, 0x24, 0x2f, 0x82, 0x36, 0xf6,
	0xa7, 0xb8, 0x57, 0xef, 0xd7, 0xb1, 0x3f, 0xc5, 0x49, 0x1f, 0xec, 0x30, 0xf4, 0x1a, 0xfd, 0x7a,
	0x49, 0xe0, 0xa2, 0x01, 0xdf, 0x0e, 0x43, 0x6c, 0x42, 0xae, 0xe6, 0xdf, 0x59, 0xa8, 0xbc, 0xa6,
	0x69, 0x62, 0xe3, 0x22, 0xff, 0x9c, 0x47, 0xeb, 0xfc, 0x02, 0xa0, 0x4d, 0xce, 0xc1, 0xc1, 0xff,
	0x6c, 0x9d, 0x31, 0x7d, 0x01, 0x3a, 0xc3, 0x8e, 0x61, 0x1d, 0x6d, 0xa2, 0x7e, 0x91, 0xa7, 0x23,
	0x78, 0x34, 0x65, 0x69, 0xa4, 0x37, 0x5b, 0x25, 0x3e, 0x79, 0x0e, 0x4d, 0x86, 0x49, 0xdd, 0x81,
	0x3b, 0x74, 0x0d, 0x93, 0xc1, 0x9b, 0x0c, 0x3d, 0x83, 0xf6, 0x2d, 0xc7, 0x3d, 0x07, 0xf3, 0xdb,
	0x82, 0xa7, 0x05, 0xf0, 0x4b, 0xac, 0x16, 0x25, 0xa9, 0xe5, 0x03, 0x8b, 0x93, 0xb7, 0xd0, 0x0e,
	0x4a, 0x34, 0x7a, 0x3a, 0xdc, 0xe1, 0x63, 0x83, 0x2c, 0x15, 0xf0, 0xef, 0xc0, 0xe8, 0x25, 0x3c,
	0xd9, 0xbf, 0x95, 0xfd, 0x3d, 0x9c, 0x3f, 0x03, 0x27, 0x57, 0x91, 0x38, 0xd0, 0x98, 0x4d, 0xbe,
	0xce, 0xba, 0x35, 0xb4, 0xae, 0x67, 0x9f, 0x3e, 0x76, 0xad, 0xe1, 0x5f, 0x1b, 0xdc, 0x69, 0xa2,
	0xb2, 0x29, 0x13, 0x3f, 0xe3, 0x90, 0x91, 0x0f, 0xd0, 0xdd, 0x1e, 0x09, 0xd2, 0xdb, 0x9c, 0x71,
	0xc5, 0xd0, 0xf5, 0x4e, 0xf7, 0xe4, 0x64, 0x46, 0x6b, 0x48, 0xb6, 0x3d, 0x08, 0x39, 0x59, 0xd5,
	0x20, 0xe5, 0x64, 0x15, 0xc3, 0x43, 0x6b, 0xe4, 0x12, 0x0e, 0x0b, 0x05, 0xc8, 0x91, 0x41, 0xde,
	0xb9, 0x0a, 0x3d, 0xb2, 0x1d, 0xd4, 0xeb, 0x16, 0x70, 0xba, 0x57, 0x39, 0xf2, 0x62, 0x6b, 0x49,
	0xd5, 0x29, 0xf7, 0xe8, 0xff, 0x40, 0x58, 0x67, 0x60, 0x8d, 0x9c, 0x6f, 0x2d, 0xf3, 0x52, 0xce,
	0x5b, 0xfa, 0x95, 0x7c, 0xf3, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x78, 0x7d, 0xb4, 0x23, 0x3f, 0x05,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SmtpServiceClient is the client API for SmtpService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SmtpServiceClient interface {
	// Create a connection.
	CreateConnection(ctx context.Context, in *CreateConnectionRqst, opts ...grpc.CallOption) (*CreateConnectionRsp, error)
	// Delete a connection.
	DeleteConnection(ctx context.Context, in *DeleteConnectionRqst, opts ...grpc.CallOption) (*DeleteConnectionRsp, error)
	// Send a simple email whitout file.
	SendEmail(ctx context.Context, in *SendEmailRqst, opts ...grpc.CallOption) (*SendEmailRsp, error)
	// Send email with attachements.
	SendEmailWithAttachements(ctx context.Context, opts ...grpc.CallOption) (SmtpService_SendEmailWithAttachementsClient, error)
}

type smtpServiceClient struct {
	cc *grpc.ClientConn
}

func NewSmtpServiceClient(cc *grpc.ClientConn) SmtpServiceClient {
	return &smtpServiceClient{cc}
}

func (c *smtpServiceClient) CreateConnection(ctx context.Context, in *CreateConnectionRqst, opts ...grpc.CallOption) (*CreateConnectionRsp, error) {
	out := new(CreateConnectionRsp)
	err := c.cc.Invoke(ctx, "/smtp.SmtpService/CreateConnection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *smtpServiceClient) DeleteConnection(ctx context.Context, in *DeleteConnectionRqst, opts ...grpc.CallOption) (*DeleteConnectionRsp, error) {
	out := new(DeleteConnectionRsp)
	err := c.cc.Invoke(ctx, "/smtp.SmtpService/DeleteConnection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *smtpServiceClient) SendEmail(ctx context.Context, in *SendEmailRqst, opts ...grpc.CallOption) (*SendEmailRsp, error) {
	out := new(SendEmailRsp)
	err := c.cc.Invoke(ctx, "/smtp.SmtpService/SendEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *smtpServiceClient) SendEmailWithAttachements(ctx context.Context, opts ...grpc.CallOption) (SmtpService_SendEmailWithAttachementsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SmtpService_serviceDesc.Streams[0], "/smtp.SmtpService/SendEmailWithAttachements", opts...)
	if err != nil {
		return nil, err
	}
	x := &smtpServiceSendEmailWithAttachementsClient{stream}
	return x, nil
}

type SmtpService_SendEmailWithAttachementsClient interface {
	Send(*SendEmailWithAttachementsRqst) error
	CloseAndRecv() (*SendEmailWithAttachementsRsp, error)
	grpc.ClientStream
}

type smtpServiceSendEmailWithAttachementsClient struct {
	grpc.ClientStream
}

func (x *smtpServiceSendEmailWithAttachementsClient) Send(m *SendEmailWithAttachementsRqst) error {
	return x.ClientStream.SendMsg(m)
}

func (x *smtpServiceSendEmailWithAttachementsClient) CloseAndRecv() (*SendEmailWithAttachementsRsp, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(SendEmailWithAttachementsRsp)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// SmtpServiceServer is the server API for SmtpService service.
type SmtpServiceServer interface {
	// Create a connection.
	CreateConnection(context.Context, *CreateConnectionRqst) (*CreateConnectionRsp, error)
	// Delete a connection.
	DeleteConnection(context.Context, *DeleteConnectionRqst) (*DeleteConnectionRsp, error)
	// Send a simple email whitout file.
	SendEmail(context.Context, *SendEmailRqst) (*SendEmailRsp, error)
	// Send email with attachements.
	SendEmailWithAttachements(SmtpService_SendEmailWithAttachementsServer) error
}

func RegisterSmtpServiceServer(s *grpc.Server, srv SmtpServiceServer) {
	s.RegisterService(&_SmtpService_serviceDesc, srv)
}

func _SmtpService_CreateConnection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateConnectionRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SmtpServiceServer).CreateConnection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/smtp.SmtpService/CreateConnection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SmtpServiceServer).CreateConnection(ctx, req.(*CreateConnectionRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _SmtpService_DeleteConnection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteConnectionRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SmtpServiceServer).DeleteConnection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/smtp.SmtpService/DeleteConnection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SmtpServiceServer).DeleteConnection(ctx, req.(*DeleteConnectionRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _SmtpService_SendEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendEmailRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SmtpServiceServer).SendEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/smtp.SmtpService/SendEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SmtpServiceServer).SendEmail(ctx, req.(*SendEmailRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _SmtpService_SendEmailWithAttachements_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(SmtpServiceServer).SendEmailWithAttachements(&smtpServiceSendEmailWithAttachementsServer{stream})
}

type SmtpService_SendEmailWithAttachementsServer interface {
	SendAndClose(*SendEmailWithAttachementsRsp) error
	Recv() (*SendEmailWithAttachementsRqst, error)
	grpc.ServerStream
}

type smtpServiceSendEmailWithAttachementsServer struct {
	grpc.ServerStream
}

func (x *smtpServiceSendEmailWithAttachementsServer) SendAndClose(m *SendEmailWithAttachementsRsp) error {
	return x.ServerStream.SendMsg(m)
}

func (x *smtpServiceSendEmailWithAttachementsServer) Recv() (*SendEmailWithAttachementsRqst, error) {
	m := new(SendEmailWithAttachementsRqst)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _SmtpService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "smtp.SmtpService",
	HandlerType: (*SmtpServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateConnection",
			Handler:    _SmtpService_CreateConnection_Handler,
		},
		{
			MethodName: "DeleteConnection",
			Handler:    _SmtpService_DeleteConnection_Handler,
		},
		{
			MethodName: "SendEmail",
			Handler:    _SmtpService_SendEmail_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SendEmailWithAttachements",
			Handler:       _SmtpService_SendEmailWithAttachements_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "smtp/smtppb/smtp.proto",
}
