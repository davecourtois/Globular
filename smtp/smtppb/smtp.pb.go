// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0
// 	protoc        v3.13.0
// source: smtp/smtppb/smtp.proto

package smtppb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type BodyType int32

const (
	BodyType_TEXT BodyType = 0
	BodyType_HTML BodyType = 1
)

// Enum value maps for BodyType.
var (
	BodyType_name = map[int32]string{
		0: "TEXT",
		1: "HTML",
	}
	BodyType_value = map[string]int32{
		"TEXT": 0,
		"HTML": 1,
	}
)

func (x BodyType) Enum() *BodyType {
	p := new(BodyType)
	*p = x
	return p
}

func (x BodyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BodyType) Descriptor() protoreflect.EnumDescriptor {
	return file_smtp_smtppb_smtp_proto_enumTypes[0].Descriptor()
}

func (BodyType) Type() protoreflect.EnumType {
	return &file_smtp_smtppb_smtp_proto_enumTypes[0]
}

func (x BodyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BodyType.Descriptor instead.
func (BodyType) EnumDescriptor() ([]byte, []int) {
	return file_smtp_smtppb_smtp_proto_rawDescGZIP(), []int{0}
}

type Connection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Host     string `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
	User     string `protobuf:"bytes,6,opt,name=user,proto3" json:"user,omitempty"`
	Password string `protobuf:"bytes,7,opt,name=password,proto3" json:"password,omitempty"`
	Port     int32  `protobuf:"varint,8,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *Connection) Reset() {
	*x = Connection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_smtp_smtppb_smtp_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Connection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Connection) ProtoMessage() {}

func (x *Connection) ProtoReflect() protoreflect.Message {
	mi := &file_smtp_smtppb_smtp_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Connection.ProtoReflect.Descriptor instead.
func (*Connection) Descriptor() ([]byte, []int) {
	return file_smtp_smtppb_smtp_proto_rawDescGZIP(), []int{0}
}

func (x *Connection) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Connection) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *Connection) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *Connection) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Connection) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

// Create connection
type CreateConnectionRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Connection *Connection `protobuf:"bytes,1,opt,name=connection,proto3" json:"connection,omitempty"`
}

func (x *CreateConnectionRqst) Reset() {
	*x = CreateConnectionRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_smtp_smtppb_smtp_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateConnectionRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConnectionRqst) ProtoMessage() {}

func (x *CreateConnectionRqst) ProtoReflect() protoreflect.Message {
	mi := &file_smtp_smtppb_smtp_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConnectionRqst.ProtoReflect.Descriptor instead.
func (*CreateConnectionRqst) Descriptor() ([]byte, []int) {
	return file_smtp_smtppb_smtp_proto_rawDescGZIP(), []int{1}
}

func (x *CreateConnectionRqst) GetConnection() *Connection {
	if x != nil {
		return x.Connection
	}
	return nil
}

type CreateConnectionRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *CreateConnectionRsp) Reset() {
	*x = CreateConnectionRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_smtp_smtppb_smtp_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateConnectionRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConnectionRsp) ProtoMessage() {}

func (x *CreateConnectionRsp) ProtoReflect() protoreflect.Message {
	mi := &file_smtp_smtppb_smtp_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConnectionRsp.ProtoReflect.Descriptor instead.
func (*CreateConnectionRsp) Descriptor() ([]byte, []int) {
	return file_smtp_smtppb_smtp_proto_rawDescGZIP(), []int{2}
}

func (x *CreateConnectionRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// Delete connection
type DeleteConnectionRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteConnectionRqst) Reset() {
	*x = DeleteConnectionRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_smtp_smtppb_smtp_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteConnectionRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConnectionRqst) ProtoMessage() {}

func (x *DeleteConnectionRqst) ProtoReflect() protoreflect.Message {
	mi := &file_smtp_smtppb_smtp_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteConnectionRqst.ProtoReflect.Descriptor instead.
func (*DeleteConnectionRqst) Descriptor() ([]byte, []int) {
	return file_smtp_smtppb_smtp_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteConnectionRqst) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteConnectionRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DeleteConnectionRsp) Reset() {
	*x = DeleteConnectionRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_smtp_smtppb_smtp_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteConnectionRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConnectionRsp) ProtoMessage() {}

func (x *DeleteConnectionRsp) ProtoReflect() protoreflect.Message {
	mi := &file_smtp_smtppb_smtp_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteConnectionRsp.ProtoReflect.Descriptor instead.
func (*DeleteConnectionRsp) Descriptor() ([]byte, []int) {
	return file_smtp_smtppb_smtp_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteConnectionRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type CarbonCopy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CarbonCopy) Reset() {
	*x = CarbonCopy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_smtp_smtppb_smtp_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarbonCopy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarbonCopy) ProtoMessage() {}

func (x *CarbonCopy) ProtoReflect() protoreflect.Message {
	mi := &file_smtp_smtppb_smtp_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarbonCopy.ProtoReflect.Descriptor instead.
func (*CarbonCopy) Descriptor() ([]byte, []int) {
	return file_smtp_smtppb_smtp_proto_rawDescGZIP(), []int{5}
}

func (x *CarbonCopy) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *CarbonCopy) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Attachement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName string `protobuf:"bytes,1,opt,name=fileName,proto3" json:"fileName,omitempty"`
	FileData []byte `protobuf:"bytes,2,opt,name=fileData,proto3" json:"fileData,omitempty"`
}

func (x *Attachement) Reset() {
	*x = Attachement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_smtp_smtppb_smtp_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Attachement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attachement) ProtoMessage() {}

func (x *Attachement) ProtoReflect() protoreflect.Message {
	mi := &file_smtp_smtppb_smtp_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attachement.ProtoReflect.Descriptor instead.
func (*Attachement) Descriptor() ([]byte, []int) {
	return file_smtp_smtppb_smtp_proto_rawDescGZIP(), []int{6}
}

func (x *Attachement) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *Attachement) GetFileData() []byte {
	if x != nil {
		return x.FileData
	}
	return nil
}

type Email struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From     string        `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To       []string      `protobuf:"bytes,3,rep,name=to,proto3" json:"to,omitempty"`
	Cc       []*CarbonCopy `protobuf:"bytes,4,rep,name=cc,proto3" json:"cc,omitempty"`
	Subject  string        `protobuf:"bytes,5,opt,name=subject,proto3" json:"subject,omitempty"`
	Body     string        `protobuf:"bytes,6,opt,name=body,proto3" json:"body,omitempty"`
	BodyType BodyType      `protobuf:"varint,7,opt,name=bodyType,proto3,enum=smtp.BodyType" json:"bodyType,omitempty"`
}

func (x *Email) Reset() {
	*x = Email{}
	if protoimpl.UnsafeEnabled {
		mi := &file_smtp_smtppb_smtp_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Email) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Email) ProtoMessage() {}

func (x *Email) ProtoReflect() protoreflect.Message {
	mi := &file_smtp_smtppb_smtp_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Email.ProtoReflect.Descriptor instead.
func (*Email) Descriptor() ([]byte, []int) {
	return file_smtp_smtppb_smtp_proto_rawDescGZIP(), []int{7}
}

func (x *Email) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *Email) GetTo() []string {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *Email) GetCc() []*CarbonCopy {
	if x != nil {
		return x.Cc
	}
	return nil
}

func (x *Email) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *Email) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *Email) GetBodyType() BodyType {
	if x != nil {
		return x.BodyType
	}
	return BodyType_TEXT
}

type SendEmailRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // The connection id
	Email *Email `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *SendEmailRqst) Reset() {
	*x = SendEmailRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_smtp_smtppb_smtp_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendEmailRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendEmailRqst) ProtoMessage() {}

func (x *SendEmailRqst) ProtoReflect() protoreflect.Message {
	mi := &file_smtp_smtppb_smtp_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendEmailRqst.ProtoReflect.Descriptor instead.
func (*SendEmailRqst) Descriptor() ([]byte, []int) {
	return file_smtp_smtppb_smtp_proto_rawDescGZIP(), []int{8}
}

func (x *SendEmailRqst) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SendEmailRqst) GetEmail() *Email {
	if x != nil {
		return x.Email
	}
	return nil
}

type SendEmailRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SendEmailRsp) Reset() {
	*x = SendEmailRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_smtp_smtppb_smtp_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendEmailRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendEmailRsp) ProtoMessage() {}

func (x *SendEmailRsp) ProtoReflect() protoreflect.Message {
	mi := &file_smtp_smtppb_smtp_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendEmailRsp.ProtoReflect.Descriptor instead.
func (*SendEmailRsp) Descriptor() ([]byte, []int) {
	return file_smtp_smtppb_smtp_proto_rawDescGZIP(), []int{9}
}

func (x *SendEmailRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type SendEmailWithAttachementsRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // The connection id
	// Types that are assignable to Data:
	//	*SendEmailWithAttachementsRqst_Email
	//	*SendEmailWithAttachementsRqst_Attachements
	Data isSendEmailWithAttachementsRqst_Data `protobuf_oneof:"data"`
}

func (x *SendEmailWithAttachementsRqst) Reset() {
	*x = SendEmailWithAttachementsRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_smtp_smtppb_smtp_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendEmailWithAttachementsRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendEmailWithAttachementsRqst) ProtoMessage() {}

func (x *SendEmailWithAttachementsRqst) ProtoReflect() protoreflect.Message {
	mi := &file_smtp_smtppb_smtp_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendEmailWithAttachementsRqst.ProtoReflect.Descriptor instead.
func (*SendEmailWithAttachementsRqst) Descriptor() ([]byte, []int) {
	return file_smtp_smtppb_smtp_proto_rawDescGZIP(), []int{10}
}

func (x *SendEmailWithAttachementsRqst) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (m *SendEmailWithAttachementsRqst) GetData() isSendEmailWithAttachementsRqst_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *SendEmailWithAttachementsRqst) GetEmail() *Email {
	if x, ok := x.GetData().(*SendEmailWithAttachementsRqst_Email); ok {
		return x.Email
	}
	return nil
}

func (x *SendEmailWithAttachementsRqst) GetAttachements() *Attachement {
	if x, ok := x.GetData().(*SendEmailWithAttachementsRqst_Attachements); ok {
		return x.Attachements
	}
	return nil
}

type isSendEmailWithAttachementsRqst_Data interface {
	isSendEmailWithAttachementsRqst_Data()
}

type SendEmailWithAttachementsRqst_Email struct {
	Email *Email `protobuf:"bytes,2,opt,name=email,proto3,oneof"` // Contain the email message data
}

type SendEmailWithAttachementsRqst_Attachements struct {
	Attachements *Attachement `protobuf:"bytes,3,opt,name=attachements,proto3,oneof"` // Contain attachements data (chunk data...)
}

func (*SendEmailWithAttachementsRqst_Email) isSendEmailWithAttachementsRqst_Data() {}

func (*SendEmailWithAttachementsRqst_Attachements) isSendEmailWithAttachementsRqst_Data() {}

type SendEmailWithAttachementsRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SendEmailWithAttachementsRsp) Reset() {
	*x = SendEmailWithAttachementsRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_smtp_smtppb_smtp_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendEmailWithAttachementsRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendEmailWithAttachementsRsp) ProtoMessage() {}

func (x *SendEmailWithAttachementsRsp) ProtoReflect() protoreflect.Message {
	mi := &file_smtp_smtppb_smtp_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendEmailWithAttachementsRsp.ProtoReflect.Descriptor instead.
func (*SendEmailWithAttachementsRsp) Descriptor() ([]byte, []int) {
	return file_smtp_smtppb_smtp_proto_rawDescGZIP(), []int{11}
}

func (x *SendEmailWithAttachementsRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

var File_smtp_smtppb_smtp_proto protoreflect.FileDescriptor

var file_smtp_smtppb_smtp_proto_rawDesc = []byte{
	0x0a, 0x16, 0x73, 0x6d, 0x74, 0x70, 0x2f, 0x73, 0x6d, 0x74, 0x70, 0x70, 0x62, 0x2f, 0x73, 0x6d,
	0x74, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x73, 0x6d, 0x74, 0x70, 0x22, 0x74,
	0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x70, 0x6f, 0x72, 0x74, 0x22, 0x48, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x0a,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x73, 0x6d, 0x74, 0x70, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2d,
	0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x26, 0x0a,
	0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x71, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2d, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x0a, 0x0a, 0x43, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x43, 0x6f,
	0x70, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x45, 0x0a, 0x0b, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0xa7, 0x01, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x20, 0x0a, 0x02, 0x63, 0x63, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x73, 0x6d, 0x74, 0x70, 0x2e, 0x43, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x43,
	0x6f, 0x70, 0x79, 0x52, 0x02, 0x63, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x2a, 0x0a, 0x08, 0x62, 0x6f, 0x64, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x73, 0x6d, 0x74, 0x70, 0x2e, 0x42,
	0x6f, 0x64, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x62, 0x6f, 0x64, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x42, 0x0a, 0x0d, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x71,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x21, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x73, 0x6d, 0x74, 0x70, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x26, 0x0a, 0x0c, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x95, 0x01,
	0x0a, 0x1d, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x41,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x71, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x23, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x73, 0x6d, 0x74, 0x70, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x37, 0x0a, 0x0c, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x6d, 0x74,
	0x70, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52,
	0x0c, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x06, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x36, 0x0a, 0x1c, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2a, 0x1e, 0x0a,
	0x08, 0x42, 0x6f, 0x64, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x45, 0x58,
	0x54, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x54, 0x4d, 0x4c, 0x10, 0x01, 0x32, 0xc9, 0x02,
	0x0a, 0x0b, 0x53, 0x6d, 0x74, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4b, 0x0a,
	0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1a, 0x2e, 0x73, 0x6d, 0x74, 0x70, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x19, 0x2e,
	0x73, 0x6d, 0x74, 0x70, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x10, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a,
	0x2e, 0x73, 0x6d, 0x74, 0x70, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x73, 0x6d, 0x74,
	0x70, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x09, 0x53, 0x65, 0x6e, 0x64, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x13, 0x2e, 0x73, 0x6d, 0x74, 0x70, 0x2e, 0x53, 0x65, 0x6e, 0x64,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x73, 0x6d, 0x74, 0x70,
	0x2e, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x68, 0x0a, 0x19, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x57, 0x69, 0x74, 0x68,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x23, 0x2e, 0x73,
	0x6d, 0x74, 0x70, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x57, 0x69, 0x74,
	0x68, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x71, 0x73,
	0x74, 0x1a, 0x22, 0x2e, 0x73, 0x6d, 0x74, 0x70, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x73, 0x70, 0x22, 0x00, 0x28, 0x01, 0x42, 0x0d, 0x5a, 0x0b, 0x73, 0x6d, 0x74,
	0x70, 0x2f, 0x73, 0x6d, 0x74, 0x70, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_smtp_smtppb_smtp_proto_rawDescOnce sync.Once
	file_smtp_smtppb_smtp_proto_rawDescData = file_smtp_smtppb_smtp_proto_rawDesc
)

func file_smtp_smtppb_smtp_proto_rawDescGZIP() []byte {
	file_smtp_smtppb_smtp_proto_rawDescOnce.Do(func() {
		file_smtp_smtppb_smtp_proto_rawDescData = protoimpl.X.CompressGZIP(file_smtp_smtppb_smtp_proto_rawDescData)
	})
	return file_smtp_smtppb_smtp_proto_rawDescData
}

var file_smtp_smtppb_smtp_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_smtp_smtppb_smtp_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_smtp_smtppb_smtp_proto_goTypes = []interface{}{
	(BodyType)(0),                         // 0: smtp.BodyType
	(*Connection)(nil),                    // 1: smtp.Connection
	(*CreateConnectionRqst)(nil),          // 2: smtp.CreateConnectionRqst
	(*CreateConnectionRsp)(nil),           // 3: smtp.CreateConnectionRsp
	(*DeleteConnectionRqst)(nil),          // 4: smtp.DeleteConnectionRqst
	(*DeleteConnectionRsp)(nil),           // 5: smtp.DeleteConnectionRsp
	(*CarbonCopy)(nil),                    // 6: smtp.CarbonCopy
	(*Attachement)(nil),                   // 7: smtp.Attachement
	(*Email)(nil),                         // 8: smtp.Email
	(*SendEmailRqst)(nil),                 // 9: smtp.SendEmailRqst
	(*SendEmailRsp)(nil),                  // 10: smtp.SendEmailRsp
	(*SendEmailWithAttachementsRqst)(nil), // 11: smtp.SendEmailWithAttachementsRqst
	(*SendEmailWithAttachementsRsp)(nil),  // 12: smtp.SendEmailWithAttachementsRsp
}
var file_smtp_smtppb_smtp_proto_depIdxs = []int32{
	1,  // 0: smtp.CreateConnectionRqst.connection:type_name -> smtp.Connection
	6,  // 1: smtp.Email.cc:type_name -> smtp.CarbonCopy
	0,  // 2: smtp.Email.bodyType:type_name -> smtp.BodyType
	8,  // 3: smtp.SendEmailRqst.email:type_name -> smtp.Email
	8,  // 4: smtp.SendEmailWithAttachementsRqst.email:type_name -> smtp.Email
	7,  // 5: smtp.SendEmailWithAttachementsRqst.attachements:type_name -> smtp.Attachement
	2,  // 6: smtp.SmtpService.CreateConnection:input_type -> smtp.CreateConnectionRqst
	4,  // 7: smtp.SmtpService.DeleteConnection:input_type -> smtp.DeleteConnectionRqst
	9,  // 8: smtp.SmtpService.SendEmail:input_type -> smtp.SendEmailRqst
	11, // 9: smtp.SmtpService.SendEmailWithAttachements:input_type -> smtp.SendEmailWithAttachementsRqst
	3,  // 10: smtp.SmtpService.CreateConnection:output_type -> smtp.CreateConnectionRsp
	5,  // 11: smtp.SmtpService.DeleteConnection:output_type -> smtp.DeleteConnectionRsp
	10, // 12: smtp.SmtpService.SendEmail:output_type -> smtp.SendEmailRsp
	12, // 13: smtp.SmtpService.SendEmailWithAttachements:output_type -> smtp.SendEmailWithAttachementsRsp
	10, // [10:14] is the sub-list for method output_type
	6,  // [6:10] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_smtp_smtppb_smtp_proto_init() }
func file_smtp_smtppb_smtp_proto_init() {
	if File_smtp_smtppb_smtp_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_smtp_smtppb_smtp_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Connection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_smtp_smtppb_smtp_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateConnectionRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_smtp_smtppb_smtp_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateConnectionRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_smtp_smtppb_smtp_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteConnectionRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_smtp_smtppb_smtp_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteConnectionRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_smtp_smtppb_smtp_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarbonCopy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_smtp_smtppb_smtp_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Attachement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_smtp_smtppb_smtp_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Email); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_smtp_smtppb_smtp_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendEmailRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_smtp_smtppb_smtp_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendEmailRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_smtp_smtppb_smtp_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendEmailWithAttachementsRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_smtp_smtppb_smtp_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendEmailWithAttachementsRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_smtp_smtppb_smtp_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*SendEmailWithAttachementsRqst_Email)(nil),
		(*SendEmailWithAttachementsRqst_Attachements)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_smtp_smtppb_smtp_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_smtp_smtppb_smtp_proto_goTypes,
		DependencyIndexes: file_smtp_smtppb_smtp_proto_depIdxs,
		EnumInfos:         file_smtp_smtppb_smtp_proto_enumTypes,
		MessageInfos:      file_smtp_smtppb_smtp_proto_msgTypes,
	}.Build()
	File_smtp_smtppb_smtp_proto = out.File
	file_smtp_smtppb_smtp_proto_rawDesc = nil
	file_smtp_smtppb_smtp_proto_goTypes = nil
	file_smtp_smtppb_smtp_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SmtpServiceClient is the client API for SmtpService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SmtpServiceClient interface {
	// Create a connection.
	CreateConnection(ctx context.Context, in *CreateConnectionRqst, opts ...grpc.CallOption) (*CreateConnectionRsp, error)
	// Delete a connection.
	DeleteConnection(ctx context.Context, in *DeleteConnectionRqst, opts ...grpc.CallOption) (*DeleteConnectionRsp, error)
	// Send a simple email whitout file.
	SendEmail(ctx context.Context, in *SendEmailRqst, opts ...grpc.CallOption) (*SendEmailRsp, error)
	// Send email with attachements.
	SendEmailWithAttachements(ctx context.Context, opts ...grpc.CallOption) (SmtpService_SendEmailWithAttachementsClient, error)
}

type smtpServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSmtpServiceClient(cc grpc.ClientConnInterface) SmtpServiceClient {
	return &smtpServiceClient{cc}
}

func (c *smtpServiceClient) CreateConnection(ctx context.Context, in *CreateConnectionRqst, opts ...grpc.CallOption) (*CreateConnectionRsp, error) {
	out := new(CreateConnectionRsp)
	err := c.cc.Invoke(ctx, "/smtp.SmtpService/CreateConnection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *smtpServiceClient) DeleteConnection(ctx context.Context, in *DeleteConnectionRqst, opts ...grpc.CallOption) (*DeleteConnectionRsp, error) {
	out := new(DeleteConnectionRsp)
	err := c.cc.Invoke(ctx, "/smtp.SmtpService/DeleteConnection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *smtpServiceClient) SendEmail(ctx context.Context, in *SendEmailRqst, opts ...grpc.CallOption) (*SendEmailRsp, error) {
	out := new(SendEmailRsp)
	err := c.cc.Invoke(ctx, "/smtp.SmtpService/SendEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *smtpServiceClient) SendEmailWithAttachements(ctx context.Context, opts ...grpc.CallOption) (SmtpService_SendEmailWithAttachementsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SmtpService_serviceDesc.Streams[0], "/smtp.SmtpService/SendEmailWithAttachements", opts...)
	if err != nil {
		return nil, err
	}
	x := &smtpServiceSendEmailWithAttachementsClient{stream}
	return x, nil
}

type SmtpService_SendEmailWithAttachementsClient interface {
	Send(*SendEmailWithAttachementsRqst) error
	CloseAndRecv() (*SendEmailWithAttachementsRsp, error)
	grpc.ClientStream
}

type smtpServiceSendEmailWithAttachementsClient struct {
	grpc.ClientStream
}

func (x *smtpServiceSendEmailWithAttachementsClient) Send(m *SendEmailWithAttachementsRqst) error {
	return x.ClientStream.SendMsg(m)
}

func (x *smtpServiceSendEmailWithAttachementsClient) CloseAndRecv() (*SendEmailWithAttachementsRsp, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(SendEmailWithAttachementsRsp)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// SmtpServiceServer is the server API for SmtpService service.
type SmtpServiceServer interface {
	// Create a connection.
	CreateConnection(context.Context, *CreateConnectionRqst) (*CreateConnectionRsp, error)
	// Delete a connection.
	DeleteConnection(context.Context, *DeleteConnectionRqst) (*DeleteConnectionRsp, error)
	// Send a simple email whitout file.
	SendEmail(context.Context, *SendEmailRqst) (*SendEmailRsp, error)
	// Send email with attachements.
	SendEmailWithAttachements(SmtpService_SendEmailWithAttachementsServer) error
}

// UnimplementedSmtpServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSmtpServiceServer struct {
}

func (*UnimplementedSmtpServiceServer) CreateConnection(context.Context, *CreateConnectionRqst) (*CreateConnectionRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateConnection not implemented")
}
func (*UnimplementedSmtpServiceServer) DeleteConnection(context.Context, *DeleteConnectionRqst) (*DeleteConnectionRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteConnection not implemented")
}
func (*UnimplementedSmtpServiceServer) SendEmail(context.Context, *SendEmailRqst) (*SendEmailRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendEmail not implemented")
}
func (*UnimplementedSmtpServiceServer) SendEmailWithAttachements(SmtpService_SendEmailWithAttachementsServer) error {
	return status.Errorf(codes.Unimplemented, "method SendEmailWithAttachements not implemented")
}

func RegisterSmtpServiceServer(s *grpc.Server, srv SmtpServiceServer) {
	s.RegisterService(&_SmtpService_serviceDesc, srv)
}

func _SmtpService_CreateConnection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateConnectionRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SmtpServiceServer).CreateConnection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/smtp.SmtpService/CreateConnection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SmtpServiceServer).CreateConnection(ctx, req.(*CreateConnectionRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _SmtpService_DeleteConnection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteConnectionRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SmtpServiceServer).DeleteConnection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/smtp.SmtpService/DeleteConnection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SmtpServiceServer).DeleteConnection(ctx, req.(*DeleteConnectionRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _SmtpService_SendEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendEmailRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SmtpServiceServer).SendEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/smtp.SmtpService/SendEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SmtpServiceServer).SendEmail(ctx, req.(*SendEmailRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _SmtpService_SendEmailWithAttachements_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(SmtpServiceServer).SendEmailWithAttachements(&smtpServiceSendEmailWithAttachementsServer{stream})
}

type SmtpService_SendEmailWithAttachementsServer interface {
	SendAndClose(*SendEmailWithAttachementsRsp) error
	Recv() (*SendEmailWithAttachementsRqst, error)
	grpc.ServerStream
}

type smtpServiceSendEmailWithAttachementsServer struct {
	grpc.ServerStream
}

func (x *smtpServiceSendEmailWithAttachementsServer) SendAndClose(m *SendEmailWithAttachementsRsp) error {
	return x.ServerStream.SendMsg(m)
}

func (x *smtpServiceSendEmailWithAttachementsServer) Recv() (*SendEmailWithAttachementsRqst, error) {
	m := new(SendEmailWithAttachementsRqst)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _SmtpService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "smtp.SmtpService",
	HandlerType: (*SmtpServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateConnection",
			Handler:    _SmtpService_CreateConnection_Handler,
		},
		{
			MethodName: "DeleteConnection",
			Handler:    _SmtpService_DeleteConnection_Handler,
		},
		{
			MethodName: "SendEmail",
			Handler:    _SmtpService_SendEmail_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SendEmailWithAttachements",
			Handler:       _SmtpService_SendEmailWithAttachements_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "smtp/smtppb/smtp.proto",
}
