// Code generated by protoc-gen-go. DO NOT EDIT.
// source: plc_link/plc_link_pb/plc_link.proto

package plc_link_pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Connection with the plc_server.
type Connection struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Domain               string   `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	Address              string   `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Connection) Reset()         { *m = Connection{} }
func (m *Connection) String() string { return proto.CompactTextString(m) }
func (*Connection) ProtoMessage()    {}
func (*Connection) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc757c6e1020843f, []int{0}
}

func (m *Connection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Connection.Unmarshal(m, b)
}
func (m *Connection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Connection.Marshal(b, m, deterministic)
}
func (m *Connection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Connection.Merge(m, src)
}
func (m *Connection) XXX_Size() int {
	return xxx_messageInfo_Connection.Size(m)
}
func (m *Connection) XXX_DiscardUnknown() {
	xxx_messageInfo_Connection.DiscardUnknown(m)
}

var xxx_messageInfo_Connection proto.InternalMessageInfo

func (m *Connection) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Connection) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *Connection) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

// Create connection
type CreateConnectionRqst struct {
	Connection           *Connection `protobuf:"bytes,1,opt,name=connection,proto3" json:"connection,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CreateConnectionRqst) Reset()         { *m = CreateConnectionRqst{} }
func (m *CreateConnectionRqst) String() string { return proto.CompactTextString(m) }
func (*CreateConnectionRqst) ProtoMessage()    {}
func (*CreateConnectionRqst) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc757c6e1020843f, []int{1}
}

func (m *CreateConnectionRqst) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateConnectionRqst.Unmarshal(m, b)
}
func (m *CreateConnectionRqst) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateConnectionRqst.Marshal(b, m, deterministic)
}
func (m *CreateConnectionRqst) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateConnectionRqst.Merge(m, src)
}
func (m *CreateConnectionRqst) XXX_Size() int {
	return xxx_messageInfo_CreateConnectionRqst.Size(m)
}
func (m *CreateConnectionRqst) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateConnectionRqst.DiscardUnknown(m)
}

var xxx_messageInfo_CreateConnectionRqst proto.InternalMessageInfo

func (m *CreateConnectionRqst) GetConnection() *Connection {
	if m != nil {
		return m.Connection
	}
	return nil
}

type CreateConnectionRsp struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateConnectionRsp) Reset()         { *m = CreateConnectionRsp{} }
func (m *CreateConnectionRsp) String() string { return proto.CompactTextString(m) }
func (*CreateConnectionRsp) ProtoMessage()    {}
func (*CreateConnectionRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc757c6e1020843f, []int{2}
}

func (m *CreateConnectionRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateConnectionRsp.Unmarshal(m, b)
}
func (m *CreateConnectionRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateConnectionRsp.Marshal(b, m, deterministic)
}
func (m *CreateConnectionRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateConnectionRsp.Merge(m, src)
}
func (m *CreateConnectionRsp) XXX_Size() int {
	return xxx_messageInfo_CreateConnectionRsp.Size(m)
}
func (m *CreateConnectionRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateConnectionRsp.DiscardUnknown(m)
}

var xxx_messageInfo_CreateConnectionRsp proto.InternalMessageInfo

func (m *CreateConnectionRsp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

// Delete connection
type DeleteConnectionRqst struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteConnectionRqst) Reset()         { *m = DeleteConnectionRqst{} }
func (m *DeleteConnectionRqst) String() string { return proto.CompactTextString(m) }
func (*DeleteConnectionRqst) ProtoMessage()    {}
func (*DeleteConnectionRqst) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc757c6e1020843f, []int{3}
}

func (m *DeleteConnectionRqst) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteConnectionRqst.Unmarshal(m, b)
}
func (m *DeleteConnectionRqst) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteConnectionRqst.Marshal(b, m, deterministic)
}
func (m *DeleteConnectionRqst) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteConnectionRqst.Merge(m, src)
}
func (m *DeleteConnectionRqst) XXX_Size() int {
	return xxx_messageInfo_DeleteConnectionRqst.Size(m)
}
func (m *DeleteConnectionRqst) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteConnectionRqst.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteConnectionRqst proto.InternalMessageInfo

func (m *DeleteConnectionRqst) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeleteConnectionRsp struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteConnectionRsp) Reset()         { *m = DeleteConnectionRsp{} }
func (m *DeleteConnectionRsp) String() string { return proto.CompactTextString(m) }
func (*DeleteConnectionRsp) ProtoMessage()    {}
func (*DeleteConnectionRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc757c6e1020843f, []int{4}
}

func (m *DeleteConnectionRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteConnectionRsp.Unmarshal(m, b)
}
func (m *DeleteConnectionRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteConnectionRsp.Marshal(b, m, deterministic)
}
func (m *DeleteConnectionRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteConnectionRsp.Merge(m, src)
}
func (m *DeleteConnectionRsp) XXX_Size() int {
	return xxx_messageInfo_DeleteConnectionRsp.Size(m)
}
func (m *DeleteConnectionRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteConnectionRsp.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteConnectionRsp proto.InternalMessageInfo

func (m *DeleteConnectionRsp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

// Contain the tag informations.
type Tag struct {
	Domain               string   `protobuf:"bytes,1,opt,name=Domain,proto3" json:"Domain,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=Address,proto3" json:"Address,omitempty"`
	ConnectionId         string   `protobuf:"bytes,3,opt,name=ConnectionId,proto3" json:"ConnectionId,omitempty"`
	Name                 string   `protobuf:"bytes,4,opt,name=Name,proto3" json:"Name,omitempty"`
	Label                string   `protobuf:"bytes,5,opt,name=Label,proto3" json:"Label,omitempty"`
	TypeName             string   `protobuf:"bytes,6,opt,name=TypeName,proto3" json:"TypeName,omitempty"`
	Offset               int32    `protobuf:"varint,7,opt,name=Offset,proto3" json:"Offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tag) Reset()         { *m = Tag{} }
func (m *Tag) String() string { return proto.CompactTextString(m) }
func (*Tag) ProtoMessage()    {}
func (*Tag) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc757c6e1020843f, []int{5}
}

func (m *Tag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tag.Unmarshal(m, b)
}
func (m *Tag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tag.Marshal(b, m, deterministic)
}
func (m *Tag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tag.Merge(m, src)
}
func (m *Tag) XXX_Size() int {
	return xxx_messageInfo_Tag.Size(m)
}
func (m *Tag) XXX_DiscardUnknown() {
	xxx_messageInfo_Tag.DiscardUnknown(m)
}

var xxx_messageInfo_Tag proto.InternalMessageInfo

func (m *Tag) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *Tag) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Tag) GetConnectionId() string {
	if m != nil {
		return m.ConnectionId
	}
	return ""
}

func (m *Tag) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Tag) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *Tag) GetTypeName() string {
	if m != nil {
		return m.TypeName
	}
	return ""
}

func (m *Tag) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type Link struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Frequency            int32    `protobuf:"varint,2,opt,name=frequency,proto3" json:"frequency,omitempty"`
	Source               *Tag     `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	Target               *Tag     `protobuf:"bytes,4,opt,name=target,proto3" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Link) Reset()         { *m = Link{} }
func (m *Link) String() string { return proto.CompactTextString(m) }
func (*Link) ProtoMessage()    {}
func (*Link) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc757c6e1020843f, []int{6}
}

func (m *Link) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Link.Unmarshal(m, b)
}
func (m *Link) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Link.Marshal(b, m, deterministic)
}
func (m *Link) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Link.Merge(m, src)
}
func (m *Link) XXX_Size() int {
	return xxx_messageInfo_Link.Size(m)
}
func (m *Link) XXX_DiscardUnknown() {
	xxx_messageInfo_Link.DiscardUnknown(m)
}

var xxx_messageInfo_Link proto.InternalMessageInfo

func (m *Link) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Link) GetFrequency() int32 {
	if m != nil {
		return m.Frequency
	}
	return 0
}

func (m *Link) GetSource() *Tag {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *Link) GetTarget() *Tag {
	if m != nil {
		return m.Target
	}
	return nil
}

// Link tow tag together and synchronize them at a given frequency.
type LinkRqst struct {
	Lnk                  *Link    `protobuf:"bytes,1,opt,name=lnk,proto3" json:"lnk,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LinkRqst) Reset()         { *m = LinkRqst{} }
func (m *LinkRqst) String() string { return proto.CompactTextString(m) }
func (*LinkRqst) ProtoMessage()    {}
func (*LinkRqst) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc757c6e1020843f, []int{7}
}

func (m *LinkRqst) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LinkRqst.Unmarshal(m, b)
}
func (m *LinkRqst) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LinkRqst.Marshal(b, m, deterministic)
}
func (m *LinkRqst) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LinkRqst.Merge(m, src)
}
func (m *LinkRqst) XXX_Size() int {
	return xxx_messageInfo_LinkRqst.Size(m)
}
func (m *LinkRqst) XXX_DiscardUnknown() {
	xxx_messageInfo_LinkRqst.DiscardUnknown(m)
}

var xxx_messageInfo_LinkRqst proto.InternalMessageInfo

func (m *LinkRqst) GetLnk() *Link {
	if m != nil {
		return m.Lnk
	}
	return nil
}

type LinkRsp struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LinkRsp) Reset()         { *m = LinkRsp{} }
func (m *LinkRsp) String() string { return proto.CompactTextString(m) }
func (*LinkRsp) ProtoMessage()    {}
func (*LinkRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc757c6e1020843f, []int{8}
}

func (m *LinkRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LinkRsp.Unmarshal(m, b)
}
func (m *LinkRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LinkRsp.Marshal(b, m, deterministic)
}
func (m *LinkRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LinkRsp.Merge(m, src)
}
func (m *LinkRsp) XXX_Size() int {
	return xxx_messageInfo_LinkRsp.Size(m)
}
func (m *LinkRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_LinkRsp.DiscardUnknown(m)
}

var xxx_messageInfo_LinkRsp proto.InternalMessageInfo

func (m *LinkRsp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

// Unlink tags
type UnLinkRqst struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnLinkRqst) Reset()         { *m = UnLinkRqst{} }
func (m *UnLinkRqst) String() string { return proto.CompactTextString(m) }
func (*UnLinkRqst) ProtoMessage()    {}
func (*UnLinkRqst) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc757c6e1020843f, []int{9}
}

func (m *UnLinkRqst) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnLinkRqst.Unmarshal(m, b)
}
func (m *UnLinkRqst) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnLinkRqst.Marshal(b, m, deterministic)
}
func (m *UnLinkRqst) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnLinkRqst.Merge(m, src)
}
func (m *UnLinkRqst) XXX_Size() int {
	return xxx_messageInfo_UnLinkRqst.Size(m)
}
func (m *UnLinkRqst) XXX_DiscardUnknown() {
	xxx_messageInfo_UnLinkRqst.DiscardUnknown(m)
}

var xxx_messageInfo_UnLinkRqst proto.InternalMessageInfo

func (m *UnLinkRqst) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type UnLinkRsp struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnLinkRsp) Reset()         { *m = UnLinkRsp{} }
func (m *UnLinkRsp) String() string { return proto.CompactTextString(m) }
func (*UnLinkRsp) ProtoMessage()    {}
func (*UnLinkRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc757c6e1020843f, []int{10}
}

func (m *UnLinkRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnLinkRsp.Unmarshal(m, b)
}
func (m *UnLinkRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnLinkRsp.Marshal(b, m, deterministic)
}
func (m *UnLinkRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnLinkRsp.Merge(m, src)
}
func (m *UnLinkRsp) XXX_Size() int {
	return xxx_messageInfo_UnLinkRsp.Size(m)
}
func (m *UnLinkRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_UnLinkRsp.DiscardUnknown(m)
}

var xxx_messageInfo_UnLinkRsp proto.InternalMessageInfo

func (m *UnLinkRsp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type SuspendRqst struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SuspendRqst) Reset()         { *m = SuspendRqst{} }
func (m *SuspendRqst) String() string { return proto.CompactTextString(m) }
func (*SuspendRqst) ProtoMessage()    {}
func (*SuspendRqst) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc757c6e1020843f, []int{11}
}

func (m *SuspendRqst) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SuspendRqst.Unmarshal(m, b)
}
func (m *SuspendRqst) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SuspendRqst.Marshal(b, m, deterministic)
}
func (m *SuspendRqst) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SuspendRqst.Merge(m, src)
}
func (m *SuspendRqst) XXX_Size() int {
	return xxx_messageInfo_SuspendRqst.Size(m)
}
func (m *SuspendRqst) XXX_DiscardUnknown() {
	xxx_messageInfo_SuspendRqst.DiscardUnknown(m)
}

var xxx_messageInfo_SuspendRqst proto.InternalMessageInfo

func (m *SuspendRqst) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type SuspendRsp struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SuspendRsp) Reset()         { *m = SuspendRsp{} }
func (m *SuspendRsp) String() string { return proto.CompactTextString(m) }
func (*SuspendRsp) ProtoMessage()    {}
func (*SuspendRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc757c6e1020843f, []int{12}
}

func (m *SuspendRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SuspendRsp.Unmarshal(m, b)
}
func (m *SuspendRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SuspendRsp.Marshal(b, m, deterministic)
}
func (m *SuspendRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SuspendRsp.Merge(m, src)
}
func (m *SuspendRsp) XXX_Size() int {
	return xxx_messageInfo_SuspendRsp.Size(m)
}
func (m *SuspendRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_SuspendRsp.DiscardUnknown(m)
}

var xxx_messageInfo_SuspendRsp proto.InternalMessageInfo

func (m *SuspendRsp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type ResumeRqst struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResumeRqst) Reset()         { *m = ResumeRqst{} }
func (m *ResumeRqst) String() string { return proto.CompactTextString(m) }
func (*ResumeRqst) ProtoMessage()    {}
func (*ResumeRqst) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc757c6e1020843f, []int{13}
}

func (m *ResumeRqst) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResumeRqst.Unmarshal(m, b)
}
func (m *ResumeRqst) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResumeRqst.Marshal(b, m, deterministic)
}
func (m *ResumeRqst) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResumeRqst.Merge(m, src)
}
func (m *ResumeRqst) XXX_Size() int {
	return xxx_messageInfo_ResumeRqst.Size(m)
}
func (m *ResumeRqst) XXX_DiscardUnknown() {
	xxx_messageInfo_ResumeRqst.DiscardUnknown(m)
}

var xxx_messageInfo_ResumeRqst proto.InternalMessageInfo

func (m *ResumeRqst) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ResumeRsp struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResumeRsp) Reset()         { *m = ResumeRsp{} }
func (m *ResumeRsp) String() string { return proto.CompactTextString(m) }
func (*ResumeRsp) ProtoMessage()    {}
func (*ResumeRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc757c6e1020843f, []int{14}
}

func (m *ResumeRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResumeRsp.Unmarshal(m, b)
}
func (m *ResumeRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResumeRsp.Marshal(b, m, deterministic)
}
func (m *ResumeRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResumeRsp.Merge(m, src)
}
func (m *ResumeRsp) XXX_Size() int {
	return xxx_messageInfo_ResumeRsp.Size(m)
}
func (m *ResumeRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_ResumeRsp.DiscardUnknown(m)
}

var xxx_messageInfo_ResumeRsp proto.InternalMessageInfo

func (m *ResumeRsp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func init() {
	proto.RegisterType((*Connection)(nil), "echo.Connection")
	proto.RegisterType((*CreateConnectionRqst)(nil), "echo.CreateConnectionRqst")
	proto.RegisterType((*CreateConnectionRsp)(nil), "echo.CreateConnectionRsp")
	proto.RegisterType((*DeleteConnectionRqst)(nil), "echo.DeleteConnectionRqst")
	proto.RegisterType((*DeleteConnectionRsp)(nil), "echo.DeleteConnectionRsp")
	proto.RegisterType((*Tag)(nil), "echo.Tag")
	proto.RegisterType((*Link)(nil), "echo.Link")
	proto.RegisterType((*LinkRqst)(nil), "echo.LinkRqst")
	proto.RegisterType((*LinkRsp)(nil), "echo.LinkRsp")
	proto.RegisterType((*UnLinkRqst)(nil), "echo.UnLinkRqst")
	proto.RegisterType((*UnLinkRsp)(nil), "echo.UnLinkRsp")
	proto.RegisterType((*SuspendRqst)(nil), "echo.SuspendRqst")
	proto.RegisterType((*SuspendRsp)(nil), "echo.SuspendRsp")
	proto.RegisterType((*ResumeRqst)(nil), "echo.ResumeRqst")
	proto.RegisterType((*ResumeRsp)(nil), "echo.ResumeRsp")
}

func init() {
	proto.RegisterFile("plc_link/plc_link_pb/plc_link.proto", fileDescriptor_fc757c6e1020843f)
}

var fileDescriptor_fc757c6e1020843f = []byte{
	// 527 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x54, 0xdb, 0x6e, 0xd3, 0x40,
	0x10, 0x6d, 0x6e, 0x4e, 0x32, 0xa1, 0x25, 0x2c, 0x11, 0x32, 0x51, 0x90, 0xda, 0x2d, 0x82, 0x48,
	0xa8, 0xa1, 0x0a, 0x5f, 0x00, 0xed, 0x03, 0x88, 0xaa, 0x20, 0x37, 0xbc, 0xf0, 0x52, 0x39, 0xf6,
	0x24, 0x58, 0x71, 0xd6, 0xae, 0xd7, 0x41, 0x2a, 0x7f, 0xc6, 0xe7, 0xf0, 0x27, 0x68, 0x67, 0xd7,
	0x97, 0x5c, 0xdf, 0xf6, 0xcc, 0x19, 0x9f, 0x19, 0xcf, 0xd9, 0x59, 0x38, 0x8f, 0x43, 0xef, 0x3e,
	0x0c, 0xc4, 0xe2, 0x7d, 0x76, 0xb8, 0x8f, 0xa7, 0xf9, 0x79, 0x14, 0x27, 0x51, 0x1a, 0xb1, 0x3a,
	0x7a, 0xbf, 0x22, 0x7e, 0x0b, 0x70, 0x15, 0x09, 0x81, 0x5e, 0x1a, 0x44, 0x82, 0x9d, 0x40, 0x35,
	0xf0, 0xed, 0xca, 0x69, 0x65, 0xd8, 0x76, 0xaa, 0x81, 0xcf, 0x5e, 0x80, 0xe5, 0x47, 0x4b, 0x37,
	0x10, 0x76, 0x95, 0x62, 0x06, 0x31, 0x1b, 0x9a, 0xae, 0xef, 0x27, 0x28, 0xa5, 0x5d, 0x23, 0x22,
	0x83, 0xfc, 0x33, 0xf4, 0xae, 0x12, 0x74, 0x53, 0x2c, 0x54, 0x9d, 0x07, 0x99, 0xb2, 0x4b, 0x00,
	0x2f, 0x8f, 0x50, 0x85, 0xce, 0xb8, 0x3b, 0x52, 0x2d, 0x8c, 0x4a, 0x99, 0xa5, 0x1c, 0x7e, 0x01,
	0xcf, 0xb7, 0x94, 0x64, 0xac, 0x5a, 0x4a, 0x50, 0xae, 0xc2, 0x94, 0x44, 0x5a, 0x8e, 0x41, 0xfc,
	0x0d, 0xf4, 0xae, 0x31, 0xc4, 0xad, 0xc2, 0x1b, 0xbf, 0xa4, 0x64, 0xb7, 0xf2, 0x0e, 0xc8, 0xfe,
	0xad, 0x40, 0x6d, 0xe2, 0xce, 0x15, 0x7f, 0xad, 0x27, 0xa1, 0xa5, 0x0c, 0x52, 0x93, 0xf8, 0x68,
	0x26, 0xa1, 0x47, 0x94, 0x41, 0xc6, 0xe1, 0x49, 0x51, 0xe2, 0x8b, 0x6f, 0x06, 0xb5, 0x16, 0x63,
	0x0c, 0xea, 0xb7, 0xee, 0x12, 0xed, 0x3a, 0x71, 0x74, 0x66, 0x3d, 0x68, 0xdc, 0xb8, 0x53, 0x0c,
	0xed, 0x06, 0x05, 0x35, 0x60, 0x7d, 0x68, 0x4d, 0x1e, 0x63, 0xa4, 0x6c, 0x8b, 0x88, 0x1c, 0xab,
	0xde, 0xbe, 0xcd, 0x66, 0x12, 0x53, 0xbb, 0x79, 0x5a, 0x19, 0x36, 0x1c, 0x83, 0xf8, 0x1f, 0xa8,
	0xdf, 0x04, 0x62, 0xb1, 0xe5, 0xea, 0x00, 0xda, 0xb3, 0x04, 0x1f, 0x56, 0x28, 0xbc, 0x47, 0xea,
	0xba, 0xe1, 0x14, 0x01, 0x76, 0x06, 0x96, 0x8c, 0x56, 0x89, 0x87, 0xd4, 0x71, 0x67, 0xdc, 0xd6,
	0x2e, 0x4d, 0xdc, 0xb9, 0x63, 0x08, 0x95, 0x92, 0xba, 0xc9, 0x1c, 0x53, 0x6a, 0x7c, 0x3d, 0x45,
	0x13, 0x7c, 0x08, 0x2d, 0x55, 0x9b, 0x2c, 0x18, 0x40, 0x2d, 0x14, 0x0b, 0x63, 0x3a, 0xe8, 0x5c,
	0x22, 0x55, 0x98, 0x9f, 0x41, 0x93, 0xc0, 0x01, 0x13, 0x06, 0x00, 0x3f, 0x44, 0x2e, 0xb7, 0xe9,
	0xe8, 0x39, 0xb4, 0x0d, 0x7b, 0x40, 0xe2, 0x15, 0x74, 0xee, 0x56, 0x32, 0x46, 0xe1, 0xef, 0xd4,
	0x78, 0x0d, 0x90, 0xd1, 0x87, 0xfb, 0x70, 0x50, 0xae, 0x96, 0xb8, 0xaf, 0x0f, 0xc3, 0xee, 0x97,
	0x18, 0xff, 0xab, 0xc2, 0xc9, 0xf7, 0xd0, 0x53, 0xed, 0xde, 0x61, 0xf2, 0x3b, 0xf0, 0x90, 0x7d,
	0x85, 0xee, 0xe6, 0x45, 0x67, 0x7d, 0xb3, 0x1a, 0x3b, 0x56, 0xa9, 0xff, 0x72, 0x0f, 0x27, 0x63,
	0x7e, 0xa4, 0xc4, 0x36, 0xaf, 0x77, 0x26, 0xb6, 0x6b, 0x3d, 0x32, 0xb1, 0x1d, 0x2b, 0xc1, 0x8f,
	0xd8, 0xdb, 0xec, 0x02, 0x95, 0x3c, 0x53, 0x1f, 0x1d, 0x97, 0x30, 0x25, 0x5e, 0x80, 0xa5, 0x2d,
	0x60, 0x66, 0xa7, 0x0b, 0xbb, 0xfa, 0x4f, 0xd7, 0x22, 0x94, 0x7e, 0x09, 0x4d, 0x33, 0x6d, 0xf6,
	0x4c, 0xb3, 0x25, 0x6f, 0xfa, 0xdd, 0xf5, 0x10, 0x7d, 0xf1, 0x0e, 0x2c, 0x3d, 0xdb, 0xac, 0x40,
	0xe1, 0x43, 0x56, 0x20, 0x9f, 0xfd, 0xa7, 0xe3, 0x9f, 0x9d, 0xd2, 0xbb, 0x37, 0xb5, 0xe8, 0xbd,
	0xfb, 0xf0, 0x3f, 0x00, 0x00, 0xff, 0xff, 0xe5, 0x6b, 0x31, 0x63, 0x16, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PlcLinkServiceClient is the client API for PlcLinkService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PlcLinkServiceClient interface {
	// Create a connection.
	CreateConnection(ctx context.Context, in *CreateConnectionRqst, opts ...grpc.CallOption) (*CreateConnectionRsp, error)
	// Delete a connection.
	DeleteConnection(ctx context.Context, in *DeleteConnectionRqst, opts ...grpc.CallOption) (*DeleteConnectionRsp, error)
	// Link Tow tag together and make it refresh at a given frequency in milisecond.
	Link(ctx context.Context, in *LinkRqst, opts ...grpc.CallOption) (*LinkRsp, error)
	// Remove link from tow task.
	UnLink(ctx context.Context, in *UnLinkRqst, opts ...grpc.CallOption) (*UnLinkRsp, error)
	// Suspend the synchronization of tow tags.
	Suspend(ctx context.Context, in *SuspendRqst, opts ...grpc.CallOption) (*SuspendRsp, error)
	// Resume the synchronization of tow tags.
	Resume(ctx context.Context, in *ResumeRqst, opts ...grpc.CallOption) (*ResumeRsp, error)
}

type plcLinkServiceClient struct {
	cc *grpc.ClientConn
}

func NewPlcLinkServiceClient(cc *grpc.ClientConn) PlcLinkServiceClient {
	return &plcLinkServiceClient{cc}
}

func (c *plcLinkServiceClient) CreateConnection(ctx context.Context, in *CreateConnectionRqst, opts ...grpc.CallOption) (*CreateConnectionRsp, error) {
	out := new(CreateConnectionRsp)
	err := c.cc.Invoke(ctx, "/echo.PlcLinkService/CreateConnection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *plcLinkServiceClient) DeleteConnection(ctx context.Context, in *DeleteConnectionRqst, opts ...grpc.CallOption) (*DeleteConnectionRsp, error) {
	out := new(DeleteConnectionRsp)
	err := c.cc.Invoke(ctx, "/echo.PlcLinkService/DeleteConnection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *plcLinkServiceClient) Link(ctx context.Context, in *LinkRqst, opts ...grpc.CallOption) (*LinkRsp, error) {
	out := new(LinkRsp)
	err := c.cc.Invoke(ctx, "/echo.PlcLinkService/Link", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *plcLinkServiceClient) UnLink(ctx context.Context, in *UnLinkRqst, opts ...grpc.CallOption) (*UnLinkRsp, error) {
	out := new(UnLinkRsp)
	err := c.cc.Invoke(ctx, "/echo.PlcLinkService/UnLink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *plcLinkServiceClient) Suspend(ctx context.Context, in *SuspendRqst, opts ...grpc.CallOption) (*SuspendRsp, error) {
	out := new(SuspendRsp)
	err := c.cc.Invoke(ctx, "/echo.PlcLinkService/Suspend", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *plcLinkServiceClient) Resume(ctx context.Context, in *ResumeRqst, opts ...grpc.CallOption) (*ResumeRsp, error) {
	out := new(ResumeRsp)
	err := c.cc.Invoke(ctx, "/echo.PlcLinkService/Resume", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PlcLinkServiceServer is the server API for PlcLinkService service.
type PlcLinkServiceServer interface {
	// Create a connection.
	CreateConnection(context.Context, *CreateConnectionRqst) (*CreateConnectionRsp, error)
	// Delete a connection.
	DeleteConnection(context.Context, *DeleteConnectionRqst) (*DeleteConnectionRsp, error)
	// Link Tow tag together and make it refresh at a given frequency in milisecond.
	Link(context.Context, *LinkRqst) (*LinkRsp, error)
	// Remove link from tow task.
	UnLink(context.Context, *UnLinkRqst) (*UnLinkRsp, error)
	// Suspend the synchronization of tow tags.
	Suspend(context.Context, *SuspendRqst) (*SuspendRsp, error)
	// Resume the synchronization of tow tags.
	Resume(context.Context, *ResumeRqst) (*ResumeRsp, error)
}

// UnimplementedPlcLinkServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPlcLinkServiceServer struct {
}

func (*UnimplementedPlcLinkServiceServer) CreateConnection(ctx context.Context, req *CreateConnectionRqst) (*CreateConnectionRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateConnection not implemented")
}
func (*UnimplementedPlcLinkServiceServer) DeleteConnection(ctx context.Context, req *DeleteConnectionRqst) (*DeleteConnectionRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteConnection not implemented")
}
func (*UnimplementedPlcLinkServiceServer) Link(ctx context.Context, req *LinkRqst) (*LinkRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Link not implemented")
}
func (*UnimplementedPlcLinkServiceServer) UnLink(ctx context.Context, req *UnLinkRqst) (*UnLinkRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnLink not implemented")
}
func (*UnimplementedPlcLinkServiceServer) Suspend(ctx context.Context, req *SuspendRqst) (*SuspendRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Suspend not implemented")
}
func (*UnimplementedPlcLinkServiceServer) Resume(ctx context.Context, req *ResumeRqst) (*ResumeRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Resume not implemented")
}

func RegisterPlcLinkServiceServer(s *grpc.Server, srv PlcLinkServiceServer) {
	s.RegisterService(&_PlcLinkService_serviceDesc, srv)
}

func _PlcLinkService_CreateConnection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateConnectionRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlcLinkServiceServer).CreateConnection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/echo.PlcLinkService/CreateConnection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlcLinkServiceServer).CreateConnection(ctx, req.(*CreateConnectionRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlcLinkService_DeleteConnection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteConnectionRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlcLinkServiceServer).DeleteConnection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/echo.PlcLinkService/DeleteConnection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlcLinkServiceServer).DeleteConnection(ctx, req.(*DeleteConnectionRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlcLinkService_Link_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LinkRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlcLinkServiceServer).Link(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/echo.PlcLinkService/Link",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlcLinkServiceServer).Link(ctx, req.(*LinkRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlcLinkService_UnLink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnLinkRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlcLinkServiceServer).UnLink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/echo.PlcLinkService/UnLink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlcLinkServiceServer).UnLink(ctx, req.(*UnLinkRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlcLinkService_Suspend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SuspendRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlcLinkServiceServer).Suspend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/echo.PlcLinkService/Suspend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlcLinkServiceServer).Suspend(ctx, req.(*SuspendRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlcLinkService_Resume_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResumeRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlcLinkServiceServer).Resume(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/echo.PlcLinkService/Resume",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlcLinkServiceServer).Resume(ctx, req.(*ResumeRqst))
	}
	return interceptor(ctx, in, info, handler)
}

var _PlcLinkService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "echo.PlcLinkService",
	HandlerType: (*PlcLinkServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateConnection",
			Handler:    _PlcLinkService_CreateConnection_Handler,
		},
		{
			MethodName: "DeleteConnection",
			Handler:    _PlcLinkService_DeleteConnection_Handler,
		},
		{
			MethodName: "Link",
			Handler:    _PlcLinkService_Link_Handler,
		},
		{
			MethodName: "UnLink",
			Handler:    _PlcLinkService_UnLink_Handler,
		},
		{
			MethodName: "Suspend",
			Handler:    _PlcLinkService_Suspend_Handler,
		},
		{
			MethodName: "Resume",
			Handler:    _PlcLinkService_Resume_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "plc_link/plc_link_pb/plc_link.proto",
}
