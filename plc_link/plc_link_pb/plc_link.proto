/**
 * You can use echo as starter project.
 */
syntax = "proto3";
package plc_link;

option go_package="plc_link_pb";

// Connection with the plc_server.
message Connection {
	string id = 1;
	string domain = 2;
	string address = 3;
}

// Create connection
message CreateConnectionRqst {
	Connection connection = 1;
}

message CreateConnectionRsp {
	bool result = 1;
}

// Delete connection
message DeleteConnectionRqst {
	string id = 1;
}

message DeleteConnectionRsp {
	bool result = 1;
}

// Contain the tag informations.
message Tag {
	string Domain = 1;
	string Address = 2;
	string ConnectionId = 3;
	string Name = 4;
	string Label = 5;
	string TypeName = 6;
	int32  Offset = 7;
}

message Link {
	string id = 1;
	int32 frequency = 2;
	Tag source = 3;
	Tag target = 4;
}

// Link tow tag together and synchronize them at a given frequency.
message LinkRqst {
	Link lnk = 1;
}

message LinkRsp {
	bool result = 1;
}

// Unlink tags
message UnLinkRqst {
		string id = 1;
}

message UnLinkRsp {
	bool result = 1;
}

message SuspendRqst {
		string id = 1;
}

message SuspendRsp {
	bool result = 1;
}

message ResumeRqst {
		string id = 1;
}

message ResumeRsp {
	bool result = 1;
}

service PlcLinkService {
	// Create a connection.
	rpc CreateConnection(CreateConnectionRqst) returns (CreateConnectionRsp){};
	
	// Delete a connection.
	rpc DeleteConnection(DeleteConnectionRqst) returns (DeleteConnectionRsp){};
	
	// Link Tow tag together and make it refresh at a given frequency in milisecond.
	rpc Link(LinkRqst) returns (LinkRsp){};
	
	// Remove link from tow task.
	rpc UnLink(UnLinkRqst) returns (UnLinkRsp){};
	
	// Suspend the synchronization of tow tags.
	rpc Suspend(SuspendRqst) returns (SuspendRsp){};
	
	// Resume the synchronization of tow tags.
	rpc Resume(ResumeRqst) returns (ResumeRsp);
}