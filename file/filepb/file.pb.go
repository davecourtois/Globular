// Code generated by protoc-gen-go. DO NOT EDIT.
// source: file/filepb/file.proto

package filepb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_fe29353663d6fe2c, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type ReadDirRequest struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Recursive            bool     `protobuf:"varint,2,opt,name=recursive,proto3" json:"recursive,omitempty"`
	ThumnailWidth        int32    `protobuf:"varint,3,opt,name=thumnailWidth,proto3" json:"thumnailWidth,omitempty"`
	ThumnailHeight       int32    `protobuf:"varint,4,opt,name=thumnailHeight,proto3" json:"thumnailHeight,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadDirRequest) Reset()         { *m = ReadDirRequest{} }
func (m *ReadDirRequest) String() string { return proto.CompactTextString(m) }
func (*ReadDirRequest) ProtoMessage()    {}
func (*ReadDirRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fe29353663d6fe2c, []int{1}
}

func (m *ReadDirRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadDirRequest.Unmarshal(m, b)
}
func (m *ReadDirRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadDirRequest.Marshal(b, m, deterministic)
}
func (m *ReadDirRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadDirRequest.Merge(m, src)
}
func (m *ReadDirRequest) XXX_Size() int {
	return xxx_messageInfo_ReadDirRequest.Size(m)
}
func (m *ReadDirRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadDirRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadDirRequest proto.InternalMessageInfo

func (m *ReadDirRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *ReadDirRequest) GetRecursive() bool {
	if m != nil {
		return m.Recursive
	}
	return false
}

func (m *ReadDirRequest) GetThumnailWidth() int32 {
	if m != nil {
		return m.ThumnailWidth
	}
	return 0
}

func (m *ReadDirRequest) GetThumnailHeight() int32 {
	if m != nil {
		return m.ThumnailHeight
	}
	return 0
}

type ReadDirResponse struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadDirResponse) Reset()         { *m = ReadDirResponse{} }
func (m *ReadDirResponse) String() string { return proto.CompactTextString(m) }
func (*ReadDirResponse) ProtoMessage()    {}
func (*ReadDirResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fe29353663d6fe2c, []int{2}
}

func (m *ReadDirResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadDirResponse.Unmarshal(m, b)
}
func (m *ReadDirResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadDirResponse.Marshal(b, m, deterministic)
}
func (m *ReadDirResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadDirResponse.Merge(m, src)
}
func (m *ReadDirResponse) XXX_Size() int {
	return xxx_messageInfo_ReadDirResponse.Size(m)
}
func (m *ReadDirResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadDirResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadDirResponse proto.InternalMessageInfo

func (m *ReadDirResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type CreateDirRequest struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateDirRequest) Reset()         { *m = CreateDirRequest{} }
func (m *CreateDirRequest) String() string { return proto.CompactTextString(m) }
func (*CreateDirRequest) ProtoMessage()    {}
func (*CreateDirRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fe29353663d6fe2c, []int{3}
}

func (m *CreateDirRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDirRequest.Unmarshal(m, b)
}
func (m *CreateDirRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDirRequest.Marshal(b, m, deterministic)
}
func (m *CreateDirRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDirRequest.Merge(m, src)
}
func (m *CreateDirRequest) XXX_Size() int {
	return xxx_messageInfo_CreateDirRequest.Size(m)
}
func (m *CreateDirRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDirRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDirRequest proto.InternalMessageInfo

func (m *CreateDirRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *CreateDirRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CreateDirResponse struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateDirResponse) Reset()         { *m = CreateDirResponse{} }
func (m *CreateDirResponse) String() string { return proto.CompactTextString(m) }
func (*CreateDirResponse) ProtoMessage()    {}
func (*CreateDirResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fe29353663d6fe2c, []int{4}
}

func (m *CreateDirResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDirResponse.Unmarshal(m, b)
}
func (m *CreateDirResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDirResponse.Marshal(b, m, deterministic)
}
func (m *CreateDirResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDirResponse.Merge(m, src)
}
func (m *CreateDirResponse) XXX_Size() int {
	return xxx_messageInfo_CreateDirResponse.Size(m)
}
func (m *CreateDirResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDirResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDirResponse proto.InternalMessageInfo

func (m *CreateDirResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type DeleteDirRequest struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteDirRequest) Reset()         { *m = DeleteDirRequest{} }
func (m *DeleteDirRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteDirRequest) ProtoMessage()    {}
func (*DeleteDirRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fe29353663d6fe2c, []int{5}
}

func (m *DeleteDirRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteDirRequest.Unmarshal(m, b)
}
func (m *DeleteDirRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteDirRequest.Marshal(b, m, deterministic)
}
func (m *DeleteDirRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteDirRequest.Merge(m, src)
}
func (m *DeleteDirRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteDirRequest.Size(m)
}
func (m *DeleteDirRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteDirRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteDirRequest proto.InternalMessageInfo

func (m *DeleteDirRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type DeleteDirResponse struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteDirResponse) Reset()         { *m = DeleteDirResponse{} }
func (m *DeleteDirResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteDirResponse) ProtoMessage()    {}
func (*DeleteDirResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fe29353663d6fe2c, []int{6}
}

func (m *DeleteDirResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteDirResponse.Unmarshal(m, b)
}
func (m *DeleteDirResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteDirResponse.Marshal(b, m, deterministic)
}
func (m *DeleteDirResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteDirResponse.Merge(m, src)
}
func (m *DeleteDirResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteDirResponse.Size(m)
}
func (m *DeleteDirResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteDirResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteDirResponse proto.InternalMessageInfo

func (m *DeleteDirResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type RenameRequest struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	NewName              string   `protobuf:"bytes,2,opt,name=new_name,json=newName,proto3" json:"new_name,omitempty"`
	OldName              string   `protobuf:"bytes,3,opt,name=old_name,json=oldName,proto3" json:"old_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RenameRequest) Reset()         { *m = RenameRequest{} }
func (m *RenameRequest) String() string { return proto.CompactTextString(m) }
func (*RenameRequest) ProtoMessage()    {}
func (*RenameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fe29353663d6fe2c, []int{7}
}

func (m *RenameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RenameRequest.Unmarshal(m, b)
}
func (m *RenameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RenameRequest.Marshal(b, m, deterministic)
}
func (m *RenameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RenameRequest.Merge(m, src)
}
func (m *RenameRequest) XXX_Size() int {
	return xxx_messageInfo_RenameRequest.Size(m)
}
func (m *RenameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RenameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RenameRequest proto.InternalMessageInfo

func (m *RenameRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *RenameRequest) GetNewName() string {
	if m != nil {
		return m.NewName
	}
	return ""
}

func (m *RenameRequest) GetOldName() string {
	if m != nil {
		return m.OldName
	}
	return ""
}

type RenameResponse struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RenameResponse) Reset()         { *m = RenameResponse{} }
func (m *RenameResponse) String() string { return proto.CompactTextString(m) }
func (*RenameResponse) ProtoMessage()    {}
func (*RenameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fe29353663d6fe2c, []int{8}
}

func (m *RenameResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RenameResponse.Unmarshal(m, b)
}
func (m *RenameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RenameResponse.Marshal(b, m, deterministic)
}
func (m *RenameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RenameResponse.Merge(m, src)
}
func (m *RenameResponse) XXX_Size() int {
	return xxx_messageInfo_RenameResponse.Size(m)
}
func (m *RenameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RenameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RenameResponse proto.InternalMessageInfo

func (m *RenameResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type GetFileInfoRequest struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	ThumnailWidth        int32    `protobuf:"varint,2,opt,name=thumnailWidth,proto3" json:"thumnailWidth,omitempty"`
	ThumnailHeight       int32    `protobuf:"varint,3,opt,name=thumnailHeight,proto3" json:"thumnailHeight,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFileInfoRequest) Reset()         { *m = GetFileInfoRequest{} }
func (m *GetFileInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetFileInfoRequest) ProtoMessage()    {}
func (*GetFileInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fe29353663d6fe2c, []int{9}
}

func (m *GetFileInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFileInfoRequest.Unmarshal(m, b)
}
func (m *GetFileInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFileInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetFileInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFileInfoRequest.Merge(m, src)
}
func (m *GetFileInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetFileInfoRequest.Size(m)
}
func (m *GetFileInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFileInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetFileInfoRequest proto.InternalMessageInfo

func (m *GetFileInfoRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *GetFileInfoRequest) GetThumnailWidth() int32 {
	if m != nil {
		return m.ThumnailWidth
	}
	return 0
}

func (m *GetFileInfoRequest) GetThumnailHeight() int32 {
	if m != nil {
		return m.ThumnailHeight
	}
	return 0
}

type GetFileInfoResponse struct {
	Data                 string   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFileInfoResponse) Reset()         { *m = GetFileInfoResponse{} }
func (m *GetFileInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetFileInfoResponse) ProtoMessage()    {}
func (*GetFileInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fe29353663d6fe2c, []int{10}
}

func (m *GetFileInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFileInfoResponse.Unmarshal(m, b)
}
func (m *GetFileInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFileInfoResponse.Marshal(b, m, deterministic)
}
func (m *GetFileInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFileInfoResponse.Merge(m, src)
}
func (m *GetFileInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetFileInfoResponse.Size(m)
}
func (m *GetFileInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFileInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetFileInfoResponse proto.InternalMessageInfo

func (m *GetFileInfoResponse) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

// Read file as a binary file.
type ReadFileRequest struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadFileRequest) Reset()         { *m = ReadFileRequest{} }
func (m *ReadFileRequest) String() string { return proto.CompactTextString(m) }
func (*ReadFileRequest) ProtoMessage()    {}
func (*ReadFileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fe29353663d6fe2c, []int{11}
}

func (m *ReadFileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadFileRequest.Unmarshal(m, b)
}
func (m *ReadFileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadFileRequest.Marshal(b, m, deterministic)
}
func (m *ReadFileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadFileRequest.Merge(m, src)
}
func (m *ReadFileRequest) XXX_Size() int {
	return xxx_messageInfo_ReadFileRequest.Size(m)
}
func (m *ReadFileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadFileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadFileRequest proto.InternalMessageInfo

func (m *ReadFileRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type ReadFileResponse struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadFileResponse) Reset()         { *m = ReadFileResponse{} }
func (m *ReadFileResponse) String() string { return proto.CompactTextString(m) }
func (*ReadFileResponse) ProtoMessage()    {}
func (*ReadFileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fe29353663d6fe2c, []int{12}
}

func (m *ReadFileResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadFileResponse.Unmarshal(m, b)
}
func (m *ReadFileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadFileResponse.Marshal(b, m, deterministic)
}
func (m *ReadFileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadFileResponse.Merge(m, src)
}
func (m *ReadFileResponse) XXX_Size() int {
	return xxx_messageInfo_ReadFileResponse.Size(m)
}
func (m *ReadFileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadFileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadFileResponse proto.InternalMessageInfo

func (m *ReadFileResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// Read file as a binary file.
type SaveFileRequest struct {
	// Types that are valid to be assigned to File:
	//	*SaveFileRequest_Path
	//	*SaveFileRequest_Data
	File                 isSaveFileRequest_File `protobuf_oneof:"file"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *SaveFileRequest) Reset()         { *m = SaveFileRequest{} }
func (m *SaveFileRequest) String() string { return proto.CompactTextString(m) }
func (*SaveFileRequest) ProtoMessage()    {}
func (*SaveFileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fe29353663d6fe2c, []int{13}
}

func (m *SaveFileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SaveFileRequest.Unmarshal(m, b)
}
func (m *SaveFileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SaveFileRequest.Marshal(b, m, deterministic)
}
func (m *SaveFileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SaveFileRequest.Merge(m, src)
}
func (m *SaveFileRequest) XXX_Size() int {
	return xxx_messageInfo_SaveFileRequest.Size(m)
}
func (m *SaveFileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SaveFileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SaveFileRequest proto.InternalMessageInfo

type isSaveFileRequest_File interface {
	isSaveFileRequest_File()
}

type SaveFileRequest_Path struct {
	Path string `protobuf:"bytes,1,opt,name=path,proto3,oneof"`
}

type SaveFileRequest_Data struct {
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*SaveFileRequest_Path) isSaveFileRequest_File() {}

func (*SaveFileRequest_Data) isSaveFileRequest_File() {}

func (m *SaveFileRequest) GetFile() isSaveFileRequest_File {
	if m != nil {
		return m.File
	}
	return nil
}

func (m *SaveFileRequest) GetPath() string {
	if x, ok := m.GetFile().(*SaveFileRequest_Path); ok {
		return x.Path
	}
	return ""
}

func (m *SaveFileRequest) GetData() []byte {
	if x, ok := m.GetFile().(*SaveFileRequest_Data); ok {
		return x.Data
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*SaveFileRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*SaveFileRequest_Path)(nil),
		(*SaveFileRequest_Data)(nil),
	}
}

type SaveFileResponse struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SaveFileResponse) Reset()         { *m = SaveFileResponse{} }
func (m *SaveFileResponse) String() string { return proto.CompactTextString(m) }
func (*SaveFileResponse) ProtoMessage()    {}
func (*SaveFileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fe29353663d6fe2c, []int{14}
}

func (m *SaveFileResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SaveFileResponse.Unmarshal(m, b)
}
func (m *SaveFileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SaveFileResponse.Marshal(b, m, deterministic)
}
func (m *SaveFileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SaveFileResponse.Merge(m, src)
}
func (m *SaveFileResponse) XXX_Size() int {
	return xxx_messageInfo_SaveFileResponse.Size(m)
}
func (m *SaveFileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SaveFileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SaveFileResponse proto.InternalMessageInfo

func (m *SaveFileResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

// Delete file
type DeleteFileRequest struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteFileRequest) Reset()         { *m = DeleteFileRequest{} }
func (m *DeleteFileRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteFileRequest) ProtoMessage()    {}
func (*DeleteFileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fe29353663d6fe2c, []int{15}
}

func (m *DeleteFileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteFileRequest.Unmarshal(m, b)
}
func (m *DeleteFileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteFileRequest.Marshal(b, m, deterministic)
}
func (m *DeleteFileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteFileRequest.Merge(m, src)
}
func (m *DeleteFileRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteFileRequest.Size(m)
}
func (m *DeleteFileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteFileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteFileRequest proto.InternalMessageInfo

func (m *DeleteFileRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type DeleteFileResponse struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteFileResponse) Reset()         { *m = DeleteFileResponse{} }
func (m *DeleteFileResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteFileResponse) ProtoMessage()    {}
func (*DeleteFileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fe29353663d6fe2c, []int{16}
}

func (m *DeleteFileResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteFileResponse.Unmarshal(m, b)
}
func (m *DeleteFileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteFileResponse.Marshal(b, m, deterministic)
}
func (m *DeleteFileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteFileResponse.Merge(m, src)
}
func (m *DeleteFileResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteFileResponse.Size(m)
}
func (m *DeleteFileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteFileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteFileResponse proto.InternalMessageInfo

func (m *DeleteFileResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

// Return all images thumnails from a directory
type GetThumbnailsRequest struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Recursive            bool     `protobuf:"varint,2,opt,name=recursive,proto3" json:"recursive,omitempty"`
	ThumnailWidth        int32    `protobuf:"varint,3,opt,name=thumnailWidth,proto3" json:"thumnailWidth,omitempty"`
	ThumnailHeight       int32    `protobuf:"varint,4,opt,name=thumnailHeight,proto3" json:"thumnailHeight,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetThumbnailsRequest) Reset()         { *m = GetThumbnailsRequest{} }
func (m *GetThumbnailsRequest) String() string { return proto.CompactTextString(m) }
func (*GetThumbnailsRequest) ProtoMessage()    {}
func (*GetThumbnailsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fe29353663d6fe2c, []int{17}
}

func (m *GetThumbnailsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetThumbnailsRequest.Unmarshal(m, b)
}
func (m *GetThumbnailsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetThumbnailsRequest.Marshal(b, m, deterministic)
}
func (m *GetThumbnailsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetThumbnailsRequest.Merge(m, src)
}
func (m *GetThumbnailsRequest) XXX_Size() int {
	return xxx_messageInfo_GetThumbnailsRequest.Size(m)
}
func (m *GetThumbnailsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetThumbnailsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetThumbnailsRequest proto.InternalMessageInfo

func (m *GetThumbnailsRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *GetThumbnailsRequest) GetRecursive() bool {
	if m != nil {
		return m.Recursive
	}
	return false
}

func (m *GetThumbnailsRequest) GetThumnailWidth() int32 {
	if m != nil {
		return m.ThumnailWidth
	}
	return 0
}

func (m *GetThumbnailsRequest) GetThumnailHeight() int32 {
	if m != nil {
		return m.ThumnailHeight
	}
	return 0
}

type GetThumbnailsResponse struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetThumbnailsResponse) Reset()         { *m = GetThumbnailsResponse{} }
func (m *GetThumbnailsResponse) String() string { return proto.CompactTextString(m) }
func (*GetThumbnailsResponse) ProtoMessage()    {}
func (*GetThumbnailsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fe29353663d6fe2c, []int{18}
}

func (m *GetThumbnailsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetThumbnailsResponse.Unmarshal(m, b)
}
func (m *GetThumbnailsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetThumbnailsResponse.Marshal(b, m, deterministic)
}
func (m *GetThumbnailsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetThumbnailsResponse.Merge(m, src)
}
func (m *GetThumbnailsResponse) XXX_Size() int {
	return xxx_messageInfo_GetThumbnailsResponse.Size(m)
}
func (m *GetThumbnailsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetThumbnailsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetThumbnailsResponse proto.InternalMessageInfo

func (m *GetThumbnailsResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// Write the execel file on the server.
type CreateArchiveRequest struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateArchiveRequest) Reset()         { *m = CreateArchiveRequest{} }
func (m *CreateArchiveRequest) String() string { return proto.CompactTextString(m) }
func (*CreateArchiveRequest) ProtoMessage()    {}
func (*CreateArchiveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fe29353663d6fe2c, []int{19}
}

func (m *CreateArchiveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateArchiveRequest.Unmarshal(m, b)
}
func (m *CreateArchiveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateArchiveRequest.Marshal(b, m, deterministic)
}
func (m *CreateArchiveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateArchiveRequest.Merge(m, src)
}
func (m *CreateArchiveRequest) XXX_Size() int {
	return xxx_messageInfo_CreateArchiveRequest.Size(m)
}
func (m *CreateArchiveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateArchiveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateArchiveRequest proto.InternalMessageInfo

func (m *CreateArchiveRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *CreateArchiveRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CreateArchiveResponse struct {
	Result               string   `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateArchiveResponse) Reset()         { *m = CreateArchiveResponse{} }
func (m *CreateArchiveResponse) String() string { return proto.CompactTextString(m) }
func (*CreateArchiveResponse) ProtoMessage()    {}
func (*CreateArchiveResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fe29353663d6fe2c, []int{20}
}

func (m *CreateArchiveResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateArchiveResponse.Unmarshal(m, b)
}
func (m *CreateArchiveResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateArchiveResponse.Marshal(b, m, deterministic)
}
func (m *CreateArchiveResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateArchiveResponse.Merge(m, src)
}
func (m *CreateArchiveResponse) XXX_Size() int {
	return xxx_messageInfo_CreateArchiveResponse.Size(m)
}
func (m *CreateArchiveResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateArchiveResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateArchiveResponse proto.InternalMessageInfo

func (m *CreateArchiveResponse) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

// Write the execel file on the server.
type WriteExcelFileRequest struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Data                 string   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WriteExcelFileRequest) Reset()         { *m = WriteExcelFileRequest{} }
func (m *WriteExcelFileRequest) String() string { return proto.CompactTextString(m) }
func (*WriteExcelFileRequest) ProtoMessage()    {}
func (*WriteExcelFileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fe29353663d6fe2c, []int{21}
}

func (m *WriteExcelFileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteExcelFileRequest.Unmarshal(m, b)
}
func (m *WriteExcelFileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteExcelFileRequest.Marshal(b, m, deterministic)
}
func (m *WriteExcelFileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteExcelFileRequest.Merge(m, src)
}
func (m *WriteExcelFileRequest) XXX_Size() int {
	return xxx_messageInfo_WriteExcelFileRequest.Size(m)
}
func (m *WriteExcelFileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteExcelFileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WriteExcelFileRequest proto.InternalMessageInfo

func (m *WriteExcelFileRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *WriteExcelFileRequest) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type WriteExcelFileResponse struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WriteExcelFileResponse) Reset()         { *m = WriteExcelFileResponse{} }
func (m *WriteExcelFileResponse) String() string { return proto.CompactTextString(m) }
func (*WriteExcelFileResponse) ProtoMessage()    {}
func (*WriteExcelFileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fe29353663d6fe2c, []int{22}
}

func (m *WriteExcelFileResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteExcelFileResponse.Unmarshal(m, b)
}
func (m *WriteExcelFileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteExcelFileResponse.Marshal(b, m, deterministic)
}
func (m *WriteExcelFileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteExcelFileResponse.Merge(m, src)
}
func (m *WriteExcelFileResponse) XXX_Size() int {
	return xxx_messageInfo_WriteExcelFileResponse.Size(m)
}
func (m *WriteExcelFileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteExcelFileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WriteExcelFileResponse proto.InternalMessageInfo

func (m *WriteExcelFileResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func init() {
	proto.RegisterType((*Empty)(nil), "file.Empty")
	proto.RegisterType((*ReadDirRequest)(nil), "file.ReadDirRequest")
	proto.RegisterType((*ReadDirResponse)(nil), "file.ReadDirResponse")
	proto.RegisterType((*CreateDirRequest)(nil), "file.CreateDirRequest")
	proto.RegisterType((*CreateDirResponse)(nil), "file.CreateDirResponse")
	proto.RegisterType((*DeleteDirRequest)(nil), "file.DeleteDirRequest")
	proto.RegisterType((*DeleteDirResponse)(nil), "file.DeleteDirResponse")
	proto.RegisterType((*RenameRequest)(nil), "file.RenameRequest")
	proto.RegisterType((*RenameResponse)(nil), "file.RenameResponse")
	proto.RegisterType((*GetFileInfoRequest)(nil), "file.GetFileInfoRequest")
	proto.RegisterType((*GetFileInfoResponse)(nil), "file.GetFileInfoResponse")
	proto.RegisterType((*ReadFileRequest)(nil), "file.ReadFileRequest")
	proto.RegisterType((*ReadFileResponse)(nil), "file.ReadFileResponse")
	proto.RegisterType((*SaveFileRequest)(nil), "file.SaveFileRequest")
	proto.RegisterType((*SaveFileResponse)(nil), "file.SaveFileResponse")
	proto.RegisterType((*DeleteFileRequest)(nil), "file.DeleteFileRequest")
	proto.RegisterType((*DeleteFileResponse)(nil), "file.DeleteFileResponse")
	proto.RegisterType((*GetThumbnailsRequest)(nil), "file.GetThumbnailsRequest")
	proto.RegisterType((*GetThumbnailsResponse)(nil), "file.GetThumbnailsResponse")
	proto.RegisterType((*CreateArchiveRequest)(nil), "file.CreateArchiveRequest")
	proto.RegisterType((*CreateArchiveResponse)(nil), "file.CreateArchiveResponse")
	proto.RegisterType((*WriteExcelFileRequest)(nil), "file.WriteExcelFileRequest")
	proto.RegisterType((*WriteExcelFileResponse)(nil), "file.WriteExcelFileResponse")
}

func init() { proto.RegisterFile("file/filepb/file.proto", fileDescriptor_fe29353663d6fe2c) }

var fileDescriptor_fe29353663d6fe2c = []byte{
	// 674 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x56, 0x5f, 0x6f, 0x93, 0x50,
	0x14, 0x2f, 0x5b, 0xd7, 0xc1, 0xd9, 0xbf, 0x7a, 0x47, 0x2b, 0xc3, 0x3d, 0x2c, 0x44, 0x6b, 0x75,
	0x66, 0x5b, 0x34, 0xbe, 0x2c, 0xd9, 0xcc, 0x66, 0x6b, 0x67, 0xa2, 0x3e, 0x30, 0x93, 0x45, 0x5f,
	0x0c, 0x6d, 0xcf, 0x84, 0x84, 0x42, 0x85, 0xdb, 0x4e, 0xbf, 0x85, 0x4f, 0x7e, 0x4b, 0xbf, 0x83,
	0xb9, 0xc0, 0xa5, 0x17, 0x4a, 0x40, 0xdf, 0x7c, 0x69, 0x2f, 0xe7, 0x1f, 0xbf, 0x7b, 0x7e, 0xe7,
	0xfc, 0x02, 0xb4, 0x6f, 0x1d, 0x17, 0x8f, 0xd9, 0xcf, 0x74, 0x18, 0xfd, 0x1d, 0x4d, 0x03, 0x9f,
	0xfa, 0xa4, 0xce, 0xce, 0xc6, 0x3a, 0xac, 0xf5, 0x27, 0x53, 0xfa, 0xc3, 0xf8, 0x29, 0xc1, 0xb6,
	0x89, 0xd6, 0xb8, 0xe7, 0x04, 0x26, 0x7e, 0x9b, 0x61, 0x48, 0x09, 0x81, 0xfa, 0xd4, 0xa2, 0xb6,
	0x26, 0x1d, 0x48, 0x5d, 0xc5, 0x8c, 0xce, 0x64, 0x1f, 0x94, 0x00, 0x47, 0xb3, 0x20, 0x74, 0xe6,
	0xa8, 0xad, 0x1c, 0x48, 0x5d, 0xd9, 0x5c, 0x18, 0xc8, 0x43, 0xd8, 0xa2, 0xf6, 0x6c, 0xe2, 0x59,
	0x8e, 0x7b, 0xe3, 0x8c, 0xa9, 0xad, 0xad, 0x1e, 0x48, 0xdd, 0x35, 0x33, 0x6b, 0x24, 0x1d, 0xd8,
	0xe6, 0x86, 0x2b, 0x74, 0xbe, 0xda, 0x54, 0xab, 0x47, 0x61, 0x39, 0xab, 0xf1, 0x08, 0x76, 0x52,
	0x44, 0xe1, 0xd4, 0xf7, 0x42, 0x64, 0x90, 0xc6, 0x16, 0xb5, 0x22, 0x48, 0x9b, 0x66, 0x74, 0x36,
	0x4e, 0xa1, 0xf9, 0x3a, 0x40, 0x8b, 0x62, 0x05, 0x74, 0x02, 0x75, 0xcf, 0x9a, 0xc4, 0xa8, 0x15,
	0x33, 0x3a, 0x1b, 0x87, 0x70, 0x4f, 0xc8, 0x4d, 0x5e, 0xd2, 0x86, 0x46, 0x80, 0xe1, 0xcc, 0xa5,
	0x51, 0xba, 0x6c, 0x26, 0x4f, 0x46, 0x07, 0x9a, 0x3d, 0x74, 0xb1, 0xea, 0x45, 0xac, 0xa8, 0x10,
	0x57, 0x51, 0xf4, 0x13, 0x6c, 0x99, 0xc8, 0xb0, 0x94, 0x41, 0xdf, 0x03, 0xd9, 0xc3, 0xbb, 0x2f,
	0x02, 0xfc, 0x75, 0x0f, 0xef, 0x3e, 0x58, 0x13, 0x64, 0x2e, 0xdf, 0x1d, 0xc7, 0xae, 0xd5, 0xd8,
	0xe5, 0xbb, 0x63, 0xe6, 0x32, 0xba, 0x8c, 0xd1, 0xb8, 0x74, 0x05, 0x88, 0x39, 0x90, 0x01, 0xd2,
	0x37, 0x8e, 0x8b, 0x6f, 0xbd, 0x5b, 0xbf, 0x0c, 0xc9, 0x12, 0xc3, 0x2b, 0x7f, 0xc7, 0xf0, 0x6a,
	0x21, 0xc3, 0x4f, 0x60, 0x37, 0xf3, 0xde, 0x02, 0x96, 0x95, 0x84, 0xe5, 0x64, 0x18, 0x58, 0x6c,
	0x59, 0xef, 0x3b, 0xd0, 0x5c, 0x84, 0x95, 0x0c, 0x4d, 0x1f, 0x76, 0xae, 0xad, 0x39, 0x8a, 0xe5,
	0x54, 0xb1, 0xdc, 0x55, 0x2d, 0xb9, 0xb0, 0x9a, 0x24, 0xb3, 0x7b, 0x6e, 0x32, 0x2b, 0x7b, 0xba,
	0x6c, 0x40, 0xbc, 0x3e, 0x4f, 0xa1, 0xb9, 0x28, 0x53, 0xd1, 0xe4, 0xc7, 0x7c, 0x2c, 0xaa, 0xee,
	0xf0, 0x0c, 0x88, 0x18, 0x58, 0x51, 0xf6, 0x97, 0x04, 0xea, 0x00, 0xe9, 0x47, 0x7b, 0x36, 0x19,
	0xb2, 0xd6, 0x86, 0xff, 0xcb, 0xfa, 0x1e, 0x42, 0x2b, 0x87, 0xab, 0x84, 0x8f, 0x73, 0x50, 0xe3,
	0x45, 0xbc, 0x08, 0x46, 0xb6, 0x33, 0xc7, 0x7f, 0x5d, 0xe4, 0x63, 0x68, 0xe5, 0xf2, 0x0b, 0xdb,
	0xa6, 0xa4, 0x6d, 0x7b, 0x05, 0xad, 0x9b, 0xc0, 0xa1, 0xd8, 0xff, 0x3e, 0x42, 0xb7, 0x82, 0x91,
	0x14, 0xf1, 0x8a, 0x30, 0x90, 0x27, 0xd0, 0xce, 0x17, 0x28, 0x67, 0xea, 0xf9, 0xef, 0x35, 0xd8,
	0x60, 0x81, 0xd7, 0x18, 0xcc, 0x9d, 0x11, 0x92, 0x53, 0x58, 0x4f, 0xf4, 0x8d, 0xa8, 0x47, 0x91,
	0x32, 0x67, 0x05, 0x58, 0x6f, 0xe5, 0xac, 0x71, 0x7d, 0xa3, 0x76, 0x22, 0x91, 0x73, 0x50, 0x52,
	0xe1, 0x22, 0xed, 0x38, 0x2e, 0xaf, 0x82, 0xfa, 0xfd, 0x25, 0x3b, 0xaf, 0xc0, 0xf2, 0x53, 0x8d,
	0xe2, 0xf9, 0x79, 0x71, 0xe3, 0xf9, 0x4b, 0x62, 0x66, 0xd4, 0xc8, 0x4b, 0x68, 0xc4, 0xda, 0x42,
	0x76, 0x39, 0x48, 0x41, 0xc4, 0x74, 0x35, 0x6b, 0x4c, 0xd3, 0x06, 0xb0, 0x99, 0xd0, 0x14, 0xb1,
	0x44, 0x74, 0x11, 0x61, 0x96, 0x7a, 0xfd, 0x41, 0xa1, 0x2f, 0xe9, 0x71, 0x0f, 0x36, 0x04, 0xe5,
	0x20, 0x5a, 0x1c, 0xbb, 0x2c, 0x62, 0xfa, 0x5e, 0x81, 0x27, 0x85, 0x73, 0x06, 0x32, 0x57, 0x0b,
	0x22, 0x34, 0x5b, 0x18, 0x07, 0xbd, 0x9d, 0x37, 0x0b, 0x24, 0x9c, 0x81, 0xcc, 0xb7, 0x9f, 0xa7,
	0xe7, 0x44, 0x85, 0xa7, 0xe7, 0x45, 0xc2, 0xa8, 0x75, 0x25, 0x72, 0x01, 0xb0, 0xd8, 0x73, 0x92,
	0x69, 0xb6, 0x58, 0x42, 0x5b, 0x76, 0xa4, 0x17, 0x78, 0x07, 0x5b, 0x99, 0x1d, 0xe3, 0x0d, 0x2d,
	0x12, 0x04, 0xde, 0xd0, 0xc2, 0xa5, 0x8c, 0xee, 0xf3, 0x1e, 0xb6, 0xb3, 0x23, 0x4d, 0x92, 0x94,
	0xc2, 0x4d, 0xd1, 0xf7, 0x8b, 0x9d, 0xbc, 0xe0, 0xa5, 0xfc, 0xb9, 0x11, 0x7f, 0x76, 0x0c, 0x1b,
	0xd1, 0x27, 0xc7, 0x8b, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x5b, 0x2e, 0x72, 0xd9, 0x8c, 0x08,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FileServiceClient is the client API for FileService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FileServiceClient interface {
	// Return a JOSN string containing the directories informations.
	// In case of image I will return a thumnail of the image so
	// so the response string can became large.
	ReadDir(ctx context.Context, in *ReadDirRequest, opts ...grpc.CallOption) (FileService_ReadDirClient, error)
	// Create a new directory
	CreateDir(ctx context.Context, in *CreateDirRequest, opts ...grpc.CallOption) (*CreateDirResponse, error)
	// Delete a directories
	DeleteDir(ctx context.Context, in *DeleteDirRequest, opts ...grpc.CallOption) (*DeleteDirResponse, error)
	// Rename a file/directory
	Rename(ctx context.Context, in *RenameRequest, opts ...grpc.CallOption) (*RenameResponse, error)
	// Create an archive from a given dir and set it with name.
	CreateAchive(ctx context.Context, in *CreateArchiveRequest, opts ...grpc.CallOption) (*CreateArchiveResponse, error)
	// Get file info, if the file exist it return the file size, name, thumnail...
	GetFileInfo(ctx context.Context, in *GetFileInfoRequest, opts ...grpc.CallOption) (*GetFileInfoResponse, error)
	// Read file, can be use for small to medium file...
	ReadFile(ctx context.Context, in *ReadFileRequest, opts ...grpc.CallOption) (FileService_ReadFileClient, error)
	// Save a file on the server...
	SaveFile(ctx context.Context, opts ...grpc.CallOption) (FileService_SaveFileClient, error)
	// Delete file
	DeleteFile(ctx context.Context, in *DeleteFileRequest, opts ...grpc.CallOption) (*DeleteFileResponse, error)
	// Specific files...
	GetThumbnails(ctx context.Context, in *GetThumbnailsRequest, opts ...grpc.CallOption) (FileService_GetThumbnailsClient, error)
	// Excel files...
	WriteExcelFile(ctx context.Context, in *WriteExcelFileRequest, opts ...grpc.CallOption) (*WriteExcelFileResponse, error)
}

type fileServiceClient struct {
	cc *grpc.ClientConn
}

func NewFileServiceClient(cc *grpc.ClientConn) FileServiceClient {
	return &fileServiceClient{cc}
}

func (c *fileServiceClient) ReadDir(ctx context.Context, in *ReadDirRequest, opts ...grpc.CallOption) (FileService_ReadDirClient, error) {
	stream, err := c.cc.NewStream(ctx, &_FileService_serviceDesc.Streams[0], "/file.FileService/ReadDir", opts...)
	if err != nil {
		return nil, err
	}
	x := &fileServiceReadDirClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type FileService_ReadDirClient interface {
	Recv() (*ReadDirResponse, error)
	grpc.ClientStream
}

type fileServiceReadDirClient struct {
	grpc.ClientStream
}

func (x *fileServiceReadDirClient) Recv() (*ReadDirResponse, error) {
	m := new(ReadDirResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *fileServiceClient) CreateDir(ctx context.Context, in *CreateDirRequest, opts ...grpc.CallOption) (*CreateDirResponse, error) {
	out := new(CreateDirResponse)
	err := c.cc.Invoke(ctx, "/file.FileService/CreateDir", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileServiceClient) DeleteDir(ctx context.Context, in *DeleteDirRequest, opts ...grpc.CallOption) (*DeleteDirResponse, error) {
	out := new(DeleteDirResponse)
	err := c.cc.Invoke(ctx, "/file.FileService/DeleteDir", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileServiceClient) Rename(ctx context.Context, in *RenameRequest, opts ...grpc.CallOption) (*RenameResponse, error) {
	out := new(RenameResponse)
	err := c.cc.Invoke(ctx, "/file.FileService/Rename", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileServiceClient) CreateAchive(ctx context.Context, in *CreateArchiveRequest, opts ...grpc.CallOption) (*CreateArchiveResponse, error) {
	out := new(CreateArchiveResponse)
	err := c.cc.Invoke(ctx, "/file.FileService/CreateAchive", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileServiceClient) GetFileInfo(ctx context.Context, in *GetFileInfoRequest, opts ...grpc.CallOption) (*GetFileInfoResponse, error) {
	out := new(GetFileInfoResponse)
	err := c.cc.Invoke(ctx, "/file.FileService/GetFileInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileServiceClient) ReadFile(ctx context.Context, in *ReadFileRequest, opts ...grpc.CallOption) (FileService_ReadFileClient, error) {
	stream, err := c.cc.NewStream(ctx, &_FileService_serviceDesc.Streams[1], "/file.FileService/ReadFile", opts...)
	if err != nil {
		return nil, err
	}
	x := &fileServiceReadFileClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type FileService_ReadFileClient interface {
	Recv() (*ReadFileResponse, error)
	grpc.ClientStream
}

type fileServiceReadFileClient struct {
	grpc.ClientStream
}

func (x *fileServiceReadFileClient) Recv() (*ReadFileResponse, error) {
	m := new(ReadFileResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *fileServiceClient) SaveFile(ctx context.Context, opts ...grpc.CallOption) (FileService_SaveFileClient, error) {
	stream, err := c.cc.NewStream(ctx, &_FileService_serviceDesc.Streams[2], "/file.FileService/SaveFile", opts...)
	if err != nil {
		return nil, err
	}
	x := &fileServiceSaveFileClient{stream}
	return x, nil
}

type FileService_SaveFileClient interface {
	Send(*SaveFileRequest) error
	CloseAndRecv() (*SaveFileResponse, error)
	grpc.ClientStream
}

type fileServiceSaveFileClient struct {
	grpc.ClientStream
}

func (x *fileServiceSaveFileClient) Send(m *SaveFileRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *fileServiceSaveFileClient) CloseAndRecv() (*SaveFileResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(SaveFileResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *fileServiceClient) DeleteFile(ctx context.Context, in *DeleteFileRequest, opts ...grpc.CallOption) (*DeleteFileResponse, error) {
	out := new(DeleteFileResponse)
	err := c.cc.Invoke(ctx, "/file.FileService/DeleteFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileServiceClient) GetThumbnails(ctx context.Context, in *GetThumbnailsRequest, opts ...grpc.CallOption) (FileService_GetThumbnailsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_FileService_serviceDesc.Streams[3], "/file.FileService/GetThumbnails", opts...)
	if err != nil {
		return nil, err
	}
	x := &fileServiceGetThumbnailsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type FileService_GetThumbnailsClient interface {
	Recv() (*GetThumbnailsResponse, error)
	grpc.ClientStream
}

type fileServiceGetThumbnailsClient struct {
	grpc.ClientStream
}

func (x *fileServiceGetThumbnailsClient) Recv() (*GetThumbnailsResponse, error) {
	m := new(GetThumbnailsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *fileServiceClient) WriteExcelFile(ctx context.Context, in *WriteExcelFileRequest, opts ...grpc.CallOption) (*WriteExcelFileResponse, error) {
	out := new(WriteExcelFileResponse)
	err := c.cc.Invoke(ctx, "/file.FileService/WriteExcelFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FileServiceServer is the server API for FileService service.
type FileServiceServer interface {
	// Return a JOSN string containing the directories informations.
	// In case of image I will return a thumnail of the image so
	// so the response string can became large.
	ReadDir(*ReadDirRequest, FileService_ReadDirServer) error
	// Create a new directory
	CreateDir(context.Context, *CreateDirRequest) (*CreateDirResponse, error)
	// Delete a directories
	DeleteDir(context.Context, *DeleteDirRequest) (*DeleteDirResponse, error)
	// Rename a file/directory
	Rename(context.Context, *RenameRequest) (*RenameResponse, error)
	// Create an archive from a given dir and set it with name.
	CreateAchive(context.Context, *CreateArchiveRequest) (*CreateArchiveResponse, error)
	// Get file info, if the file exist it return the file size, name, thumnail...
	GetFileInfo(context.Context, *GetFileInfoRequest) (*GetFileInfoResponse, error)
	// Read file, can be use for small to medium file...
	ReadFile(*ReadFileRequest, FileService_ReadFileServer) error
	// Save a file on the server...
	SaveFile(FileService_SaveFileServer) error
	// Delete file
	DeleteFile(context.Context, *DeleteFileRequest) (*DeleteFileResponse, error)
	// Specific files...
	GetThumbnails(*GetThumbnailsRequest, FileService_GetThumbnailsServer) error
	// Excel files...
	WriteExcelFile(context.Context, *WriteExcelFileRequest) (*WriteExcelFileResponse, error)
}

// UnimplementedFileServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFileServiceServer struct {
}

func (*UnimplementedFileServiceServer) ReadDir(req *ReadDirRequest, srv FileService_ReadDirServer) error {
	return status.Errorf(codes.Unimplemented, "method ReadDir not implemented")
}
func (*UnimplementedFileServiceServer) CreateDir(ctx context.Context, req *CreateDirRequest) (*CreateDirResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDir not implemented")
}
func (*UnimplementedFileServiceServer) DeleteDir(ctx context.Context, req *DeleteDirRequest) (*DeleteDirResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteDir not implemented")
}
func (*UnimplementedFileServiceServer) Rename(ctx context.Context, req *RenameRequest) (*RenameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Rename not implemented")
}
func (*UnimplementedFileServiceServer) CreateAchive(ctx context.Context, req *CreateArchiveRequest) (*CreateArchiveResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAchive not implemented")
}
func (*UnimplementedFileServiceServer) GetFileInfo(ctx context.Context, req *GetFileInfoRequest) (*GetFileInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFileInfo not implemented")
}
func (*UnimplementedFileServiceServer) ReadFile(req *ReadFileRequest, srv FileService_ReadFileServer) error {
	return status.Errorf(codes.Unimplemented, "method ReadFile not implemented")
}
func (*UnimplementedFileServiceServer) SaveFile(srv FileService_SaveFileServer) error {
	return status.Errorf(codes.Unimplemented, "method SaveFile not implemented")
}
func (*UnimplementedFileServiceServer) DeleteFile(ctx context.Context, req *DeleteFileRequest) (*DeleteFileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteFile not implemented")
}
func (*UnimplementedFileServiceServer) GetThumbnails(req *GetThumbnailsRequest, srv FileService_GetThumbnailsServer) error {
	return status.Errorf(codes.Unimplemented, "method GetThumbnails not implemented")
}
func (*UnimplementedFileServiceServer) WriteExcelFile(ctx context.Context, req *WriteExcelFileRequest) (*WriteExcelFileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WriteExcelFile not implemented")
}

func RegisterFileServiceServer(s *grpc.Server, srv FileServiceServer) {
	s.RegisterService(&_FileService_serviceDesc, srv)
}

func _FileService_ReadDir_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ReadDirRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(FileServiceServer).ReadDir(m, &fileServiceReadDirServer{stream})
}

type FileService_ReadDirServer interface {
	Send(*ReadDirResponse) error
	grpc.ServerStream
}

type fileServiceReadDirServer struct {
	grpc.ServerStream
}

func (x *fileServiceReadDirServer) Send(m *ReadDirResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _FileService_CreateDir_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDirRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileServiceServer).CreateDir(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/file.FileService/CreateDir",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileServiceServer).CreateDir(ctx, req.(*CreateDirRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileService_DeleteDir_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteDirRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileServiceServer).DeleteDir(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/file.FileService/DeleteDir",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileServiceServer).DeleteDir(ctx, req.(*DeleteDirRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileService_Rename_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RenameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileServiceServer).Rename(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/file.FileService/Rename",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileServiceServer).Rename(ctx, req.(*RenameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileService_CreateAchive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateArchiveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileServiceServer).CreateAchive(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/file.FileService/CreateAchive",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileServiceServer).CreateAchive(ctx, req.(*CreateArchiveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileService_GetFileInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFileInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileServiceServer).GetFileInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/file.FileService/GetFileInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileServiceServer).GetFileInfo(ctx, req.(*GetFileInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileService_ReadFile_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ReadFileRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(FileServiceServer).ReadFile(m, &fileServiceReadFileServer{stream})
}

type FileService_ReadFileServer interface {
	Send(*ReadFileResponse) error
	grpc.ServerStream
}

type fileServiceReadFileServer struct {
	grpc.ServerStream
}

func (x *fileServiceReadFileServer) Send(m *ReadFileResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _FileService_SaveFile_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(FileServiceServer).SaveFile(&fileServiceSaveFileServer{stream})
}

type FileService_SaveFileServer interface {
	SendAndClose(*SaveFileResponse) error
	Recv() (*SaveFileRequest, error)
	grpc.ServerStream
}

type fileServiceSaveFileServer struct {
	grpc.ServerStream
}

func (x *fileServiceSaveFileServer) SendAndClose(m *SaveFileResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *fileServiceSaveFileServer) Recv() (*SaveFileRequest, error) {
	m := new(SaveFileRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _FileService_DeleteFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileServiceServer).DeleteFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/file.FileService/DeleteFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileServiceServer).DeleteFile(ctx, req.(*DeleteFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileService_GetThumbnails_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetThumbnailsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(FileServiceServer).GetThumbnails(m, &fileServiceGetThumbnailsServer{stream})
}

type FileService_GetThumbnailsServer interface {
	Send(*GetThumbnailsResponse) error
	grpc.ServerStream
}

type fileServiceGetThumbnailsServer struct {
	grpc.ServerStream
}

func (x *fileServiceGetThumbnailsServer) Send(m *GetThumbnailsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _FileService_WriteExcelFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WriteExcelFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileServiceServer).WriteExcelFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/file.FileService/WriteExcelFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileServiceServer).WriteExcelFile(ctx, req.(*WriteExcelFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FileService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "file.FileService",
	HandlerType: (*FileServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateDir",
			Handler:    _FileService_CreateDir_Handler,
		},
		{
			MethodName: "DeleteDir",
			Handler:    _FileService_DeleteDir_Handler,
		},
		{
			MethodName: "Rename",
			Handler:    _FileService_Rename_Handler,
		},
		{
			MethodName: "CreateAchive",
			Handler:    _FileService_CreateAchive_Handler,
		},
		{
			MethodName: "GetFileInfo",
			Handler:    _FileService_GetFileInfo_Handler,
		},
		{
			MethodName: "DeleteFile",
			Handler:    _FileService_DeleteFile_Handler,
		},
		{
			MethodName: "WriteExcelFile",
			Handler:    _FileService_WriteExcelFile_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ReadDir",
			Handler:       _FileService_ReadDir_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ReadFile",
			Handler:       _FileService_ReadFile_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "SaveFile",
			Handler:       _FileService_SaveFile_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "GetThumbnails",
			Handler:       _FileService_GetThumbnails_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "file/filepb/file.proto",
}
