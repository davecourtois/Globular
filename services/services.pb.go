// Code generated by protoc-gen-go. DO NOT EDIT.
// source: services/services.proto

package services

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//* more can be append here *
type Platform int32

const (
	Platform_LINUX32 Platform = 0
	Platform_LINUX64 Platform = 1
	Platform_WIN32   Platform = 2
	Platform_WIN64   Platform = 3
)

var Platform_name = map[int32]string{
	0: "LINUX32",
	1: "LINUX64",
	2: "WIN32",
	3: "WIN64",
}

var Platform_value = map[string]int32{
	"LINUX32": 0,
	"LINUX64": 1,
	"WIN32":   2,
	"WIN64":   3,
}

func (x Platform) String() string {
	return proto.EnumName(Platform_name, int32(x))
}

func (Platform) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_20616c573d3cd2a9, []int{0}
}

//* Description of the service *
type ServiceDescriptor struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PublisherId          string   `protobuf:"bytes,2,opt,name=publisherId,proto3" json:"publisherId,omitempty"`
	Version              string   `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Description          string   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Repositories         []string `protobuf:"bytes,5,rep,name=repositories,proto3" json:"repositories,omitempty"`
	Discoveries          []string `protobuf:"bytes,6,rep,name=discoveries,proto3" json:"discoveries,omitempty"`
	Keywords             []string `protobuf:"bytes,7,rep,name=keywords,proto3" json:"keywords,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceDescriptor) Reset()         { *m = ServiceDescriptor{} }
func (m *ServiceDescriptor) String() string { return proto.CompactTextString(m) }
func (*ServiceDescriptor) ProtoMessage()    {}
func (*ServiceDescriptor) Descriptor() ([]byte, []int) {
	return fileDescriptor_20616c573d3cd2a9, []int{0}
}

func (m *ServiceDescriptor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceDescriptor.Unmarshal(m, b)
}
func (m *ServiceDescriptor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceDescriptor.Marshal(b, m, deterministic)
}
func (m *ServiceDescriptor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceDescriptor.Merge(m, src)
}
func (m *ServiceDescriptor) XXX_Size() int {
	return xxx_messageInfo_ServiceDescriptor.Size(m)
}
func (m *ServiceDescriptor) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceDescriptor.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceDescriptor proto.InternalMessageInfo

func (m *ServiceDescriptor) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ServiceDescriptor) GetPublisherId() string {
	if m != nil {
		return m.PublisherId
	}
	return ""
}

func (m *ServiceDescriptor) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *ServiceDescriptor) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ServiceDescriptor) GetRepositories() []string {
	if m != nil {
		return m.Repositories
	}
	return nil
}

func (m *ServiceDescriptor) GetDiscoveries() []string {
	if m != nil {
		return m.Discoveries
	}
	return nil
}

func (m *ServiceDescriptor) GetKeywords() []string {
	if m != nil {
		return m.Keywords
	}
	return nil
}

//* That message will contain the information to update a service on a node. *
type ServiceBundle struct {
	Descriptor_ *ServiceDescriptor `protobuf:"bytes,1,opt,name=descriptor,proto3" json:"descriptor,omitempty"`
	BuildNumber string             `protobuf:"bytes,2,opt,name=buildNumber,proto3" json:"buildNumber,omitempty"`
	Plaform     Platform           `protobuf:"varint,3,opt,name=plaform,proto3,enum=services.Platform" json:"plaform,omitempty"`
	//* binairies must be a tar.gz file *
	Binairies            []byte   `protobuf:"bytes,4,opt,name=binairies,proto3" json:"binairies,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceBundle) Reset()         { *m = ServiceBundle{} }
func (m *ServiceBundle) String() string { return proto.CompactTextString(m) }
func (*ServiceBundle) ProtoMessage()    {}
func (*ServiceBundle) Descriptor() ([]byte, []int) {
	return fileDescriptor_20616c573d3cd2a9, []int{1}
}

func (m *ServiceBundle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceBundle.Unmarshal(m, b)
}
func (m *ServiceBundle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceBundle.Marshal(b, m, deterministic)
}
func (m *ServiceBundle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceBundle.Merge(m, src)
}
func (m *ServiceBundle) XXX_Size() int {
	return xxx_messageInfo_ServiceBundle.Size(m)
}
func (m *ServiceBundle) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceBundle.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceBundle proto.InternalMessageInfo

func (m *ServiceBundle) GetDescriptor_() *ServiceDescriptor {
	if m != nil {
		return m.Descriptor_
	}
	return nil
}

func (m *ServiceBundle) GetBuildNumber() string {
	if m != nil {
		return m.BuildNumber
	}
	return ""
}

func (m *ServiceBundle) GetPlaform() Platform {
	if m != nil {
		return m.Plaform
	}
	return Platform_LINUX32
}

func (m *ServiceBundle) GetBinairies() []byte {
	if m != nil {
		return m.Binairies
	}
	return nil
}

type PublishServiceDescriptorRequest struct {
	Descriptor_          *ServiceDescriptor `protobuf:"bytes,1,opt,name=descriptor,proto3" json:"descriptor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *PublishServiceDescriptorRequest) Reset()         { *m = PublishServiceDescriptorRequest{} }
func (m *PublishServiceDescriptorRequest) String() string { return proto.CompactTextString(m) }
func (*PublishServiceDescriptorRequest) ProtoMessage()    {}
func (*PublishServiceDescriptorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_20616c573d3cd2a9, []int{2}
}

func (m *PublishServiceDescriptorRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishServiceDescriptorRequest.Unmarshal(m, b)
}
func (m *PublishServiceDescriptorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishServiceDescriptorRequest.Marshal(b, m, deterministic)
}
func (m *PublishServiceDescriptorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishServiceDescriptorRequest.Merge(m, src)
}
func (m *PublishServiceDescriptorRequest) XXX_Size() int {
	return xxx_messageInfo_PublishServiceDescriptorRequest.Size(m)
}
func (m *PublishServiceDescriptorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishServiceDescriptorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PublishServiceDescriptorRequest proto.InternalMessageInfo

func (m *PublishServiceDescriptorRequest) GetDescriptor_() *ServiceDescriptor {
	if m != nil {
		return m.Descriptor_
	}
	return nil
}

type PublishServiceDescriptorResponse struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublishServiceDescriptorResponse) Reset()         { *m = PublishServiceDescriptorResponse{} }
func (m *PublishServiceDescriptorResponse) String() string { return proto.CompactTextString(m) }
func (*PublishServiceDescriptorResponse) ProtoMessage()    {}
func (*PublishServiceDescriptorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_20616c573d3cd2a9, []int{3}
}

func (m *PublishServiceDescriptorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishServiceDescriptorResponse.Unmarshal(m, b)
}
func (m *PublishServiceDescriptorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishServiceDescriptorResponse.Marshal(b, m, deterministic)
}
func (m *PublishServiceDescriptorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishServiceDescriptorResponse.Merge(m, src)
}
func (m *PublishServiceDescriptorResponse) XXX_Size() int {
	return xxx_messageInfo_PublishServiceDescriptorResponse.Size(m)
}
func (m *PublishServiceDescriptorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishServiceDescriptorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PublishServiceDescriptorResponse proto.InternalMessageInfo

func (m *PublishServiceDescriptorResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type UploadBundleRequest struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadBundleRequest) Reset()         { *m = UploadBundleRequest{} }
func (m *UploadBundleRequest) String() string { return proto.CompactTextString(m) }
func (*UploadBundleRequest) ProtoMessage()    {}
func (*UploadBundleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_20616c573d3cd2a9, []int{4}
}

func (m *UploadBundleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadBundleRequest.Unmarshal(m, b)
}
func (m *UploadBundleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadBundleRequest.Marshal(b, m, deterministic)
}
func (m *UploadBundleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadBundleRequest.Merge(m, src)
}
func (m *UploadBundleRequest) XXX_Size() int {
	return xxx_messageInfo_UploadBundleRequest.Size(m)
}
func (m *UploadBundleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadBundleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UploadBundleRequest proto.InternalMessageInfo

func (m *UploadBundleRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type UploadBundleResponse struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadBundleResponse) Reset()         { *m = UploadBundleResponse{} }
func (m *UploadBundleResponse) String() string { return proto.CompactTextString(m) }
func (*UploadBundleResponse) ProtoMessage()    {}
func (*UploadBundleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_20616c573d3cd2a9, []int{5}
}

func (m *UploadBundleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadBundleResponse.Unmarshal(m, b)
}
func (m *UploadBundleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadBundleResponse.Marshal(b, m, deterministic)
}
func (m *UploadBundleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadBundleResponse.Merge(m, src)
}
func (m *UploadBundleResponse) XXX_Size() int {
	return xxx_messageInfo_UploadBundleResponse.Size(m)
}
func (m *UploadBundleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadBundleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UploadBundleResponse proto.InternalMessageInfo

func (m *UploadBundleResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type DownloadBundleRequest struct {
	Descriptor_          *ServiceDescriptor `protobuf:"bytes,1,opt,name=descriptor,proto3" json:"descriptor,omitempty"`
	Plaform              Platform           `protobuf:"varint,2,opt,name=plaform,proto3,enum=services.Platform" json:"plaform,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *DownloadBundleRequest) Reset()         { *m = DownloadBundleRequest{} }
func (m *DownloadBundleRequest) String() string { return proto.CompactTextString(m) }
func (*DownloadBundleRequest) ProtoMessage()    {}
func (*DownloadBundleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_20616c573d3cd2a9, []int{6}
}

func (m *DownloadBundleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DownloadBundleRequest.Unmarshal(m, b)
}
func (m *DownloadBundleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DownloadBundleRequest.Marshal(b, m, deterministic)
}
func (m *DownloadBundleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownloadBundleRequest.Merge(m, src)
}
func (m *DownloadBundleRequest) XXX_Size() int {
	return xxx_messageInfo_DownloadBundleRequest.Size(m)
}
func (m *DownloadBundleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DownloadBundleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DownloadBundleRequest proto.InternalMessageInfo

func (m *DownloadBundleRequest) GetDescriptor_() *ServiceDescriptor {
	if m != nil {
		return m.Descriptor_
	}
	return nil
}

func (m *DownloadBundleRequest) GetPlaform() Platform {
	if m != nil {
		return m.Plaform
	}
	return Platform_LINUX32
}

type DownloadBundleResponse struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DownloadBundleResponse) Reset()         { *m = DownloadBundleResponse{} }
func (m *DownloadBundleResponse) String() string { return proto.CompactTextString(m) }
func (*DownloadBundleResponse) ProtoMessage()    {}
func (*DownloadBundleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_20616c573d3cd2a9, []int{7}
}

func (m *DownloadBundleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DownloadBundleResponse.Unmarshal(m, b)
}
func (m *DownloadBundleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DownloadBundleResponse.Marshal(b, m, deterministic)
}
func (m *DownloadBundleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownloadBundleResponse.Merge(m, src)
}
func (m *DownloadBundleResponse) XXX_Size() int {
	return xxx_messageInfo_DownloadBundleResponse.Size(m)
}
func (m *DownloadBundleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DownloadBundleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DownloadBundleResponse proto.InternalMessageInfo

func (m *DownloadBundleResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetServiceDescriptorRequest struct {
	ServiceId            string   `protobuf:"bytes,1,opt,name=serviceId,proto3" json:"serviceId,omitempty"`
	PublisherId          string   `protobuf:"bytes,2,opt,name=publisherId,proto3" json:"publisherId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetServiceDescriptorRequest) Reset()         { *m = GetServiceDescriptorRequest{} }
func (m *GetServiceDescriptorRequest) String() string { return proto.CompactTextString(m) }
func (*GetServiceDescriptorRequest) ProtoMessage()    {}
func (*GetServiceDescriptorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_20616c573d3cd2a9, []int{8}
}

func (m *GetServiceDescriptorRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetServiceDescriptorRequest.Unmarshal(m, b)
}
func (m *GetServiceDescriptorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetServiceDescriptorRequest.Marshal(b, m, deterministic)
}
func (m *GetServiceDescriptorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetServiceDescriptorRequest.Merge(m, src)
}
func (m *GetServiceDescriptorRequest) XXX_Size() int {
	return xxx_messageInfo_GetServiceDescriptorRequest.Size(m)
}
func (m *GetServiceDescriptorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetServiceDescriptorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetServiceDescriptorRequest proto.InternalMessageInfo

func (m *GetServiceDescriptorRequest) GetServiceId() string {
	if m != nil {
		return m.ServiceId
	}
	return ""
}

func (m *GetServiceDescriptorRequest) GetPublisherId() string {
	if m != nil {
		return m.PublisherId
	}
	return ""
}

type GetServiceDescriptorResponse struct {
	// Return one of more service descriptor with various versions.
	Results              []*ServiceDescriptor `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetServiceDescriptorResponse) Reset()         { *m = GetServiceDescriptorResponse{} }
func (m *GetServiceDescriptorResponse) String() string { return proto.CompactTextString(m) }
func (*GetServiceDescriptorResponse) ProtoMessage()    {}
func (*GetServiceDescriptorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_20616c573d3cd2a9, []int{9}
}

func (m *GetServiceDescriptorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetServiceDescriptorResponse.Unmarshal(m, b)
}
func (m *GetServiceDescriptorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetServiceDescriptorResponse.Marshal(b, m, deterministic)
}
func (m *GetServiceDescriptorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetServiceDescriptorResponse.Merge(m, src)
}
func (m *GetServiceDescriptorResponse) XXX_Size() int {
	return xxx_messageInfo_GetServiceDescriptorResponse.Size(m)
}
func (m *GetServiceDescriptorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetServiceDescriptorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetServiceDescriptorResponse proto.InternalMessageInfo

func (m *GetServiceDescriptorResponse) GetResults() []*ServiceDescriptor {
	if m != nil {
		return m.Results
	}
	return nil
}

type GetServicesDescriptorRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetServicesDescriptorRequest) Reset()         { *m = GetServicesDescriptorRequest{} }
func (m *GetServicesDescriptorRequest) String() string { return proto.CompactTextString(m) }
func (*GetServicesDescriptorRequest) ProtoMessage()    {}
func (*GetServicesDescriptorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_20616c573d3cd2a9, []int{10}
}

func (m *GetServicesDescriptorRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetServicesDescriptorRequest.Unmarshal(m, b)
}
func (m *GetServicesDescriptorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetServicesDescriptorRequest.Marshal(b, m, deterministic)
}
func (m *GetServicesDescriptorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetServicesDescriptorRequest.Merge(m, src)
}
func (m *GetServicesDescriptorRequest) XXX_Size() int {
	return xxx_messageInfo_GetServicesDescriptorRequest.Size(m)
}
func (m *GetServicesDescriptorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetServicesDescriptorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetServicesDescriptorRequest proto.InternalMessageInfo

type GetServicesDescriptorResponse struct {
	Results              []*ServiceDescriptor `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetServicesDescriptorResponse) Reset()         { *m = GetServicesDescriptorResponse{} }
func (m *GetServicesDescriptorResponse) String() string { return proto.CompactTextString(m) }
func (*GetServicesDescriptorResponse) ProtoMessage()    {}
func (*GetServicesDescriptorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_20616c573d3cd2a9, []int{11}
}

func (m *GetServicesDescriptorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetServicesDescriptorResponse.Unmarshal(m, b)
}
func (m *GetServicesDescriptorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetServicesDescriptorResponse.Marshal(b, m, deterministic)
}
func (m *GetServicesDescriptorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetServicesDescriptorResponse.Merge(m, src)
}
func (m *GetServicesDescriptorResponse) XXX_Size() int {
	return xxx_messageInfo_GetServicesDescriptorResponse.Size(m)
}
func (m *GetServicesDescriptorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetServicesDescriptorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetServicesDescriptorResponse proto.InternalMessageInfo

func (m *GetServicesDescriptorResponse) GetResults() []*ServiceDescriptor {
	if m != nil {
		return m.Results
	}
	return nil
}

type FindServicesDescriptorRequest struct {
	Keywords             []string `protobuf:"bytes,1,rep,name=keywords,proto3" json:"keywords,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindServicesDescriptorRequest) Reset()         { *m = FindServicesDescriptorRequest{} }
func (m *FindServicesDescriptorRequest) String() string { return proto.CompactTextString(m) }
func (*FindServicesDescriptorRequest) ProtoMessage()    {}
func (*FindServicesDescriptorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_20616c573d3cd2a9, []int{12}
}

func (m *FindServicesDescriptorRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindServicesDescriptorRequest.Unmarshal(m, b)
}
func (m *FindServicesDescriptorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindServicesDescriptorRequest.Marshal(b, m, deterministic)
}
func (m *FindServicesDescriptorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindServicesDescriptorRequest.Merge(m, src)
}
func (m *FindServicesDescriptorRequest) XXX_Size() int {
	return xxx_messageInfo_FindServicesDescriptorRequest.Size(m)
}
func (m *FindServicesDescriptorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindServicesDescriptorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindServicesDescriptorRequest proto.InternalMessageInfo

func (m *FindServicesDescriptorRequest) GetKeywords() []string {
	if m != nil {
		return m.Keywords
	}
	return nil
}

type FindServicesDescriptorResponse struct {
	Results              []*ServiceDescriptor `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *FindServicesDescriptorResponse) Reset()         { *m = FindServicesDescriptorResponse{} }
func (m *FindServicesDescriptorResponse) String() string { return proto.CompactTextString(m) }
func (*FindServicesDescriptorResponse) ProtoMessage()    {}
func (*FindServicesDescriptorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_20616c573d3cd2a9, []int{13}
}

func (m *FindServicesDescriptorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindServicesDescriptorResponse.Unmarshal(m, b)
}
func (m *FindServicesDescriptorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindServicesDescriptorResponse.Marshal(b, m, deterministic)
}
func (m *FindServicesDescriptorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindServicesDescriptorResponse.Merge(m, src)
}
func (m *FindServicesDescriptorResponse) XXX_Size() int {
	return xxx_messageInfo_FindServicesDescriptorResponse.Size(m)
}
func (m *FindServicesDescriptorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FindServicesDescriptorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FindServicesDescriptorResponse proto.InternalMessageInfo

func (m *FindServicesDescriptorResponse) GetResults() []*ServiceDescriptor {
	if m != nil {
		return m.Results
	}
	return nil
}

func init() {
	proto.RegisterEnum("services.Platform", Platform_name, Platform_value)
	proto.RegisterType((*ServiceDescriptor)(nil), "services.ServiceDescriptor")
	proto.RegisterType((*ServiceBundle)(nil), "services.ServiceBundle")
	proto.RegisterType((*PublishServiceDescriptorRequest)(nil), "services.PublishServiceDescriptorRequest")
	proto.RegisterType((*PublishServiceDescriptorResponse)(nil), "services.PublishServiceDescriptorResponse")
	proto.RegisterType((*UploadBundleRequest)(nil), "services.UploadBundleRequest")
	proto.RegisterType((*UploadBundleResponse)(nil), "services.UploadBundleResponse")
	proto.RegisterType((*DownloadBundleRequest)(nil), "services.DownloadBundleRequest")
	proto.RegisterType((*DownloadBundleResponse)(nil), "services.DownloadBundleResponse")
	proto.RegisterType((*GetServiceDescriptorRequest)(nil), "services.GetServiceDescriptorRequest")
	proto.RegisterType((*GetServiceDescriptorResponse)(nil), "services.GetServiceDescriptorResponse")
	proto.RegisterType((*GetServicesDescriptorRequest)(nil), "services.GetServicesDescriptorRequest")
	proto.RegisterType((*GetServicesDescriptorResponse)(nil), "services.GetServicesDescriptorResponse")
	proto.RegisterType((*FindServicesDescriptorRequest)(nil), "services.FindServicesDescriptorRequest")
	proto.RegisterType((*FindServicesDescriptorResponse)(nil), "services.FindServicesDescriptorResponse")
}

func init() { proto.RegisterFile("services/services.proto", fileDescriptor_20616c573d3cd2a9) }

var fileDescriptor_20616c573d3cd2a9 = []byte{
	// 637 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x55, 0x61, 0x4f, 0xdb, 0x3c,
	0x10, 0x7e, 0xd3, 0x02, 0x6d, 0x8f, 0xbe, 0xa8, 0xf3, 0x80, 0x45, 0x81, 0x96, 0x28, 0xd2, 0x46,
	0x41, 0xa8, 0x9b, 0x52, 0xc6, 0x07, 0xf8, 0x86, 0xd0, 0xa6, 0x4a, 0x53, 0x87, 0x32, 0x75, 0x4c,
	0x93, 0x36, 0x29, 0xad, 0x3d, 0x61, 0x2d, 0xc4, 0xc1, 0x4e, 0x8a, 0xfa, 0x75, 0xff, 0x6a, 0xdb,
	0xcf, 0xd9, 0x1f, 0x99, 0xea, 0x24, 0x4d, 0x4a, 0x93, 0x66, 0x52, 0xbf, 0xd9, 0x77, 0x8f, 0x9f,
	0x7b, 0xee, 0xec, 0x3b, 0xc3, 0x33, 0x41, 0xf8, 0x98, 0x8e, 0x88, 0x78, 0x19, 0x2f, 0x3a, 0x1e,
	0x67, 0x3e, 0x43, 0xd5, 0x78, 0x6f, 0xfc, 0x51, 0xe0, 0xc9, 0x87, 0x70, 0x73, 0x45, 0xc4, 0x88,
	0x53, 0xcf, 0x67, 0x1c, 0x6d, 0x41, 0x89, 0x62, 0x55, 0xd1, 0x95, 0x76, 0xcd, 0x2a, 0x51, 0x8c,
	0x74, 0xd8, 0xf4, 0x82, 0xa1, 0x43, 0xc5, 0x2d, 0xe1, 0x3d, 0xac, 0x96, 0xa4, 0x23, 0x6d, 0x42,
	0x2a, 0x54, 0xc6, 0x84, 0x0b, 0xca, 0x5c, 0xb5, 0x2c, 0xbd, 0xf1, 0x76, 0x7a, 0x16, 0x47, 0xcc,
	0x53, 0xef, 0x5a, 0x78, 0x36, 0x65, 0x42, 0x06, 0xd4, 0x39, 0xf1, 0x98, 0xa0, 0x3e, 0xe3, 0x94,
	0x08, 0x75, 0x5d, 0x2f, 0xb7, 0x6b, 0xd6, 0x9c, 0x4d, 0xb2, 0x50, 0x31, 0x62, 0x63, 0x22, 0x21,
	0x1b, 0x12, 0x92, 0x36, 0x21, 0x0d, 0xaa, 0xdf, 0xc9, 0xe4, 0x81, 0x71, 0x2c, 0xd4, 0x8a, 0x74,
	0xcf, 0xf6, 0xc6, 0x2f, 0x05, 0xfe, 0x8f, 0xb2, 0xbc, 0x0c, 0x5c, 0xec, 0x10, 0x74, 0x01, 0x80,
	0x67, 0xf9, 0xca, 0x4c, 0x37, 0xcd, 0xbd, 0xce, 0xac, 0x4c, 0x0b, 0x25, 0xb1, 0x52, 0xf0, 0xa9,
	0x98, 0x61, 0x40, 0x1d, 0xdc, 0x0f, 0xee, 0x86, 0x84, 0xc7, 0xe5, 0x48, 0x99, 0xd0, 0x09, 0x54,
	0x3c, 0xc7, 0xfe, 0xc6, 0xf8, 0x9d, 0x2c, 0xc7, 0x96, 0x89, 0x12, 0xee, 0x6b, 0xc7, 0xf6, 0xa7,
	0x1e, 0x2b, 0x86, 0xa0, 0x7d, 0xa8, 0x0d, 0xa9, 0x6b, 0x53, 0x99, 0xda, 0xb4, 0x40, 0x75, 0x2b,
	0x31, 0x18, 0x5f, 0xe1, 0xe0, 0x3a, 0xac, 0xf4, 0xa2, 0x2a, 0x72, 0x1f, 0x10, 0xe1, 0xaf, 0x94,
	0x8d, 0x71, 0x0e, 0x7a, 0x3e, 0xbf, 0xf0, 0x98, 0x2b, 0x08, 0xda, 0x85, 0x0d, 0x4e, 0x44, 0xe0,
	0xf8, 0x92, 0xbc, 0x6a, 0x45, 0x3b, 0xe3, 0x08, 0x9e, 0x0e, 0x3c, 0x87, 0xd9, 0x38, 0x2c, 0x6b,
	0xac, 0x07, 0xc1, 0x1a, 0xb6, 0x7d, 0x5b, 0x82, 0xeb, 0x96, 0x5c, 0x1b, 0x1d, 0xd8, 0x9e, 0x87,
	0x16, 0x50, 0xff, 0x50, 0x60, 0xe7, 0x8a, 0x3d, 0xb8, 0x8b, 0xec, 0x2b, 0xdd, 0x5d, 0xea, 0x66,
	0x4a, 0x85, 0x37, 0x63, 0x9c, 0xc0, 0xee, 0x63, 0x0d, 0x91, 0xec, 0xac, 0x14, 0xbf, 0xc0, 0xde,
	0x5b, 0xe2, 0xe7, 0xde, 0xd2, 0x3e, 0xd4, 0xa2, 0x50, 0xbd, 0xb8, 0xb9, 0x12, 0x43, 0x71, 0x8f,
	0x19, 0x03, 0xd8, 0xcf, 0xa6, 0x8f, 0x24, 0xbd, 0x86, 0x4a, 0x58, 0x3b, 0xa1, 0x2a, 0x7a, 0xb9,
	0xa8, 0x28, 0x31, 0xd6, 0x68, 0xa5, 0x69, 0xc5, 0x82, 0x6c, 0xe3, 0x23, 0x34, 0x73, 0xfc, 0xab,
	0xc5, 0xbd, 0x80, 0xe6, 0x1b, 0xea, 0xe2, 0xdc, 0xc0, 0x73, 0x1d, 0xad, 0x3c, 0xea, 0xe8, 0x1b,
	0x68, 0xe5, 0x1d, 0x5e, 0x49, 0xd5, 0xf1, 0x39, 0x54, 0xe3, 0x67, 0x80, 0x36, 0xa1, 0xf2, 0xae,
	0xd7, 0x1f, 0x7c, 0xea, 0x9a, 0x8d, 0xff, 0x66, 0x9b, 0xb3, 0xd3, 0x86, 0x82, 0x6a, 0xb0, 0x7e,
	0xd3, 0xeb, 0x77, 0xcd, 0x46, 0x29, 0x5a, 0x9e, 0x9d, 0x36, 0xca, 0xe6, 0xcf, 0x32, 0x34, 0x62,
	0xea, 0x68, 0x32, 0x4d, 0x90, 0x0d, 0xf5, 0xb4, 0x52, 0x74, 0x98, 0xc8, 0x58, 0x9a, 0xbe, 0xd6,
	0x2e, 0x06, 0x46, 0xa9, 0x12, 0xd8, 0xce, 0x7a, 0x18, 0xe8, 0x79, 0xc2, 0xb0, 0xe4, 0x5d, 0x6a,
	0x2f, 0x8a, 0x60, 0x51, 0x98, 0x5b, 0xd8, 0xc9, 0x7c, 0x08, 0x28, 0x93, 0x20, 0x23, 0xa3, 0xc3,
	0x42, 0x5c, 0x14, 0xe9, 0x1e, 0x54, 0x2f, 0x67, 0x24, 0xa1, 0xa3, 0x54, 0xbf, 0x2e, 0x1f, 0x8b,
	0xda, 0xf1, 0xbf, 0x40, 0xc3, 0x90, 0xe6, 0xef, 0xe4, 0x23, 0xb4, 0xe2, 0x8f, 0x67, 0x82, 0x06,
	0xb0, 0x85, 0xe7, 0xfa, 0x1f, 0x1d, 0x24, 0x9c, 0x99, 0xd3, 0x49, 0xd3, 0xf3, 0x01, 0x61, 0xa8,
	0x57, 0x0a, 0x7a, 0x0f, 0xf5, 0x20, 0x35, 0x0b, 0x51, 0x33, 0x39, 0x93, 0x31, 0x4e, 0xb5, 0x56,
	0x9e, 0x3b, 0x24, 0x6c, 0x2b, 0x97, 0xf0, 0x79, 0xf6, 0xa5, 0x0f, 0x37, 0xe4, 0x1f, 0xdf, 0xfd,
	0x1b, 0x00, 0x00, 0xff, 0xff, 0x51, 0xc1, 0xf8, 0xda, 0xfe, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ServiceDiscoveryClient is the client API for ServiceDiscovery service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServiceDiscoveryClient interface {
	//* Search service by keywords *
	FindServices(ctx context.Context, in *FindServicesDescriptorRequest, opts ...grpc.CallOption) (*FindServicesDescriptorResponse, error)
	//* Return the list of all services *
	GetServiceDescriptor(ctx context.Context, in *GetServiceDescriptorRequest, opts ...grpc.CallOption) (*GetServiceDescriptorResponse, error)
	//* Return the list of all services *
	GetServicesDescriptor(ctx context.Context, in *GetServicesDescriptorRequest, opts ...grpc.CallOption) (*GetServicesDescriptorResponse, error)
	//* Publish a service to service discovery *
	PublishServiceDescriptor(ctx context.Context, in *PublishServiceDescriptorRequest, opts ...grpc.CallOption) (*PublishServiceDescriptorResponse, error)
}

type serviceDiscoveryClient struct {
	cc *grpc.ClientConn
}

func NewServiceDiscoveryClient(cc *grpc.ClientConn) ServiceDiscoveryClient {
	return &serviceDiscoveryClient{cc}
}

func (c *serviceDiscoveryClient) FindServices(ctx context.Context, in *FindServicesDescriptorRequest, opts ...grpc.CallOption) (*FindServicesDescriptorResponse, error) {
	out := new(FindServicesDescriptorResponse)
	err := c.cc.Invoke(ctx, "/services.ServiceDiscovery/FindServices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceDiscoveryClient) GetServiceDescriptor(ctx context.Context, in *GetServiceDescriptorRequest, opts ...grpc.CallOption) (*GetServiceDescriptorResponse, error) {
	out := new(GetServiceDescriptorResponse)
	err := c.cc.Invoke(ctx, "/services.ServiceDiscovery/GetServiceDescriptor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceDiscoveryClient) GetServicesDescriptor(ctx context.Context, in *GetServicesDescriptorRequest, opts ...grpc.CallOption) (*GetServicesDescriptorResponse, error) {
	out := new(GetServicesDescriptorResponse)
	err := c.cc.Invoke(ctx, "/services.ServiceDiscovery/GetServicesDescriptor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceDiscoveryClient) PublishServiceDescriptor(ctx context.Context, in *PublishServiceDescriptorRequest, opts ...grpc.CallOption) (*PublishServiceDescriptorResponse, error) {
	out := new(PublishServiceDescriptorResponse)
	err := c.cc.Invoke(ctx, "/services.ServiceDiscovery/publishServiceDescriptor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServiceDiscoveryServer is the server API for ServiceDiscovery service.
type ServiceDiscoveryServer interface {
	//* Search service by keywords *
	FindServices(context.Context, *FindServicesDescriptorRequest) (*FindServicesDescriptorResponse, error)
	//* Return the list of all services *
	GetServiceDescriptor(context.Context, *GetServiceDescriptorRequest) (*GetServiceDescriptorResponse, error)
	//* Return the list of all services *
	GetServicesDescriptor(context.Context, *GetServicesDescriptorRequest) (*GetServicesDescriptorResponse, error)
	//* Publish a service to service discovery *
	PublishServiceDescriptor(context.Context, *PublishServiceDescriptorRequest) (*PublishServiceDescriptorResponse, error)
}

// UnimplementedServiceDiscoveryServer can be embedded to have forward compatible implementations.
type UnimplementedServiceDiscoveryServer struct {
}

func (*UnimplementedServiceDiscoveryServer) FindServices(ctx context.Context, req *FindServicesDescriptorRequest) (*FindServicesDescriptorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindServices not implemented")
}
func (*UnimplementedServiceDiscoveryServer) GetServiceDescriptor(ctx context.Context, req *GetServiceDescriptorRequest) (*GetServiceDescriptorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetServiceDescriptor not implemented")
}
func (*UnimplementedServiceDiscoveryServer) GetServicesDescriptor(ctx context.Context, req *GetServicesDescriptorRequest) (*GetServicesDescriptorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetServicesDescriptor not implemented")
}
func (*UnimplementedServiceDiscoveryServer) PublishServiceDescriptor(ctx context.Context, req *PublishServiceDescriptorRequest) (*PublishServiceDescriptorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PublishServiceDescriptor not implemented")
}

func RegisterServiceDiscoveryServer(s *grpc.Server, srv ServiceDiscoveryServer) {
	s.RegisterService(&_ServiceDiscovery_serviceDesc, srv)
}

func _ServiceDiscovery_FindServices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindServicesDescriptorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceDiscoveryServer).FindServices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.ServiceDiscovery/FindServices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceDiscoveryServer).FindServices(ctx, req.(*FindServicesDescriptorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceDiscovery_GetServiceDescriptor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetServiceDescriptorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceDiscoveryServer).GetServiceDescriptor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.ServiceDiscovery/GetServiceDescriptor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceDiscoveryServer).GetServiceDescriptor(ctx, req.(*GetServiceDescriptorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceDiscovery_GetServicesDescriptor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetServicesDescriptorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceDiscoveryServer).GetServicesDescriptor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.ServiceDiscovery/GetServicesDescriptor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceDiscoveryServer).GetServicesDescriptor(ctx, req.(*GetServicesDescriptorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceDiscovery_PublishServiceDescriptor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PublishServiceDescriptorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceDiscoveryServer).PublishServiceDescriptor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.ServiceDiscovery/PublishServiceDescriptor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceDiscoveryServer).PublishServiceDescriptor(ctx, req.(*PublishServiceDescriptorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ServiceDiscovery_serviceDesc = grpc.ServiceDesc{
	ServiceName: "services.ServiceDiscovery",
	HandlerType: (*ServiceDiscoveryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FindServices",
			Handler:    _ServiceDiscovery_FindServices_Handler,
		},
		{
			MethodName: "GetServiceDescriptor",
			Handler:    _ServiceDiscovery_GetServiceDescriptor_Handler,
		},
		{
			MethodName: "GetServicesDescriptor",
			Handler:    _ServiceDiscovery_GetServicesDescriptor_Handler,
		},
		{
			MethodName: "publishServiceDescriptor",
			Handler:    _ServiceDiscovery_PublishServiceDescriptor_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "services/services.proto",
}

// ServiceRepositoryClient is the client API for ServiceRepository service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServiceRepositoryClient interface {
	//* Download a service from a service directory *
	DownloadBundle(ctx context.Context, in *DownloadBundleRequest, opts ...grpc.CallOption) (ServiceRepository_DownloadBundleClient, error)
	//* Upload a service to a service directory *
	UploadBundle(ctx context.Context, opts ...grpc.CallOption) (ServiceRepository_UploadBundleClient, error)
}

type serviceRepositoryClient struct {
	cc *grpc.ClientConn
}

func NewServiceRepositoryClient(cc *grpc.ClientConn) ServiceRepositoryClient {
	return &serviceRepositoryClient{cc}
}

func (c *serviceRepositoryClient) DownloadBundle(ctx context.Context, in *DownloadBundleRequest, opts ...grpc.CallOption) (ServiceRepository_DownloadBundleClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ServiceRepository_serviceDesc.Streams[0], "/services.ServiceRepository/downloadBundle", opts...)
	if err != nil {
		return nil, err
	}
	x := &serviceRepositoryDownloadBundleClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ServiceRepository_DownloadBundleClient interface {
	Recv() (*DownloadBundleResponse, error)
	grpc.ClientStream
}

type serviceRepositoryDownloadBundleClient struct {
	grpc.ClientStream
}

func (x *serviceRepositoryDownloadBundleClient) Recv() (*DownloadBundleResponse, error) {
	m := new(DownloadBundleResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *serviceRepositoryClient) UploadBundle(ctx context.Context, opts ...grpc.CallOption) (ServiceRepository_UploadBundleClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ServiceRepository_serviceDesc.Streams[1], "/services.ServiceRepository/uploadBundle", opts...)
	if err != nil {
		return nil, err
	}
	x := &serviceRepositoryUploadBundleClient{stream}
	return x, nil
}

type ServiceRepository_UploadBundleClient interface {
	Send(*UploadBundleRequest) error
	CloseAndRecv() (*UploadBundleResponse, error)
	grpc.ClientStream
}

type serviceRepositoryUploadBundleClient struct {
	grpc.ClientStream
}

func (x *serviceRepositoryUploadBundleClient) Send(m *UploadBundleRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *serviceRepositoryUploadBundleClient) CloseAndRecv() (*UploadBundleResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(UploadBundleResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ServiceRepositoryServer is the server API for ServiceRepository service.
type ServiceRepositoryServer interface {
	//* Download a service from a service directory *
	DownloadBundle(*DownloadBundleRequest, ServiceRepository_DownloadBundleServer) error
	//* Upload a service to a service directory *
	UploadBundle(ServiceRepository_UploadBundleServer) error
}

// UnimplementedServiceRepositoryServer can be embedded to have forward compatible implementations.
type UnimplementedServiceRepositoryServer struct {
}

func (*UnimplementedServiceRepositoryServer) DownloadBundle(req *DownloadBundleRequest, srv ServiceRepository_DownloadBundleServer) error {
	return status.Errorf(codes.Unimplemented, "method DownloadBundle not implemented")
}
func (*UnimplementedServiceRepositoryServer) UploadBundle(srv ServiceRepository_UploadBundleServer) error {
	return status.Errorf(codes.Unimplemented, "method UploadBundle not implemented")
}

func RegisterServiceRepositoryServer(s *grpc.Server, srv ServiceRepositoryServer) {
	s.RegisterService(&_ServiceRepository_serviceDesc, srv)
}

func _ServiceRepository_DownloadBundle_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(DownloadBundleRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ServiceRepositoryServer).DownloadBundle(m, &serviceRepositoryDownloadBundleServer{stream})
}

type ServiceRepository_DownloadBundleServer interface {
	Send(*DownloadBundleResponse) error
	grpc.ServerStream
}

type serviceRepositoryDownloadBundleServer struct {
	grpc.ServerStream
}

func (x *serviceRepositoryDownloadBundleServer) Send(m *DownloadBundleResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _ServiceRepository_UploadBundle_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ServiceRepositoryServer).UploadBundle(&serviceRepositoryUploadBundleServer{stream})
}

type ServiceRepository_UploadBundleServer interface {
	SendAndClose(*UploadBundleResponse) error
	Recv() (*UploadBundleRequest, error)
	grpc.ServerStream
}

type serviceRepositoryUploadBundleServer struct {
	grpc.ServerStream
}

func (x *serviceRepositoryUploadBundleServer) SendAndClose(m *UploadBundleResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *serviceRepositoryUploadBundleServer) Recv() (*UploadBundleRequest, error) {
	m := new(UploadBundleRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _ServiceRepository_serviceDesc = grpc.ServiceDesc{
	ServiceName: "services.ServiceRepository",
	HandlerType: (*ServiceRepositoryServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "downloadBundle",
			Handler:       _ServiceRepository_DownloadBundle_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "uploadBundle",
			Handler:       _ServiceRepository_UploadBundle_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "services/services.proto",
}
